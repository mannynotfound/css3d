// THREE.JS - V58
var window=window||{},self=self||{};void 0===window.performance&&(window.performance={}),void 0===window.performance.now&&(void 0!==process&&void 0!==process.hrtime?window.performance.now=function(){var a=process.hrtime();return 1e3*(a[0]+a[1]/1e9)}:window.performance.now=function(){return(new Date).getTime()});var THREE=THREE||{REVISION:"58"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},self.Int32Array=self.Int32Array||Array,self.Float32Array=self.Float32Array||Array,String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},THREE.extend=function(a,b){if(Object.keys)for(var c=Object.keys(b),d=0,e=c.length;d<e;d++){var f=c[d];Object.defineProperty(a,f,Object.getOwnPropertyDescriptor(b,f))}else{var g={}.hasOwnProperty;for(var f in b)g.call(b,f)&&(a[f]=b[f])}return a},function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),d=Math.max(0,16-(c-a)),e=window.setTimeout(function(){b(c+d)},d);return a=c+d,e}),window.cancelAnimationFrame=window.cancelAnimationFrame||function(a){window.clearTimeout(a)}}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(a){return void 0!==a&&this.set(a),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){return a instanceof THREE.Color?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this},setHex:function(a){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,this},setRGB:function(a,b,c){return this.r=a,this.g=b,this.b=c,this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){return c<0&&(c+=1),c>1&&(c-=1),c<1/6?a+6*(b-a)*c:c<.5?b:c<2/3?a+6*(b-a)*(2/3-c):a},e=c<=.5?c*(1+b):c+b-c*b,f=2*c-e;this.r=d(f,e,a+1/3),this.g=d(f,e,a),this.b=d(f,e,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(a)){var b=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(a);return this.r=Math.min(255,parseInt(b[1],10))/255,this.g=Math.min(255,parseInt(b[2],10))/255,this.b=Math.min(255,parseInt(b[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(a)){var b=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(a);return this.r=Math.min(100,parseInt(b[1],10))/100,this.g=Math.min(100,parseInt(b[2],10))/100,this.b=Math.min(100,parseInt(b[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(a)){var b=/^\#([0-9a-f]{6})$/i.exec(a);return this.setHex(parseInt(b[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a)){var b=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a);return this.setHex(parseInt(b[1]+b[1]+b[2]+b[2]+b[3]+b[3],16)),this}if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){return this.r=a.r,this.g=a.g,this.b=a.b,this},copyGammaToLinear:function(a){return this.r=a.r*a.r,this.g=a.g*a.g,this.b=a.b*a.b,this},copyLinearToGamma:function(a){return this.r=Math.sqrt(a.r),this.g=Math.sqrt(a.g),this.b=Math.sqrt(a.b),this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;return this.r=a*a,this.g=b*b,this.b=c*c,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(){var a={h:0,s:0,l:0};return function(){var g,h,b=this.r,c=this.g,d=this.b,e=Math.max(b,c,d),f=Math.min(b,c,d),i=(f+e)/2;if(f===e)g=0,h=0;else{var j=e-f;switch(h=i<=.5?j/(e+f):j/(2-e-f),e){case b:g=(c-d)/j+(c<d?6:0);break;case c:g=(d-b)/j+2;break;case d:g=(b-c)/j+4}g/=6}return a.h=g,a.s=h,a.l=i,a}}(),getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,b,c){var d=this.getHSL();return d.h+=a,d.s+=b,d.l+=c,this.setHSL(d.h,d.s,d.l),this},add:function(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this},addColors:function(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this},addScalar:function(a){return this.r+=a,this.g+=a,this.b+=a,this},multiply:function(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this},multiplyScalar:function(a){return this.r*=a,this.g*=a,this.b*=a,this},lerp:function(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(a,b,c,d){this.x=a||0,this.y=b||0,this.z=c||0,this.w=void 0!==d?d:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=a.w,this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),e=Math.cos(a.z/2),f=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);return void 0===b||"XYZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"YXZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e+f*g*h):"ZXY"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"ZYX"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e+f*g*h):"YZX"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e-f*g*h):"XZY"===b&&(this.x=f*d*e-c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e+f*g*h),this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);return this.x=a.x*d,this.y=a.y*d,this.z=a.z*d,this.w=Math.cos(c),this},setFromRotationMatrix:function(a){var m,b=a.elements,c=b[0],d=b[4],e=b[8],f=b[1],g=b[5],h=b[9],i=b[2],j=b[6],k=b[10],l=c+g+k;return l>0?(m=.5/Math.sqrt(l+1),this.w=.25/m,this.x=(j-h)*m,this.y=(e-i)*m,this.z=(f-d)*m):c>g&&c>k?(m=2*Math.sqrt(1+c-g-k),this.w=(j-h)/m,this.x=.25*m,this.y=(d+f)/m,this.z=(e+i)/m):g>k?(m=2*Math.sqrt(1+g-c-k),this.w=(e-i)/m,this.x=(d+f)/m,this.y=.25*m,this.z=(h+j)/m):(m=2*Math.sqrt(1+k-c-g),this.w=(f-d)/m,this.x=(e+i)/m,this.y=(h+j)/m,this.z=.25*m),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=this.length();return 0===a?(this.x=0,this.y=0,this.z=0,this.w=1):(a=1/a,this.x=this.x*a,this.y=this.y*a,this.z=this.z*a,this.w=this.w*a),this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a.x,d=a.y,e=a.z,f=a.w,g=b.x,h=b.y,i=b.z,j=b.w;return this.x=c*j+f*g+d*i-e*h,this.y=d*j+f*h+e*g-c*i,this.z=e*j+f*i+c*h-d*g,this.w=f*j-c*g-d*h-e*i,this},multiplyVector3:function(a){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},slerp:function(a,b){var c=this.x,d=this.y,e=this.z,f=this.w,g=f*a.w+c*a.x+d*a.y+e*a.z;if(g<0?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a),g>=1)return this.w=f,this.x=c,this.y=d,this.z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);if(Math.abs(i)<.001)return this.w=.5*(f+this.w),this.x=.5*(c+this.x),this.y=.5*(d+this.y),this.z=.5*(e+this.z),this;var j=Math.sin((1-b)*h)/i,k=Math.sin(b*h)/i;return this.w=f*j+this.w*k,this.x=c*j+this.x*k,this.y=d*j+this.y*k,this.z=e*j+this.z*k,this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a){return this.x=a[0],this.y=a[1],this.z=a[2],this.w=a[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)},THREE.Vector2=function(a,b){this.x=a||0,this.y=b||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){return this.x=a,this.y=b,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addScalar:function(a){return this.x+=a,this.y+=a,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this},divideScalar:function(a){return 0!==a?(this.x/=a,this.y/=a):this.set(0,0),this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;return b*b+c*c},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a){return this.x=a[0],this.y=a[1],this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(a,b,c){this.x=a||0,this.y=b||0,this.z=c||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){return this.x=a,this.y=b,this.z=c,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this},multiplyVectors:function(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this},applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d+e[12],this.y=e[1]*b+e[5]*c+e[9]*d+e[13],this.z=e[2]*b+e[6]*c+e[10]*d+e[14],this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+l*-e+j*-g-k*-f,this.y=j*h+l*-f+k*-e-i*-g,this.z=k*h+l*-g+i*-f-j*-e,this},transformDirection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize(),this},divide:function(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this},divideScalar:function(a){return 0!==a?(this.x/=a,this.y/=a,this.z/=a):(this.x=0,this.y=0,this.z=0),this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this},cross:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;return this.x=d*a.z-e*a.y,this.y=e*a.x-c*a.z,this.z=c*a.y-d*a.x,this},crossVectors:function(a,b){return this.x=a.y*b.z-a.z*b.y,this.y=a.z*b.x-a.x*b.z,this.z=a.x*b.y-a.y*b.x,this},angleTo:function(a){var b=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],i=d[5],j=d[9],k=d[2],l=d[6],m=d[10];return void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),Math.abs(g)<.99999?(this.x=Math.atan2(-j,m),this.z=Math.atan2(-f,e)):(this.x=Math.atan2(l,i),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(j)),Math.abs(j)<.99999?(this.y=Math.atan2(g,m),this.z=Math.atan2(h,i)):(this.y=Math.atan2(-k,e),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(l)),Math.abs(l)<.99999?(this.y=Math.atan2(-k,m),this.z=Math.atan2(-f,i)):(this.y=0,this.z=Math.atan2(h,e))):"ZYX"===b?(this.y=Math.asin(-c(k)),Math.abs(k)<.99999?(this.x=Math.atan2(l,m),this.z=Math.atan2(h,e)):(this.x=0,this.z=Math.atan2(-f,i))):"YZX"===b?(this.z=Math.asin(c(h)),Math.abs(h)<.99999?(this.x=Math.atan2(-j,i),this.y=Math.atan2(-k,e)):(this.x=0,this.y=Math.atan2(g,m))):"XZY"===b&&(this.z=Math.asin(-c(f)),Math.abs(f)<.99999?(this.x=Math.atan2(l,i),this.y=Math.atan2(g,e)):(this.x=Math.atan2(-j,m),this.y=0)),this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,e=a.y*a.y,f=a.z*a.z,g=a.w*a.w;return void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-e+f),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-e-f)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g-d-e+f),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+e-f)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-e+f),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+e-f)):"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-e+f),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-e-f)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+e-f),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-e-f),this.z=Math.asin(c(2*(a.x*a.y+a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+e-f),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-e-f),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y)))),this},getPositionFromMatrix:function(a){return this.x=a.elements[12],this.y=a.elements[13],this.z=a.elements[14],this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),d=this.set(a.elements[8],a.elements[9],a.elements[10]).length();return this.x=b,this.y=c,this.z=d,this},getColumnFromMatrix:function(a,b){var c=4*a,d=b.elements;return this.x=d[c],this.y=d[c+1],this.z=d[c+2],this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a){return this.x=a[0],this.y=a[1],this.z=a[2],this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.extend(THREE.Vector3.prototype,{applyEuler:function(){var a=new THREE.Quaternion;return function(b,c){var d=a.setFromEuler(b,c);return this.applyQuaternion(d),this}}(),applyAxisAngle:function(){var a=new THREE.Quaternion;return function(b,c){var d=a.setFromAxisAngle(b,c);return this.applyQuaternion(d),this}}(),projectOnVector:function(){var a=new THREE.Vector3;return function(b){a.copy(b).normalize();var c=this.dot(a);return this.copy(a).multiplyScalar(c)}}(),projectOnPlane:function(){var a=new THREE.Vector3;return function(b){return a.copy(this).projectOnVector(b),this.sub(a)}}(),reflect:function(){var a=new THREE.Vector3;return function(b){return a.copy(this).projectOnVector(b).multiplyScalar(2),this.subVectors(a,this)}}()}),THREE.Vector4=function(a,b,c,d){this.x=a||0,this.y=b||0,this.z=c||0,this.w=void 0!==d?d:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setW:function(a){return this.w=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this},add:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this},sub:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e,this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e,this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e,this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e,this},divideScalar:function(a){return 0!==a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.x=0,this.y=0,this.z=0,this.w=1),this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);return b<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,e,f=.01,g=.1,h=a.elements,i=h[0],j=h[4],k=h[8],l=h[1],m=h[5],n=h[9],o=h[2],p=h[6],q=h[10];if(Math.abs(j-l)<f&&Math.abs(k-o)<f&&Math.abs(n-p)<f){if(Math.abs(j+l)<g&&Math.abs(k+o)<g&&Math.abs(n+p)<g&&Math.abs(i+m+q-3)<g)return this.set(1,0,0,0),this;b=Math.PI;var r=(i+1)/2,s=(m+1)/2,t=(q+1)/2,u=(j+l)/4,v=(k+o)/4,w=(n+p)/4;return r>s&&r>t?r<f?(c=0,d=.707106781,e=.707106781):(c=Math.sqrt(r),d=u/c,e=v/c):s>t?s<f?(c=.707106781,d=0,e=.707106781):(d=Math.sqrt(s),c=u/d,e=w/d):t<f?(c=.707106781,d=.707106781,e=0):(e=Math.sqrt(t),c=v/e,d=w/e),this.set(c,d,e,b),this}var x=Math.sqrt((p-n)*(p-n)+(k-o)*(k-o)+(l-j)*(l-j));return Math.abs(x)<.001&&(x=1),this.x=(p-n)/x,this.y=(k-o)/x,this.z=(l-j)/x,this.w=Math.acos((i+m+q-1)/2),this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this.w>a.w&&(this.w=a.w),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this.w<a.w&&(this.w=a.w),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a){return this.x=a[0],this.y=a[1],this.z=a[2],this.w=a[3],this},toArray:function(){return[this.x,this.y,this.z,this.w]},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3,this.end=void 0!==b?b:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){return this.start.copy(a),this.end.copy(b),this},copy:function(a){return this.start.copy(a.start),this.end.copy(a.end),this},center:function(a){var b=a||new THREE.Vector3;return b.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){var b=a||new THREE.Vector3;return b.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start),b.subVectors(this.end,this.start);var e=b.dot(b),f=b.dot(a),g=f/e;return d&&(g=THREE.Math.clamp(g,0,1)),g}}(),closestPointToPoint:function(a,b,c){var d=this.closestPointToPointParameter(a,b),e=c||new THREE.Vector3;return this.delta(e).multiplyScalar(d).add(this.start)},applyMatrix4:function(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(1/0,1/0),this.max=void 0!==b?b:new THREE.Vector2(-(1/0),-(1/0))},THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},setFromPoints:function(a){if(a.length>0){var b=a[0];this.min.copy(b),this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);return this.min.copy(b).sub(d),this.max.copy(b).add(d),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){var b=a||new THREE.Vector2;return b.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){var b=a||new THREE.Vector2;return b.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return!(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y)},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y},getParameter:function(a){return new THREE.Vector2((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return!(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y)},clampPoint:function(a,b){var c=b||new THREE.Vector2;return c.copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==b?b:new THREE.Vector3(-(1/0),-(1/0),-(1/0))},THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},setFromPoints:function(a){if(a.length>0){var b=a[0];this.min.copy(b),this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y),
b.z<this.min.z?this.min.z=b.z:b.z>this.max.z&&(this.max.z=b.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);return this.min.copy(b).sub(d),this.max.copy(b).add(d),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){var b=a||new THREE.Vector3;return b.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){var b=a||new THREE.Vector3;return b.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return!(a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z)},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z},getParameter:function(a){return new THREE.Vector3((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return!(a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z)},clampPoint:function(a,b){var c=b||new THREE.Vector3;return c.copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){var c=b||new THREE.Sphere;return c.center=this.center(),c.radius=.5*this.size(a).length(),c}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){return a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b),a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b),a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b),a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b),a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b),a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b),a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b),a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b),this.makeEmpty(),this.setFromPoints(a),this}}(),translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(a,b,c,d,e,f,g,h,i){this.elements=new Float32Array(9),this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==e?e:1,f||0,g||0,h||0,void 0!==i?i:1)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,i){var j=this.elements;return j[0]=a,j[3]=b,j[6]=c,j[1]=d,j[4]=e,j[7]=f,j[2]=g,j[5]=h,j[8]=i,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(a){var b=a.elements;return this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]),this},multiplyVector3:function(a){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyMatrix3(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9],d[1]=-c[10]*c[1]+c[2]*c[9],d[2]=c[6]*c[1]-c[2]*c[5],d[3]=-c[10]*c[4]+c[6]*c[8],d[4]=c[10]*c[0]-c[2]*c[8],d[5]=-c[6]*c[0]+c[2]*c[4],d[6]=c[9]*c[4]-c[5]*c[8],d[7]=-c[9]*c[0]+c[1]*c[8],d[8]=c[5]*c[0]-c[1]*c[4];var e=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===e){var f="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(b)throw new Error(f);return console.warn(f),this.identity(),this}return this.multiplyScalar(1/e),this},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this},getNormalMatrix:function(a){return this.getInverse(a).transpose(),this},transposeIntoArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}},THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements=new Float32Array(16);q[0]=void 0!==a?a:1,q[4]=b||0,q[8]=c||0,q[12]=d||0,q[1]=e||0,q[5]=void 0!==f?f:1,q[9]=g||0,q[13]=h||0,q[2]=i||0,q[6]=j||0,q[10]=void 0!==k?k:1,q[14]=l||0,q[3]=m||0,q[7]=n||0,q[11]=o||0,q[15]=void 0!==p?p:1},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(a){var b=a.elements;return this.set(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15]),this},extractPosition:function(a){return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(a)},copyPosition:function(a){var b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements,d=b.elements,e=1/a.set(d[0],d[1],d[2]).length(),f=1/a.set(d[4],d[5],d[6]).length(),g=1/a.set(d[8],d[9],d[10]).length();return c[0]=d[0]*e,c[1]=d[1]*e,c[2]=d[2]*e,c[4]=d[4]*f,c[5]=d[5]*f,c[6]=d[6]*f,c[8]=d[8]*g,c[9]=d[9]*g,c[10]=d[10]*g,this}}(),setRotationFromEuler:function(a,b){return console.warn("DEPRECATED: Matrix4's .setRotationFromEuler() has been deprecated in favor of makeRotationFromEuler.  Please update your code."),this.makeRotationFromEuler(a,b)},makeRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),h=Math.sin(d),i=Math.cos(e),j=Math.sin(e),k=Math.cos(f),l=Math.sin(f);if(void 0===b||"XYZ"===b){var m=g*k,n=g*l,o=h*k,p=h*l;c[0]=i*k,c[4]=-i*l,c[8]=j,c[1]=n+o*j,c[5]=m-p*j,c[9]=-h*i,c[2]=p-m*j,c[6]=o+n*j,c[10]=g*i}else if("YXZ"===b){var q=i*k,r=i*l,s=j*k,t=j*l;c[0]=q+t*h,c[4]=s*h-r,c[8]=g*j,c[1]=g*l,c[5]=g*k,c[9]=-h,c[2]=r*h-s,c[6]=t+q*h,c[10]=g*i}else if("ZXY"===b){var q=i*k,r=i*l,s=j*k,t=j*l;c[0]=q-t*h,c[4]=-g*l,c[8]=s+r*h,c[1]=r+s*h,c[5]=g*k,c[9]=t-q*h,c[2]=-g*j,c[6]=h,c[10]=g*i}else if("ZYX"===b){var m=g*k,n=g*l,o=h*k,p=h*l;c[0]=i*k,c[4]=o*j-n,c[8]=m*j+p,c[1]=i*l,c[5]=p*j+m,c[9]=n*j-o,c[2]=-j,c[6]=h*i,c[10]=g*i}else if("YZX"===b){var u=g*i,v=g*j,w=h*i,x=h*j;c[0]=i*k,c[4]=x-u*l,c[8]=w*l+v,c[1]=l,c[5]=g*k,c[9]=-h*k,c[2]=-j*k,c[6]=v*l+w,c[10]=u-x*l}else if("XZY"===b){var u=g*i,v=g*j,w=h*i,x=h*j;c[0]=i*k,c[4]=-l,c[8]=j*k,c[1]=u*l+x,c[5]=g*k,c[9]=v*l-w,c[2]=w*l-v,c[6]=h*k,c[10]=x*l+u}return c[3]=0,c[7]=0,c[11]=0,c[12]=0,c[13]=0,c[14]=0,c[15]=1,this},setRotationFromQuaternion:function(a){return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."),this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,j=c*g,k=c*h,l=c*i,m=d*h,n=d*i,o=e*i,p=f*g,q=f*h,r=f*i;return b[0]=1-(m+o),b[4]=k-r,b[8]=l+q,b[1]=k+r,b[5]=1-(j+o),b[9]=n-p,b[2]=l-q,b[6]=n+p,b[10]=1-(j+m),b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var g=this.elements;return c.subVectors(d,e).normalize(),0===c.length()&&(c.z=1),a.crossVectors(f,c).normalize(),0===a.length()&&(c.x+=1e-4,a.crossVectors(f,c).normalize()),b.crossVectors(c,a),g[0]=a.x,g[4]=b.x,g[8]=c.x,g[1]=a.y,g[5]=b.y,g[9]=c.y,g[2]=a.z,g[6]=b.z,g[10]=c.z,this}}(),multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this},multiplyToArray:function(a,b,c){var d=this.elements;return this.multiplyMatrices(a,b),c[0]=d[0],c[1]=d[1],c[2]=d[2],c[3]=d[3],c[4]=d[4],c[5]=d[5],c[6]=d[6],c[7]=d[7],c[8]=d[8],c[9]=d[9],c[10]=d[10],c[11]=d[11],c[12]=d[12],c[13]=d[13],c[14]=d[14],c[15]=d[15],this},multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this},multiplyVector3:function(a){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),a.applyProjection(this)},multiplyVector4:function(a){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},multiplyVector3Array:function(){var a=new THREE.Vector3;return function(b){for(var c=0,d=b.length;c<d;c+=3)a.x=b[c],a.y=b[c+1],a.z=b[c+2],a.applyProjection(this),b[c]=a.x,b[c+1]=a.y,b[c+2]=a.z;return b}}(),rotateAxis:function(a){console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),a.transformDirection(this)},crossVector:function(a){return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)},transpose:function(){var b,a=this.elements;return b=a[1],a[1]=a[4],a[4]=b,b=a[2],a[2]=a[8],a[8]=b,b=a[6],a[6]=a[9],a[9]=b,b=a[3],a[3]=a[12],a[12]=b,b=a[7],a[7]=a[13],a[13]=b,b=a[11],a[11]=a[14],a[14]=b,this},flattenToArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},flattenToArrayOffset:function(a,b){var c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a},getPosition:function(){var a=new THREE.Vector3;return function(){console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.getPositionFromMatrix( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;return b[12]=a.x,b[13]=a.y,b[14]=a.z,this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],i=d[1],j=d[5],k=d[9],l=d[13],m=d[2],n=d[6],o=d[10],p=d[14],q=d[3],r=d[7],s=d[11],t=d[15];c[0]=k*p*r-l*o*r+l*n*s-j*p*s-k*n*t+j*o*t,c[4]=h*o*r-g*p*r-h*n*s+f*p*s+g*n*t-f*o*t,c[8]=g*l*r-h*k*r+h*j*s-f*l*s-g*j*t+f*k*t,c[12]=h*k*n-g*l*n-h*j*o+f*l*o+g*j*p-f*k*p,c[1]=l*o*q-k*p*q-l*m*s+i*p*s+k*m*t-i*o*t,c[5]=g*p*q-h*o*q+h*m*s-e*p*s-g*m*t+e*o*t,c[9]=h*k*q-g*l*q-h*i*s+e*l*s+g*i*t-e*k*t,c[13]=g*l*m-h*k*m+h*i*o-e*l*o-g*i*p+e*k*p,c[2]=j*p*q-l*n*q+l*m*r-i*p*r-j*m*t+i*n*t,c[6]=h*n*q-f*p*q-h*m*r+e*p*r+f*m*t-e*n*t,c[10]=f*l*q-h*j*q+h*i*r-e*l*r-f*i*t+e*j*t,c[14]=h*j*m-f*l*m-h*i*n+e*l*n+f*i*p-e*j*p,c[3]=k*n*q-j*o*q-k*m*r+i*o*r+j*m*s-i*n*s,c[7]=f*o*q-g*n*q+g*m*r-e*o*r-f*m*s+e*n*s,c[11]=g*j*q-f*k*q-g*i*r+e*k*r+f*i*s-e*j*s,c[15]=f*k*m-g*j*m+g*i*n-e*k*n-f*i*o+e*j*o;var u=d[0]*c[0]+d[1]*c[4]+d[2]*c[8]+d[3]*c[12];if(0==u){var v="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(b)throw new Error(v);return console.warn(v),this.identity(),this}return this.multiplyScalar(1/u),this},translate:function(a){console.warn("DEPRECATED: Matrix4's .translate() has been removed.")},rotateX:function(a){console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")},rotateY:function(a){console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")},rotateZ:function(a){console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")},rotateByAxis:function(a,b){console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")},scale:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this},getMaxScaleOnAxis:function(){var a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,Math.max(c,d)))},makeTranslation:function(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this},makeRotationX:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this},makeRotationY:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this},makeRotationZ:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this},makeScale:function(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this},compose:function(a,b,c){return console.warn("DEPRECATED: Matrix4's .compose() has been deprecated in favor of makeFromPositionQuaternionScale. Please update your code."),this.makeFromPositionQuaternionScale(a,b,c)},makeFromPositionQuaternionScale:function(a,b,c){return this.makeRotationFromQuaternion(b),this.scale(c),this.setPosition(a),this},makeFromPositionEulerScale:function(a,b,c,d){return this.makeRotationFromEuler(b,c),this.scale(d),this.setPosition(a),this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements,h=2*e/(b-a),i=2*e/(d-c),j=(b+a)/(b-a),k=(d+c)/(d-c),l=-(f+e)/(f-e),m=-2*f*e/(f-e);return g[0]=h,g[4]=0,g[8]=j,g[12]=0,g[1]=0,g[5]=i,g[9]=k,g[13]=0,g[2]=0,g[6]=0,g[10]=l,g[14]=m,g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this},makePerspective:function(a,b,c,d){var e=c*Math.tan(THREE.Math.degToRad(.5*a)),f=-e,g=f*b,h=e*b;return this.makeFrustum(g,h,f,e,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,j=f-e,k=(b+a)/h,l=(c+d)/i,m=(f+e)/j;return g[0]=2/h,g[4]=0,g[8]=0,g[12]=-k,g[1]=0,g[5]=2/i,g[9]=0,g[13]=-l,g[2]=0,g[6]=0,g[10]=-2/j,g[14]=-m,g[3]=0,g[7]=0,g[11]=0,g[15]=1,this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}},THREE.extend(THREE.Matrix4.prototype,{decompose:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Matrix4;return function(e,f,g){var h=this.elements;return a.set(h[0],h[1],h[2]),b.set(h[4],h[5],h[6]),c.set(h[8],h[9],h[10]),e=e instanceof THREE.Vector3?e:new THREE.Vector3,f=f instanceof THREE.Quaternion?f:new THREE.Quaternion,g=g instanceof THREE.Vector3?g:new THREE.Vector3,g.x=a.length(),g.y=b.length(),g.z=c.length(),e.x=h[12],e.y=h[13],e.z=h[14],d.copy(this),d.elements[0]/=g.x,d.elements[1]/=g.x,d.elements[2]/=g.x,d.elements[4]/=g.y,d.elements[5]/=g.y,d.elements[6]/=g.y,d.elements[8]/=g.z,d.elements[9]/=g.z,d.elements[10]/=g.z,f.setFromRotationMatrix(d),[e,f,g]}}()}),THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3,this.direction=void 0!==b?b:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){return this.origin.copy(a),this.direction.copy(b),this},copy:function(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this},at:function(a,b){var c=b||new THREE.Vector3;return c.copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){return this.origin.copy(this.at(b,a)),this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=c.dot(this.direction);return c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);return a.copy(this.direction).multiplyScalar(c).add(this.origin),a.distanceTo(b)}}(),isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},isIntersectionPlane:function(a){var b=a.normal.dot(this.direction);return 0!=b||0==a.distanceToPoint(this.origin)},distanceToPlane:function(a){var b=a.normal.dot(this.direction);{if(0!=b){var c=-(this.origin.dot(a.normal)+a.constant)/b;return c}if(0==a.distanceToPoint(this.origin))return 0}},intersectPlane:function(a,b){var c=this.distanceToPlane(a);if(void 0!==c)return this.at(c,b)},applyMatrix4:function(a){return this.direction.add(this.origin).applyMatrix4(a),this.origin.applyMatrix4(a),this.direction.sub(this.origin),this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3,this.radius=void 0!==b?b:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){return this.center.copy(a),this.radius=b,this},setFromCenterAndPoints:function(a,b){for(var c=0,d=0,e=b.length;d<e;d++){var f=a.distanceToSquared(b[d]);c=Math.max(c,f)}return this.center=a,this.radius=Math.sqrt(c),this},copy:function(a){return this.center.copy(a.center),this.radius=a.radius,this},empty:function(){return this.radius<=0},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;return d.copy(a),c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center)),d},getBoundingBox:function(a){var b=a||new THREE.Box3;return b.set(this.center,this.center),b.expandByScalar(this.radius),b},applyMatrix4:function(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this},translate:function(a){return this.center.add(a),this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this},copy:function(a){for(var b=this.planes,c=0;c<6;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=c[5],j=c[6],k=c[7],l=c[8],m=c[9],n=c[10],o=c[11],p=c[12],q=c[13],r=c[14],s=c[15];return b[0].setComponents(g-d,k-h,o-l,s-p).normalize(),b[1].setComponents(g+d,k+h,o+l,s+p).normalize(),b[2].setComponents(g+e,k+i,o+m,s+q).normalize(),b[3].setComponents(g-e,k-i,o-m,s-q).normalize(),b[4].setComponents(g-f,k-j,o-n,s-r).normalize(),b[5].setComponents(g+f,k+j,o+n,s+r).normalize(),this},intersectsObject:function(){var a=new THREE.Vector3;return function(b){var c=b.matrixWorld,d=this.planes,e=-b.geometry.boundingSphere.radius*c.getMaxScaleOnAxis();a.getPositionFromMatrix(c);for(var f=0;f<6;f++){var g=d[f].distanceToPoint(a);if(g<e)return!1}return!0}}(),intersectsSphere:function(a){for(var b=this.planes,c=a.center,d=-a.radius,e=0;e<6;e++){var f=b[e].distanceToPoint(c);if(f<d)return!1}return!0},containsPoint:function(a){for(var b=this.planes,c=0;c<6;c++)if(b[c].distanceToPoint(a)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0),this.constant=void 0!==b?b:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){return this.normal.copy(a),this.constant=b,this},setComponents:function(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this},setFromNormalAndCoplanarPoint:function(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){var f=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();return this.setFromNormalAndCoplanarPoint(f,c),this}}(),copy:function(a){return this.normal.copy(a.normal),this.constant=a.constant,this},normalize:function(){var a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a),d=b||new THREE.Vector3;return d.copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return b<0&&c>0||c<0&&b>0},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0!=f){var g=-(b.start.dot(this.normal)+this.constant)/f;if(!(g<0||g>1))return d.copy(e).multiplyScalar(g).add(b.start)}else if(0==this.distanceToPoint(b.start))return d.copy(b.start)}}(),coplanarPoint:function(a){var b=a||new THREE.Vector3;return b.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){d=d||(new THREE.Matrix3).getNormalMatrix(c);var e=a.copy(this.normal).applyMatrix3(d),f=this.coplanarPoint(b);return f.applyMatrix4(c),this.setFromNormalAndCoplanarPoint(e,f),this}}(),translate:function(a){return this.constant=this.constant-a.dot(this.normal),this},equals:function(a){return a.normal.equals(this.normal)&&a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b),a*a*(3-2*a))},smootherstep:function(a,b,c){return a<=b?0:a>=c?1:(a=(a-b)/(c-b),a*a*a*(a*(6*a-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},sign:function(a){return a<0?-1:a>0?1:0},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}()},THREE.Spline=function(a){function m(a,b,c,d,e,f,g){var h=.5*(c-a),i=.5*(d-b);return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b}this.points=a;var d,e,f,g,h,i,j,k,l,b=[],c={x:0,y:0,z:0};this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}},this.getPoint=function(a){return d=(this.points.length-1)*a,e=Math.floor(d),f=d-e,b[0]=0===e?e:e-1,b[1]=e,b[2]=e>this.points.length-2?this.points.length-1:e+1,b[3]=e>this.points.length-3?this.points.length-1:e+2,i=this.points[b[0]],j=this.points[b[1]],k=this.points[b[2]],l=this.points[b[3]],g=f*f,h=f*g,c.x=m(i.x,j.x,k.x,l.x,f,g,h),c.y=m(i.y,j.y,k.y,l.y,f,g,h),c.z=m(i.z,j.z,k.z,l.z,f,g,h),c},this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d},this.getLength=function(a){var b,c,d,e,f=0,g=0,h=0,i=new THREE.Vector3,j=new THREE.Vector3,k=[],l=0;for(k[0]=0,a||(a=100),d=this.points.length*a,i.copy(this.points[0]),b=1;b<d;b++)c=b/d,e=this.getPoint(c),j.copy(e),l+=j.distanceTo(i),i.copy(e),f=(this.points.length-1)*c,g=Math.floor(f),g!=h&&(k[g]=l,h=g);return k[k.length]=l,{chunks:k,total:l}},this.reparametrizeByArcLength=function(a){var b,c,d,e,f,h,i,j,k=[],l=new THREE.Vector3,m=this.getLength();for(k.push(l.copy(this.points[0]).clone()),b=1;b<this.points.length;b++){for(h=m.chunks[b]-m.chunks[b-1],i=Math.ceil(a*h/m.total),e=(b-1)/(this.points.length-1),f=b/(this.points.length-1),c=1;c<i-1;c++)d=e+c*(1/i)*(f-e),j=this.getPoint(d),k.push(l.copy(j).clone());k.push(l.copy(this.points[b]).clone())}this.points=k}},THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3,this.b=void 0!==b?b:new THREE.Vector3,this.c=void 0!==c?c:new THREE.Vector3},THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){var f=e||new THREE.Vector3;f.subVectors(d,c),a.subVectors(b,c),f.cross(a);var g=f.lengthSq();return g>0?f.multiplyScalar(1/Math.sqrt(g)):f.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e),b.subVectors(f,e),c.subVectors(d,e);var i=a.dot(a),j=a.dot(b),k=a.dot(c),l=b.dot(b),m=b.dot(c),n=i*l-j*j,o=h||new THREE.Vector3;if(0==n)return o.set(-2,-1,-1);var p=1/n,q=(l*k-j*m)*p,r=(i*m-j*k)*p;return o.set(1-q-r,r,q)}}(),THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){var f=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return f.x>=0&&f.y>=0&&f.x+f.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this},setFromPointsAndIndices:function(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this},copy:function(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){return a.subVectors(this.c,this.b),b.subVectors(this.a,this.b),.5*a.cross(b).length()}}(),midpoint:function(a){var b=a||new THREE.Vector3;return b.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){var b=a||new THREE.Plane;return b.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Vertex=function(a){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),a},THREE.UV=function(a,b){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(a,b)},THREE.Clock=function(a){this.autoStart=void 0===a||a,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var a=0;if(this.autoStart&&!this.running&&this.start(),this.running){var b=void 0!==window.performance&&void 0!==window.performance.now?window.performance.now():Date.now();a=.001*(b-this.oldTime),this.oldTime=b,this.elapsedTime+=a}return a}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]),c[a].indexOf(b)===-1&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&c[a].indexOf(b)!==-1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners,d=c[a].indexOf(b);d!==-1&&c[a].splice(d,1)}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners,c=b[a.type];if(void 0!==c){a.target=this;for(var d=0,e=c.length;d<e;d++)c[d].call(this,a)}}}},function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c),this.ray.direction.lengthSq()>0&&this.ray.direction.normalize(),this.near=d||0,this.far=e||1/0};var b=new a.Sphere,c=new a.Ray,d=new a.Plane,e=new a.Vector3,f=new a.Vector3,g=new a.Matrix4,h=function(a,b){return a.distance-b.distance},i=function(h,j,k){if(h instanceof a.Particle){f.getPositionFromMatrix(h.matrixWorld);var l=j.ray.distanceToPoint(f);if(l>h.scale.x)return k;k.push({distance:l,point:h.position,face:null,object:h})}else if(h instanceof a.LOD){f.getPositionFromMatrix(h.matrixWorld);var l=j.ray.origin.distanceTo(f);i(h.getObjectForDistance(l),j,k)}else if(h instanceof a.Mesh){if(f.getPositionFromMatrix(h.matrixWorld),b.set(f,h.geometry.boundingSphere.radius*h.matrixWorld.getMaxScaleOnAxis()),!j.ray.isIntersectionSphere(b))return k;var r,s,t,u,m=h.geometry,n=m.vertices,o=h.material instanceof a.MeshFaceMaterial,p=o===!0?h.material.materials:null,q=h.material.side,v=j.precision;g.getInverse(h.matrixWorld),c.copy(j.ray).applyMatrix4(g);for(var w=0,x=m.faces.length;w<x;w++){var y=m.faces[w],z=o===!0?p[y.materialIndex]:h.material;if(void 0!==z){d.setFromNormalAndCoplanarPoint(y.normal,n[y.a]);var A=c.distanceToPlane(d);if(!(Math.abs(A)<v||A<0)){if(q=z.side,q!==a.DoubleSide){var B=c.direction.dot(d.normal);if(!(q===a.FrontSide?B<0:B>0))continue}if(!(A<j.near||A>j.far)){if(e=c.at(A,e),y instanceof a.Face3){if(r=n[y.a],s=n[y.b],t=n[y.c],!a.Triangle.containsPoint(e,r,s,t))continue}else{if(!(y instanceof a.Face4))throw Error("face type not supported");if(r=n[y.a],s=n[y.b],t=n[y.c],u=n[y.d],!a.Triangle.containsPoint(e,r,s,u)&&!a.Triangle.containsPoint(e,s,t,u))continue}k.push({distance:A,point:j.ray.at(A),face:y,faceIndex:w,object:h})}}}}}},j=function(a,b,c){for(var d=a.getDescendants(),e=0,f=d.length;e<f;e++)i(d[e],b,c)};a.Raycaster.prototype.precision=1e-4,a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b),this.ray.direction.length()>0&&this.ray.direction.normalize()},a.Raycaster.prototype.intersectObject=function(a,b){
var c=[];return b===!0&&j(a,this,c),i(a,this,c),c.sort(h),c},a.Raycaster.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)i(a[d],this,c),b===!0&&j(a[d],this,c);return c.sort(h),c}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.name="",this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder=THREE.Object3D.defaultEulerOrder,this.scale=new THREE.Vector3(1,1,1),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.userData={}},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(){var a=new THREE.Matrix4;return function(b){this.matrix.multiplyMatrices(b,this.matrix),this.position.getPositionFromMatrix(this.matrix),this.scale.getScaleFromMatrix(this.matrix),a.extractRotation(this.matrix),this.useQuaternion===!0?this.quaternion.setFromRotationMatrix(a):this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder)}}(),rotateOnAxis:function(){var a=new THREE.Quaternion,b=new THREE.Quaternion;return function(c,d){return a.setFromAxisAngle(c,d),this.useQuaternion===!0?this.quaternion.multiply(a):(b.setFromEuler(this.rotation,this.eulerOrder),b.multiply(a),this.rotation.setEulerFromQuaternion(b,this.eulerOrder)),this}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){return a.copy(b),this.useQuaternion===!0?a.applyQuaternion(this.quaternion):a.applyEuler(this.rotation,this.eulerOrder),this.position.add(a.multiplyScalar(c)),this}}(),translate:function(a,b){return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."),this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up),this.useQuaternion===!0?this.quaternion.setFromRotationMatrix(a):this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder)}}(),add:function(a){if(a===this)return void console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a),a.parent=this,this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0,this.children.splice(b,1);for(var c=this;void 0!==c.parent;)c=c.parent;void 0!==c&&c instanceof THREE.Scene&&c.__removeObject(a)}},traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},getObjectById:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.id===a)return e;if(b===!0&&(e=e.getObjectById(a,b),void 0!==e))return e}},getObjectByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a)return e;if(b===!0&&(e=e.getObjectByName(a,b),void 0!==e))return e}},getChildByName:function(a,b){return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(a,b)},getDescendants:function(a){void 0===a&&(a=[]),Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.useQuaternion===!1?this.matrix.makeFromPositionEulerScale(this.position,this.rotation,this.eulerOrder,this.scale):this.matrix.makeFromPositionQuaternionScale(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate===!0&&this.updateMatrix(),this.matrixWorldNeedsUpdate!==!0&&a!==!0||(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D),a.name=this.name,a.up.copy(this.up),a.position.copy(this.position),a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation),a.eulerOrder=this.eulerOrder,a.scale.copy(this.scale),a.renderDepth=this.renderDepth,a.rotationAutoUpdate=this.rotationAutoUpdate,a.matrix.copy(this.matrix),a.matrixWorld.copy(this.matrixWorld),a.matrixAutoUpdate=this.matrixAutoUpdate,a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,a.quaternion.copy(this.quaternion),a.useQuaternion=this.useQuaternion,a.visible=this.visible,a.castShadow=this.castShadow,a.receiveShadow=this.receiveShadow,a.frustumCulled=this.frustumCulled,a.userData=JSON.parse(JSON.stringify(this.userData));for(var b=0;b<this.children.length;b++){var c=this.children[b];a.add(c.clone())}return a}},THREE.Object3D.defaultEulerOrder="XYZ",THREE.Object3DIdCount=0,THREE.Projector=function(){function P(){if(b===d){var a=new THREE.RenderableObject;return c.push(a),d++,b++,a}return c[b++]}function Q(){if(f===h){var a=new THREE.RenderableVertex;return g.push(a),h++,f++,a}return g[f++]}function R(){if(j===l){var a=new THREE.RenderableFace3;return k.push(a),l++,j++,a}return k[j++]}function S(){if(m===o){var a=new THREE.RenderableFace4;return n.push(a),o++,m++,a}return n[m++]}function T(){if(q===s){var a=new THREE.RenderableLine;return r.push(a),s++,q++,a}return r[q++]}function U(){if(u===w){var a=new THREE.RenderableParticle;return v.push(a),w++,u++,a}return v[u++]}function V(a,b){return b.z-a.z}function W(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;return e>=0&&f>=0&&g>=0&&h>=0||!(e<0&&f<0||g<0&&h<0)&&(e<0?c=Math.max(c,e/(e-f)):f<0&&(d=Math.min(d,e/(e-f))),g<0?c=Math.max(c,g/(g-h)):h<0&&(d=Math.min(d,g/(g-h))),!(d<c)&&(a.lerp(b,c),b.lerp(a,1-d),!0))}var a,b,e,f,i,j,m,p,q,t,u,G,c=[],d=0,g=[],h=0,k=[],l=0,n=[],o=0,r=[],s=0,v=[],w=0,x={objects:[],sprites:[],lights:[],elements:[]},y=new THREE.Vector3,z=new THREE.Vector4,A=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),B=new THREE.Box3,C=new Array(3),D=new Array(4),E=new THREE.Matrix4,F=new THREE.Matrix4,H=new THREE.Matrix4,I=new THREE.Matrix3,J=new THREE.Matrix3,K=new THREE.Vector3,L=new THREE.Frustum,M=new THREE.Vector4,N=new THREE.Vector4;this.projectVector=function(a,b){return b.matrixWorldInverse.getInverse(b.matrixWorld),F.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),a.applyProjection(F)},this.unprojectVector=function(a,b){return b.projectionMatrixInverse.getInverse(b.projectionMatrix),F.multiplyMatrices(b.matrixWorld,b.projectionMatrixInverse),a.applyProjection(F)},this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);return this.unprojectVector(a,b),this.unprojectVector(c,b),c.sub(a).normalize(),new THREE.Raycaster(a,c)};var O=function(c,d){b=0,x.objects.length=0,x.sprites.length=0,x.lights.length=0;var e=function(b){for(var c=0,d=b.children.length;c<d;c++){var f=b.children[c];f.visible!==!1&&(f instanceof THREE.Light?x.lights.push(f):f instanceof THREE.Mesh||f instanceof THREE.Line?f.frustumCulled!==!1&&L.intersectsObject(f)!==!0||(a=P(),a.object=f,null!==f.renderDepth?a.z=f.renderDepth:(y.getPositionFromMatrix(f.matrixWorld),y.applyProjection(F),a.z=y.z),x.objects.push(a)):f instanceof THREE.Sprite||f instanceof THREE.Particle?(a=P(),a.object=f,null!==f.renderDepth?a.z=f.renderDepth:(y.getPositionFromMatrix(f.matrixWorld),y.applyProjection(F),a.z=y.z),x.sprites.push(a)):(a=P(),a.object=f,null!==f.renderDepth?a.z=f.renderDepth:(y.getPositionFromMatrix(f.matrixWorld),y.applyProjection(F),a.z=y.z),x.objects.push(a)),e(f))}};return e(c),d===!0&&x.objects.sort(V),x};this.projectScene=function(a,b,c,d){var k,l,n,o,r,s,v,w,y,P,X,Y,Z,$,_,aa,ba,ca,da,ea,fa,ga,ha,ia,ja,ka,h=!1;for(j=0,m=0,q=0,u=0,x.elements.length=0,a.autoUpdate===!0&&a.updateMatrixWorld(),void 0===b.parent&&b.updateMatrixWorld(),E.copy(b.matrixWorldInverse.getInverse(b.matrixWorld)),F.multiplyMatrices(b.projectionMatrix,E),J.getNormalMatrix(E),L.setFromMatrix(F),x=O(a,c),k=0,l=x.objects.length;k<l;k++)if(Z=x.objects[k].object,G=Z.matrixWorld,f=0,Z instanceof THREE.Mesh){for($=Z.geometry,_=$.vertices,aa=$.faces,da=$.faceVertexUvs,I.getNormalMatrix(G),ja=Z.material instanceof THREE.MeshFaceMaterial,ka=ja===!0?Z.material:null,n=0,o=_.length;n<o;n++)e=Q(),e.positionWorld.copy(_[n]).applyMatrix4(G),e.positionScreen.copy(e.positionWorld).applyMatrix4(F),e.positionScreen.x/=e.positionScreen.w,e.positionScreen.y/=e.positionScreen.w,e.positionScreen.z/=e.positionScreen.w,e.visible=!(e.positionScreen.x<-1||e.positionScreen.x>1||e.positionScreen.y<-1||e.positionScreen.y>1||e.positionScreen.z<-1||e.positionScreen.z>1);for(r=0,s=aa.length;r<s;r++){ba=aa[r];var la=ja===!0?ka.materials[ba.materialIndex]:Z.material;if(void 0!==la){var ma=la.side;if(ba instanceof THREE.Face3){if(fa=g[ba.a],ga=g[ba.b],ha=g[ba.c],C[0]=fa.positionScreen,C[1]=ga.positionScreen,C[2]=ha.positionScreen,fa.visible!==!0&&ga.visible!==!0&&ha.visible!==!0&&!A.isIntersectionBox(B.setFromPoints(C)))continue;if(h=(ha.positionScreen.x-fa.positionScreen.x)*(ga.positionScreen.y-fa.positionScreen.y)-(ha.positionScreen.y-fa.positionScreen.y)*(ga.positionScreen.x-fa.positionScreen.x)<0,ma!==THREE.DoubleSide&&h!==(ma===THREE.FrontSide))continue;i=R(),i.v1.copy(fa),i.v2.copy(ga),i.v3.copy(ha)}else if(ba instanceof THREE.Face4){if(fa=g[ba.a],ga=g[ba.b],ha=g[ba.c],ia=g[ba.d],D[0]=fa.positionScreen,D[1]=ga.positionScreen,D[2]=ha.positionScreen,D[3]=ia.positionScreen,fa.visible!==!0&&ga.visible!==!0&&ha.visible!==!0&&ia.visible!==!0&&!A.isIntersectionBox(B.setFromPoints(D)))continue;if(h=(ia.positionScreen.x-fa.positionScreen.x)*(ga.positionScreen.y-fa.positionScreen.y)-(ia.positionScreen.y-fa.positionScreen.y)*(ga.positionScreen.x-fa.positionScreen.x)<0||(ga.positionScreen.x-ha.positionScreen.x)*(ia.positionScreen.y-ha.positionScreen.y)-(ga.positionScreen.y-ha.positionScreen.y)*(ia.positionScreen.x-ha.positionScreen.x)<0,ma!==THREE.DoubleSide&&h!==(ma===THREE.FrontSide))continue;i=S(),i.v1.copy(fa),i.v2.copy(ga),i.v3.copy(ha),i.v4.copy(ia)}for(i.normalModel.copy(ba.normal),h!==!1||ma!==THREE.BackSide&&ma!==THREE.DoubleSide||i.normalModel.negate(),i.normalModel.applyMatrix3(I).normalize(),i.normalModelView.copy(i.normalModel).applyMatrix3(J),i.centroidModel.copy(ba.centroid).applyMatrix4(G),ca=ba.vertexNormals,v=0,w=ca.length;v<w;v++){var na=i.vertexNormalsModel[v];na.copy(ca[v]),h!==!1||ma!==THREE.BackSide&&ma!==THREE.DoubleSide||na.negate(),na.applyMatrix3(I).normalize();var oa=i.vertexNormalsModelView[v];oa.copy(na).applyMatrix3(J)}for(i.vertexNormalsLength=ca.length,y=0,P=da.length;y<P;y++)if(ea=da[y][r],void 0!==ea)for(X=0,Y=ea.length;X<Y;X++)i.uvs[y][X]=ea[X];i.color=ba.color,i.material=la,K.copy(i.centroidModel).applyProjection(F),i.z=K.z,x.elements.push(i)}}}else if(Z instanceof THREE.Line){H.multiplyMatrices(F,G),_=Z.geometry.vertices,fa=Q(),fa.positionScreen.copy(_[0]).applyMatrix4(H);var pa=Z.type===THREE.LinePieces?2:1;for(n=1,o=_.length;n<o;n++)fa=Q(),fa.positionScreen.copy(_[n]).applyMatrix4(H),(n+1)%pa>0||(ga=g[f-2],M.copy(fa.positionScreen),N.copy(ga.positionScreen),W(M,N)===!0&&(M.multiplyScalar(1/M.w),N.multiplyScalar(1/N.w),p=T(),p.v1.positionScreen.copy(M),p.v2.positionScreen.copy(N),p.z=Math.max(M.z,N.z),p.material=Z.material,Z.material.vertexColors===THREE.VertexColors&&(p.vertexColors[0].copy(Z.geometry.colors[n]),p.vertexColors[1].copy(Z.geometry.colors[n-1])),x.elements.push(p)))}for(k=0,l=x.sprites.length;k<l;k++)Z=x.sprites[k].object,G=Z.matrixWorld,Z instanceof THREE.Particle&&(z.set(G.elements[12],G.elements[13],G.elements[14],1),z.applyMatrix4(F),z.z/=z.w,z.z>0&&z.z<1&&(t=U(),t.object=Z,t.x=z.x/z.w,t.y=z.y/z.w,t.z=z.z,t.rotation=Z.rotation.z,t.scale.x=Z.scale.x*Math.abs(t.x-(z.x+b.projectionMatrix.elements[0])/(z.w+b.projectionMatrix.elements[12])),t.scale.y=Z.scale.y*Math.abs(t.y-(z.y+b.projectionMatrix.elements[5])/(z.w+b.projectionMatrix.elements[13])),t.material=Z.material,x.elements.push(t)));return d===!0&&x.elements.sort(V),x}},THREE.Face3=function(a,b,c,d,e,f){this.a=a,this.b=b,this.c=c,this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3,this.vertexNormals=d instanceof Array?d:[],this.color=e instanceof THREE.Color?e:new THREE.Color,this.vertexColors=e instanceof Array?e:[],this.vertexTangents=[],this.materialIndex=void 0!==f?f:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal),a.color.copy(this.color),a.centroid.copy(this.centroid),a.materialIndex=this.materialIndex;var b,c;for(b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(b=0,c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(b=0,c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}},THREE.Face4=function(a,b,c,d,e,f,g){this.a=a,this.b=b,this.c=c,this.d=d,this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3,this.vertexNormals=e instanceof Array?e:[],this.color=f instanceof THREE.Color?f:new THREE.Color,this.vertexColors=f instanceof Array?f:[],this.vertexTangents=[],this.materialIndex=void 0!==g?g:0,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal),a.color.copy(this.color),a.centroid.copy(this.centroid),a.materialIndex=this.materialIndex;var b,c;for(b=0,c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(b=0,c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(b=0,c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}},THREE.Geometry=function(){this.id=THREE.GeometryIdCount++,this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;c<d;c++){var e=this.vertices[c];e.applyMatrix4(a)}for(var c=0,d=this.faces.length;c<d;c++){var f=this.faces[c];f.normal.applyMatrix3(b).normalize();for(var g=0,h=f.vertexNormals.length;g<h;g++)f.vertexNormals[g].applyMatrix3(b).normalize();f.centroid.applyMatrix4(a)}},computeCentroids:function(){var a,b,c;for(a=0,b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.add(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;c<d;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b],h=this.vertices[e.c];a.subVectors(h,g),b.subVectors(f,g),a.cross(b),a.normalize(),e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d,e,f,g;if(void 0===this.__tmpVertices){for(this.__tmpVertices=new Array(this.vertices.length),g=this.__tmpVertices,b=0,c=this.vertices.length;b<c;b++)g[b]=new THREE.Vector3;for(d=0,e=this.faces.length;d<e;d++)f=this.faces[d],f instanceof THREE.Face3?f.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:f instanceof THREE.Face4&&(f.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(g=this.__tmpVertices,b=0,c=this.vertices.length;b<c;b++)g[b].set(0,0,0);if(a){var h,i,j,k,l=new THREE.Vector3,m=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3,p=new THREE.Vector3;for(d=0,e=this.faces.length;d<e;d++)f=this.faces[d],f instanceof THREE.Face3?(h=this.vertices[f.a],i=this.vertices[f.b],j=this.vertices[f.c],l.subVectors(j,i),m.subVectors(h,i),l.cross(m),g[f.a].add(l),g[f.b].add(l),g[f.c].add(l)):f instanceof THREE.Face4&&(h=this.vertices[f.a],i=this.vertices[f.b],j=this.vertices[f.c],k=this.vertices[f.d],n.subVectors(k,i),m.subVectors(h,i),n.cross(m),g[f.a].add(n),g[f.b].add(n),g[f.d].add(n),o.subVectors(k,j),p.subVectors(i,j),o.cross(p),g[f.b].add(o),g[f.c].add(o),g[f.d].add(o))}else for(d=0,e=this.faces.length;d<e;d++)f=this.faces[d],f instanceof THREE.Face3?(g[f.a].add(f.normal),g[f.b].add(f.normal),g[f.c].add(f.normal)):f instanceof THREE.Face4&&(g[f.a].add(f.normal),g[f.b].add(f.normal),g[f.c].add(f.normal),g[f.d].add(f.normal));for(b=0,c=this.vertices.length;b<c;b++)g[b].normalize();for(d=0,e=this.faces.length;d<e;d++)f=this.faces[d],f instanceof THREE.Face3?(f.vertexNormals[0].copy(g[f.a]),f.vertexNormals[1].copy(g[f.b]),f.vertexNormals[2].copy(g[f.c])):f instanceof THREE.Face4&&(f.vertexNormals[0].copy(g[f.a]),f.vertexNormals[1].copy(g[f.b]),f.vertexNormals[2].copy(g[f.c]),f.vertexNormals[3].copy(g[f.d]))},computeMorphNormals:function(){var a,b,c,d,e;for(c=0,d=this.faces.length;c<d;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;for(f.faces=this.faces,a=0,b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={},this.morphNormals[a].faceNormals=[],this.morphNormals[a].vertexNormals=[];var i,j,g=this.morphNormals[a].faceNormals,h=this.morphNormals[a].vertexNormals;for(c=0,d=this.faces.length;c<d;c++)e=this.faces[c],i=new THREE.Vector3,j=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(i),h.push(j)}var k=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices,f.computeFaceNormals(),f.computeVertexNormals();var i,j;for(c=0,d=this.faces.length;c<d;c++)e=this.faces[c],i=k.faceNormals[c],j=k.vertexNormals[c],i.copy(e.normal),e instanceof THREE.Face3?(j.a.copy(e.vertexNormals[0]),j.b.copy(e.vertexNormals[1]),j.c.copy(e.vertexNormals[2])):(j.a.copy(e.vertexNormals[0]),j.b.copy(e.vertexNormals[1]),j.c.copy(e.vertexNormals[2]),j.d.copy(e.vertexNormals[3]))}for(c=0,d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function K(a,b,c,d,e,f,g){j=a.vertices[b],k=a.vertices[c],l=a.vertices[d],m=i[e],n=i[f],o=i[g],p=k.x-j.x,q=l.x-j.x,r=k.y-j.y,s=l.y-j.y,t=k.z-j.z,u=l.z-j.z,v=n.x-m.x,w=o.x-m.x,x=n.y-m.y,y=o.y-m.y,z=1/(v*y-w*x),E.set((y*p-x*q)*z,(y*r-x*s)*z,(y*t-x*u)*z),F.set((v*q-w*p)*z,(v*s-w*r)*z,(v*u-w*t)*z),C[b].add(E),C[c].add(E),C[d].add(E),D[b].add(F),D[c].add(F),D[d].add(F)}var a,b,c,d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,J,C=[],D=[],E=new THREE.Vector3,F=new THREE.Vector3,G=new THREE.Vector3,H=new THREE.Vector3,I=new THREE.Vector3;for(c=0,d=this.vertices.length;c<d;c++)C[c]=new THREE.Vector3,D[c]=new THREE.Vector3;for(a=0,b=this.faces.length;a<b;a++)h=this.faces[a],i=this.faceVertexUvs[0][a],h instanceof THREE.Face3?K(this,h.a,h.b,h.c,0,1,2):h instanceof THREE.Face4&&(K(this,h.a,h.b,h.d,0,1,3),K(this,h.b,h.c,h.d,1,2,3));var L=["a","b","c","d"];for(a=0,b=this.faces.length;a<b;a++)for(h=this.faces[a],e=0;e<h.vertexNormals.length;e++)I.copy(h.vertexNormals[e]),g=h[L[e]],A=C[g],G.copy(A),G.sub(I.multiplyScalar(I.dot(A))).normalize(),H.crossVectors(h.vertexNormals[e],A),B=H.dot(D[g]),J=B<0?-1:1,h.vertexTangents[e]=new THREE.Vector4(G.x,G.y,G.z,J);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)c>0&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var d,e,h,i,j,k,m,n,o,a={},b=[],c=[],f=4,g=Math.pow(10,f);for(this.__tmpVertices=void 0,h=0,i=this.vertices.length;h<i;h++)d=this.vertices[h],e=[Math.round(d.x*g),Math.round(d.y*g),Math.round(d.z*g)].join("_"),void 0===a[e]?(a[e]=h,b.push(this.vertices[h]),c[h]=b.length-1):c[h]=c[a[e]];var p=[];for(h=0,i=this.faces.length;h<i;h++)if(j=this.faces[h],j instanceof THREE.Face3){j.a=c[j.a],j.b=c[j.b],j.c=c[j.c],k=[j.a,j.b,j.c];for(var q=-1,r=0;r<3;r++)if(k[r]==k[(r+1)%3]){q=r,p.push(h);break}}else if(j instanceof THREE.Face4){j.a=c[j.a],j.b=c[j.b],j.c=c[j.c],j.d=c[j.d],k=[j.a,j.b,j.c,j.d];for(var q=-1,r=0;r<4;r++)k[r]==k[(r+1)%4]&&(q>=0&&p.push(h),q=r);if(q>=0){k.splice(q,1);var s=new THREE.Face3(k[0],k[1],k[2],j.normal,j.color,j.materialIndex);for(m=0,n=this.faceVertexUvs.length;m<n;m++)o=this.faceVertexUvs[m][h],o&&o.splice(q,1);j.vertexNormals&&j.vertexNormals.length>0&&(s.vertexNormals=j.vertexNormals,s.vertexNormals.splice(q,1)),j.vertexColors&&j.vertexColors.length>0&&(s.vertexColors=j.vertexColors,s.vertexColors.splice(q,1)),this.faces[h]=s}}for(h=p.length-1;h>=0;h--)for(this.faces.splice(h,1),m=0,n=this.faceVertexUvs.length;m<n;m++)this.faceVertexUvs[m].splice(h,1);var t=this.vertices.length-b.length;return this.vertices=b,t},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());for(var e=this.faces,c=0,d=e.length;c<d;c++)a.faces.push(e[c].clone());for(var f=this.faceVertexUvs[0],c=0,d=f.length;c<d;c++){for(var g=f[c],h=[],i=0,j=g.length;i<j;i++)h.push(new THREE.Vector2(g[i].x,g[i].y));a.faceVertexUvs[0].push(h)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){this.id=THREE.GeometryIdCount++,this.attributes={},this.dynamic=!1,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,applyMatrix:function(a){var b,c;if(this.attributes.position&&(b=this.attributes.position.array),this.attributes.normal&&(c=this.attributes.normal.array),void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0),void 0!==c){var d=(new THREE.Matrix3).getNormalMatrix(a);d.multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var a=this.attributes.position.array;if(a){var c,d,e,b=this.boundingBox;a.length>=3&&(b.min.x=b.max.x=a[0],b.min.y=b.max.y=a[1],b.min.z=b.max.z=a[2]);for(var f=3,g=a.length;f<g;f+=3)c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z?b.min.z=e:e>b.max.z&&(b.max.z=e)}void 0!==a&&0!==a.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var a=this.attributes.position.array;if(a){for(var b,d,e,f,c=0,g=0,h=a.length;g<h;g+=3)d=a[g],e=a[g+1],f=a[g+2],b=d*d+e*e+f*f,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d,e=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(e),numItems:e};else for(a=0,b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0;var h,i,j,k,l,m,f=this.attributes.position.array,g=this.attributes.normal.array,n=new THREE.Vector3,o=new THREE.Vector3,p=new THREE.Vector3,q=new THREE.Vector3,r=new THREE.Vector3;if(this.attributes.index){var s=this.attributes.index.array,t=this.offsets;for(c=0,d=t.length;c<d;++c){var u=t[c].start,v=t[c].count,w=t[c].index;for(a=u,b=u+v;a<b;a+=3)h=w+s[a],i=w+s[a+1],j=w+s[a+2],k=f[3*h],l=f[3*h+1],m=f[3*h+2],n.set(k,l,m),k=f[3*i],l=f[3*i+1],m=f[3*i+2],o.set(k,l,m),k=f[3*j],l=f[3*j+1],m=f[3*j+2],p.set(k,l,m),q.subVectors(p,o),r.subVectors(n,o),q.cross(r),g[3*h]+=q.x,g[3*h+1]+=q.y,g[3*h+2]+=q.z,g[3*i]+=q.x,g[3*i+1]+=q.y,g[3*i+2]+=q.z,g[3*j]+=q.x,g[3*j+1]+=q.y,g[3*j+2]+=q.z}}else for(a=0,b=f.length;a<b;a+=9)k=f[a],l=f[a+1],m=f[a+2],n.set(k,l,m),k=f[a+3],l=f[a+4],m=f[a+5],o.set(k,l,m),k=f[a+6],l=f[a+7],m=f[a+8],p.set(k,l,m),q.subVectors(p,o),r.subVectors(n,o),q.cross(r),g[a]=q.x,g[a+1]=q.y,g[a+2]=q.z,g[a+3]=q.x,g[a+4]=q.y,g[a+5]=q.z,g[a+6]=q.x,g[a+7]=q.y,g[a+8]=q.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var b,c,d,e,a=this.attributes.normal.array,f=0,g=a.length;f<g;f+=3)b=a[f],c=a[f+1],d=a[f+2],e=1/Math.sqrt(b*b+c*c+d*d),a[f]*=e,a[f+1]*=e,a[f+2]*=e},computeTangents:function(){function M(a,c,e){k=b[3*a],l=b[3*a+1],m=b[3*a+2],n=b[3*c],o=b[3*c+1],p=b[3*c+2],q=b[3*e],r=b[3*e+1],s=b[3*e+2],t=d[2*a],u=d[2*a+1],v=d[2*c],w=d[2*c+1],x=d[2*e],y=d[2*e+1],z=n-k,A=q-k,B=o-l,C=r-l,D=p-m,E=s-m,F=v-t,G=x-t,H=w-u,I=y-u,J=1/(F*I-G*H),K.set((I*z-H*A)*J,(I*B-H*C)*J,(I*D-H*E)*J),L.set((F*A-G*z)*J,(F*C-G*B)*J,(F*E-G*D)*J),h[a].add(K),h[c].add(K),h[e].add(K),i[a].add(L),i[c].add(L),i[e].add(L)}function da(a){$.x=c[3*a],$.y=c[3*a+1],$.z=c[3*a+2],_.copy($),ba=h[a],Y.copy(ba),Y.sub($.multiplyScalar($.dot(ba))).normalize(),Z.crossVectors(_,ba),ca=Z.dot(i[a]),aa=ca<0?-1:1,g[4*a]=Y.x,g[4*a+1]=Y.y,g[4*a+2]=Y.z,g[4*a+3]=aa}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var a=this.attributes.index.array,b=this.attributes.position.array,c=this.attributes.normal.array,d=this.attributes.uv.array,e=b.length/3;if(void 0===this.attributes.tangent){var f=4*e;this.attributes.tangent={itemSize:4,array:new Float32Array(f),numItems:f}}for(var g=this.attributes.tangent.array,h=[],i=[],j=0;j<e;j++)h[j]=new THREE.Vector3,i[j]=new THREE.Vector3;var k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,N,O,P,Q,R,S,T,K=new THREE.Vector3,L=new THREE.Vector3,U=this.offsets;for(P=0,Q=U.length;P<Q;++P){var V=U[P].start,W=U[P].count,X=U[P].index;for(N=V,O=V+W;N<O;N+=3)R=X+a[N],S=X+a[N+1],T=X+a[N+2],M(R,S,T)}var aa,ba,ca,Y=new THREE.Vector3,Z=new THREE.Vector3,$=new THREE.Vector3,_=new THREE.Vector3;for(P=0,Q=U.length;P<Q;++P){var V=U[P].start,W=U[P].count,X=U[P].index;for(N=V,O=V+W;N<O;N+=3)R=X+a[N],S=X+a[N+1],T=X+a[N+2],da(R),da(S),da(T)}this.hasTangents=!0,this.tangentsNeedUpdate=!0},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up),this.useQuaternion===!0?this.quaternion.setFromRotationMatrix(a):this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder)}}(),THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this),this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=void 0!==e?e:.1,this.far=void 0!==f?f:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this),this.fov=void 0!==a?a:50,this.aspect=void 0!==b?b:1,this.near=void 0!==c?c:.1,this.far=void 0!==d?d:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24),this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a,this.fullHeight=b,this.x=c,this.y=d,this.width=e,this.height=f,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,c=-b,d=a*c,e=a*b,f=Math.abs(e-d),g=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*f/this.fullWidth,d+(this.x+this.width)*f/this.fullWidth,b-(this.y+this.height)*g/this.fullHeight,b-this.y*g/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(a){THREE.Object3D.call(this),this.color=new THREE.Color(a)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.clone=function(a){return void 0===a&&(a=new THREE.Light),THREE.Object3D.prototype.clone.call(this,a),a.color.copy(this.color),a},THREE.AmbientLight=function(a){THREE.Light.call(this,a)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,a),a},THREE.AreaLight=function(a,b){THREE.Light.call(this,a),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==b?b:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],
this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,a),a.target=this.target.clone(),a.intensity=this.intensity,a.castShadow=this.castShadow,a.onlyShadow=this.onlyShadow,a},THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a),this.position.set(0,100,0),this.groundColor=new THREE.Color(b),this.intensity=void 0!==c?c:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.clone=function(){var a=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,a),a.groundColor.copy(this.groundColor),a.intensity=this.intensity,a},THREE.PointLight=function(a,b,c){THREE.Light.call(this,a),this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,a),a.intensity=this.intensity,a.distance=this.distance,a},THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a),this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0,this.angle=void 0!==d?d:Math.PI/3,this.exponent=void 0!==e?e:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,a),a.target=this.target.clone(),a.intensity=this.intensity,a.distance=this.distance,a.angle=this.angle,a.exponent=this.exponent,a.castShadow=this.castShadow,a.onlyShadow=this.onlyShadow,a},THREE.Loader=function(a){this.showStatus=a,this.statusDomElement=a?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");return a.style.position="absolute",a.style.right="0px",a.style.top="0px",a.style.fontSize="0.8em",a.style.textAlign="left",a.style.background="rgba(0,0,0,0.25)",a.style.color="#fff",a.style.width="120px",a.style.padding="0.5em 0.5em 0.5em 0.5em",a.style.zIndex=1e3,a.innerHTML="Loading ...",a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=b},extractUrlBase:function(a){var b=a.split("/");return b.pop(),(b.length<1?".":b.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++){var d=a[b];if(d instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(a,b){function d(a){var b=Math.log(a)/Math.LN2;return Math.floor(b)==b}function e(a){var b=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(b))}function f(a,b){var f=new Image;f.onload=function(){if(d(this.width)&&d(this.height))a.image=this;else{var b=e(this.width),c=e(this.height);a.image.width=b,a.image.height=c,a.image.getContext("2d").drawImage(this,0,0,b,c)}a.needsUpdate=!0},f.crossOrigin=c.crossOrigin,f.src=b}function g(a,c,d,e,g,h,i){var j=/\.dds$/i.test(d),k=b+"/"+d;if(j){var l=THREE.ImageUtils.loadCompressedTexture(k);a[c]=l}else{var l=document.createElement("canvas");a[c]=new THREE.Texture(l)}if(a[c].sourceFile=d,e&&(a[c].repeat.set(e[0],e[1]),1!==e[0]&&(a[c].wrapS=THREE.RepeatWrapping),1!==e[1]&&(a[c].wrapT=THREE.RepeatWrapping)),g&&a[c].offset.set(g[0],g[1]),h){var m={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==m[h[0]]&&(a[c].wrapS=m[h[0]]),void 0!==m[h[1]]&&(a[c].wrapT=m[h[1]])}i&&(a[c].anisotropy=i),j||f(a[c],k)}function h(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var c=this,i="MeshLambertMaterial",j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var k=a.shading.toLowerCase();"phong"===k?i="MeshPhongMaterial":"basic"===k&&(i="MeshBasicMaterial")}if(void 0!==a.blending&&void 0!==THREE[a.blending]&&(j.blending=THREE[a.blending]),(void 0!==a.transparent||a.opacity<1)&&(j.transparent=a.transparent),void 0!==a.depthTest&&(j.depthTest=a.depthTest),void 0!==a.depthWrite&&(j.depthWrite=a.depthWrite),void 0!==a.visible&&(j.visible=a.visible),void 0!==a.flipSided&&(j.side=THREE.BackSide),void 0!==a.doubleSided&&(j.side=THREE.DoubleSide),void 0!==a.wireframe&&(j.wireframe=a.wireframe),void 0!==a.vertexColors&&("face"===a.vertexColors?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors)),a.colorDiffuse?j.color=h(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor),a.colorSpecular&&(j.specular=h(a.colorSpecular)),a.colorAmbient&&(j.ambient=h(a.colorAmbient)),a.transparency&&(j.opacity=a.transparency),a.specularCoef&&(j.shininess=a.specularCoef),a.mapDiffuse&&b&&g(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy),a.mapLight&&b&&g(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy),a.mapBump&&b&&g(j,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy),a.mapNormal&&b&&g(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy),a.mapSpecular&&b&&g(j,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy),a.mapBumpScale&&(j.bumpScale=a.mapBumpScale),a.mapNormal){var l=THREE.ShaderLib.normalmap,m=THREE.UniformsUtils.clone(l.uniforms);m.tNormal.value=j.normalMap,a.mapNormalFactor&&m.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),j.map&&(m.tDiffuse.value=j.map,m.enableDiffuse.value=!0),j.specularMap&&(m.tSpecular.value=j.specularMap,m.enableSpecular.value=!0),j.lightMap&&(m.tAO.value=j.lightMap,m.enableAO.value=!0),m.uDiffuseColor.value.setHex(j.color),m.uSpecularColor.value.setHex(j.specular),m.uAmbientColor.value.setHex(j.ambient),m.uShininess.value=j.shininess,void 0!==j.opacity&&(m.uOpacity.value=j.opacity);var n={fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:m,lights:!0,fog:!0},o=new THREE.ShaderMaterial(n);j.transparent&&(o.transparent=!0)}else var o=new THREE[i](j);return void 0!==a.DbgName&&(o.name=a.DbgName),o}},THREE.ImageLoader=function(){this.crossOrigin=null},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(a,b){var c=this;void 0===b&&(b=new Image),b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1),b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1),c.crossOrigin&&(b.crossOrigin=c.crossOrigin),b.src=a}},THREE.JSONLoader=function(a){THREE.Loader.call(this,a),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"==typeof c?c:this.extractUrlBase(a),this.onLoadStart(),this.loadAjaxJSON(this,a,b,c)},THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText),i=a.parse(h,d);c(i.geometry,i.materials)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(g=f.getResponseHeader("Content-Length"))},f.open("GET",b,!0),f.withCredentials=this.withCredentials,f.send(null)},THREE.JSONLoader.prototype.parse=function(a,b){function f(b){function c(a,b){return a&1<<b}var e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F=a.faces,G=a.vertices,H=a.normals,I=a.colors,J=0;for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&J++;for(e=0;e<J;e++)d.faceUvs[e]=[],d.faceVertexUvs[e]=[];for(h=0,i=G.length;h<i;)x=new THREE.Vector3,x.x=G[h++]*b,x.y=G[h++]*b,x.z=G[h++]*b,d.vertices.push(x);for(h=0,i=F.length;h<i;){if(o=F[h++],p=c(o,0),q=c(o,1),r=c(o,2),s=c(o,3),t=c(o,4),u=c(o,5),v=c(o,6),w=c(o,7),p?(y=new THREE.Face4,y.a=F[h++],y.b=F[h++],y.c=F[h++],y.d=F[h++],j=4):(y=new THREE.Face3,y.a=F[h++],y.b=F[h++],y.c=F[h++],j=3),q&&(n=F[h++],y.materialIndex=n),g=d.faces.length,r)for(e=0;e<J;e++)B=a.uvs[e],m=F[h++],D=B[2*m],E=B[2*m+1],d.faceUvs[e][g]=new THREE.Vector2(D,E);if(s)for(e=0;e<J;e++){for(B=a.uvs[e],C=[],f=0;f<j;f++)m=F[h++],D=B[2*m],E=B[2*m+1],C[f]=new THREE.Vector2(D,E);d.faceVertexUvs[e][g]=C}if(t&&(l=3*F[h++],A=new THREE.Vector3,A.x=H[l++],A.y=H[l++],A.z=H[l],y.normal=A),u)for(e=0;e<j;e++)l=3*F[h++],A=new THREE.Vector3,A.x=H[l++],A.y=H[l++],A.z=H[l],y.vertexNormals.push(A);if(v&&(k=F[h++],z=new THREE.Color(I[k]),y.color=z),w)for(e=0;e<j;e++)k=F[h++],z=new THREE.Color(I[k]),y.vertexColors.push(z);d.faces.push(y)}}function g(){var b,c,e,f,g,h,i,j,k,l;if(a.skinWeights)for(b=0,c=a.skinWeights.length;b<c;b+=2)e=a.skinWeights[b],f=a.skinWeights[b+1],g=0,h=0,d.skinWeights.push(new THREE.Vector4(e,f,g,h));if(a.skinIndices)for(b=0,c=a.skinIndices.length;b<c;b+=2)i=a.skinIndices[b],j=a.skinIndices[b+1],k=0,l=0,d.skinIndices.push(new THREE.Vector4(i,j,k,l));d.bones=a.bones,d.animation=a.animation}function h(b){if(void 0!==a.morphTargets){var c,e,f,g,h,i;for(c=0,e=a.morphTargets.length;c<e;c++)for(d.morphTargets[c]={},d.morphTargets[c].name=a.morphTargets[c].name,d.morphTargets[c].vertices=[],h=d.morphTargets[c].vertices,i=a.morphTargets[c].vertices,f=0,g=i.length;f<g;f+=3){var j=new THREE.Vector3;j.x=i[f]*b,j.y=i[f+1]*b,j.z=i[f+2]*b,h.push(j)}}if(void 0!==a.morphColors){var c,e,k,l,m,n,o;for(c=0,e=a.morphColors.length;c<e;c++)for(d.morphColors[c]={},d.morphColors[c].name=a.morphColors[c].name,d.morphColors[c].colors=[],m=d.morphColors[c].colors,n=a.morphColors[c].colors,k=0,l=n.length;k<l;k+=3)o=new THREE.Color(16755200),o.setRGB(n[k],n[k+1],n[k+2]),m.push(o)}}var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;if(f(e),g(),h(e),d.computeCentroids(),d.computeFaceNormals(),void 0===a.materials)return{geometry:d};var i=this.initMaterials(a.materials,b);return this.needsTangents(i)&&d.computeTangents(),{geometry:d,materials:i}},THREE.LoadingMonitor=function(){var a=this,b=0,c=0,d=function(d){b++,a.dispatchEvent({type:"progress",loaded:b,total:c}),b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++,a.addEventListener("load",d,!1)}},THREE.LoadingMonitor.prototype={constructor:THREE.LoadingMonitor,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent},THREE.GeometryLoader=function(){},THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(a){var c=b.parse(JSON.parse(a.target.responseText));b.dispatchEvent({type:"load",content:c})},!1),c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1),c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1),c.open("GET",a,!0),c.send(null)},parse:function(a){}},THREE.MaterialLoader=function(){},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(a){var c=b.parse(JSON.parse(a.target.responseText));b.dispatchEvent({type:"load",content:c})},!1),c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1),c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1),c.open("GET",a,!0),c.send(null)},parse:function(a){var b;switch(a.type){case"MeshBasicMaterial":b=new THREE.MeshBasicMaterial({color:a.color,opacity:a.opacity,transparent:a.transparent,wireframe:a.wireframe});break;case"MeshLambertMaterial":b=new THREE.MeshLambertMaterial({color:a.color,ambient:a.ambient,emissive:a.emissive,opacity:a.opacity,transparent:a.transparent,wireframe:a.wireframe});break;case"MeshPhongMaterial":b=new THREE.MeshPhongMaterial({color:a.color,ambient:a.ambient,emissive:a.emissive,specular:a.specular,shininess:a.shininess,opacity:a.opacity,transparent:a.transparent,wireframe:a.wireframe});break;case"MeshNormalMaterial":b=new THREE.MeshNormalMaterial({opacity:a.opacity,transparent:a.transparent,wireframe:a.wireframe});break;case"MeshDepthMaterial":b=new THREE.MeshDepthMaterial({opacity:a.opacity,transparent:a.transparent,wireframe:a.wireframe})}return b}},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlerMap={},this.hierarchyHandlerMap={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")},d.open("GET",a,!0),d.send(null)},THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}},THREE.SceneLoader.prototype.addHierarchyHandler=function(a,b){this.hierarchyHandlerMap[a]={loaderClass:b}},THREE.SceneLoader.prototype.parse=function(a,b,c){function B(a,b){return"relativeToHTML"==b?a:e+"/"+a}function C(){D(t.scene,v.objects)}function D(a,b){var c,e,i,j,k,l;for(var p in b)if(void 0===t.objects[p]){var q=b[p],r=null;if(q.type&&q.type in d.hierarchyHandlerMap){if(void 0===q.loading){var s={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,userData:1,skin:1,morph:1,mirroredLoop:1,duration:1},w={};for(var x in q)x in s||(w[x]=q[x]);g=t.materials[q.material],q.loading=!0;var y=d.hierarchyHandlerMap[q.type].loaderObject;y.options?y.load(B(q.url,v.urlBaseType),H(p,a,g,q)):y.load(B(q.url,v.urlBaseType),H(p,a,g,q),w)}}else if(void 0!==q.geometry){if(f=t.geometries[q.geometry]){var z=!1;if(g=t.materials[q.material],z=g instanceof THREE.ShaderMaterial,i=q.position,j=q.rotation,k=q.scale,c=q.matrix,l=q.quaternion,q.material||(g=new THREE.MeshFaceMaterial(t.face_materials[q.geometry])),g instanceof THREE.MeshFaceMaterial&&0===g.materials.length&&(g=new THREE.MeshFaceMaterial(t.face_materials[q.geometry])),g instanceof THREE.MeshFaceMaterial)for(var A=0;A<g.materials.length;A++)z=z||g.materials[A]instanceof THREE.ShaderMaterial;z&&f.computeTangents(),q.skin?r=new THREE.SkinnedMesh(f,g):q.morph?(r=new THREE.MorphAnimMesh(f,g),void 0!==q.duration&&(r.duration=q.duration),void 0!==q.time&&(r.time=q.time),void 0!==q.mirroredLoop&&(r.mirroredLoop=q.mirroredLoop),g.morphNormals&&f.computeMorphNormals()):r=new THREE.Mesh(f,g),r.name=p,c?(r.matrixAutoUpdate=!1,r.matrix.set(c[0],c[1],c[2],c[3],c[4],c[5],c[6],c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])):(r.position.set(i[0],i[1],i[2]),l?(r.quaternion.set(l[0],l[1],l[2],l[3]),r.useQuaternion=!0):r.rotation.set(j[0],j[1],j[2]),r.scale.set(k[0],k[1],k[2])),r.visible=q.visible,r.castShadow=q.castShadow,r.receiveShadow=q.receiveShadow,a.add(r),t.objects[p]=r}}else"DirectionalLight"===q.type||"PointLight"===q.type||"AmbientLight"===q.type?(n=void 0!==q.color?q.color:16777215,o=void 0!==q.intensity?q.intensity:1,"DirectionalLight"===q.type?(i=q.direction,m=new THREE.DirectionalLight(n,o),m.position.set(i[0],i[1],i[2]),q.target&&(u.push({object:m,targetName:q.target}),m.target=null)):"PointLight"===q.type?(i=q.position,e=q.distance,m=new THREE.PointLight(n,o,e),m.position.set(i[0],i[1],i[2])):"AmbientLight"===q.type&&(m=new THREE.AmbientLight(n)),a.add(m),m.name=p,t.lights[p]=m,t.objects[p]=m):"PerspectiveCamera"===q.type||"OrthographicCamera"===q.type?(i=q.position,j=q.rotation,l=q.quaternion,"PerspectiveCamera"===q.type?h=new THREE.PerspectiveCamera(q.fov,q.aspect,q.near,q.far):"OrthographicCamera"===q.type&&(h=new THREE.OrthographicCamera(q.left,q.right,q.top,q.bottom,q.near,q.far)),h.name=p,h.position.set(i[0],i[1],i[2]),void 0!==l?(h.quaternion.set(l[0],l[1],l[2],l[3]),h.useQuaternion=!0):void 0!==j&&h.rotation.set(j[0],j[1],j[2]),a.add(h),t.cameras[p]=h,t.objects[p]=h):(i=q.position,j=q.rotation,k=q.scale,l=q.quaternion,r=new THREE.Object3D,r.name=p,r.position.set(i[0],i[1],i[2]),l?(r.quaternion.set(l[0],l[1],l[2],l[3]),r.useQuaternion=!0):r.rotation.set(j[0],j[1],j[2]),r.scale.set(k[0],k[1],k[2]),r.visible=void 0!==q.visible&&q.visible,a.add(r),t.objects[p]=r,t.empties[p]=r);if(r){if(void 0!==q.userData)for(var C in q.userData){var E=q.userData[C];r.userData[C]=E}if(void 0!==q.groups)for(var A=0;A<q.groups.length;A++){var F=q.groups[A];void 0===t.groups[F]&&(t.groups[F]=[]),t.groups[F].push(p)}void 0!==q.children&&D(r,q.children)}}}function E(a,b,c){t.geometries[c]=a,t.face_materials[c]=b,C()}function F(a,b,c,d,e){var f=e.position,g=e.rotation,h=e.quaternion,i=e.scale;a.position.set(f[0],f[1],f[2]),h?(a.quaternion.set(h[0],h[1],h[2],h[3]),a.useQuaternion=!0):a.rotation.set(g[0],g[1],g[2]),a.scale.set(i[0],i[1],i[2]),d&&a.traverse(function(a){a.material=d});var j=void 0===e.visible||e.visible;a.traverse(function(a){a.visible=j}),c.add(a),a.name=b,t.objects[b]=a,C()}function G(a){return function(b,c){b.name=a,E(b,c,a),p-=1,d.onLoadComplete(),J()}}function H(a,b,c,e){return function(f){var g;g=f.content?f.content:f.dae?f.scene:f,F(g,a,b,c,e),p-=1,d.onLoadComplete(),J()}}function I(a){return function(b,c){b.name=a,t.geometries[a]=b,t.face_materials[a]=c}}function J(){var a={totalModels:r,totalTextures:s,loadedModels:r-p,loadedTextures:s-q};d.callbackProgress(a,t),d.onLoadProgress(),0===p&&0===q&&(K(),b(t))}function K(){for(var a=0;a<u.length;a++){var b=u[a],c=t.objects[b.targetName];c?b.object.target=c:(b.object.target=new THREE.Object3D,t.scene.add(b.object.target)),b.object.target.userData.targetInverse=b.object}}var f,g,h,i,j,l,m,n,o,p,q,r,s,t,d=this,e=THREE.Loader.prototype.extractUrlBase(c),u=[],v=a;for(var w in this.geometryHandlerMap){var x=this.geometryHandlerMap[w].loaderClass;this.geometryHandlerMap[w].loaderObject=new x}for(var w in this.hierarchyHandlerMap){var x=this.hierarchyHandlerMap[w].loaderClass;this.hierarchyHandlerMap[w].loaderObject=new x}if(p=0,q=0,t={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},v.transform){var y=v.transform.position,z=v.transform.rotation,A=v.transform.scale;y&&t.scene.position.set(y[0],y[1],y[2]),z&&t.scene.rotation.set(z[0],z[1],z[2]),A&&t.scene.scale.set(A[0],A[1],A[2]),(y||z||A)&&(t.scene.updateMatrix(),t.scene.updateMatrixWorld())}var N,O,L=function(a){q-=a,J(),d.onLoadComplete()},M=function(a){return function(){L(a)}};for(N in v.fogs)O=v.fogs[N],"linear"===O.type?i=new THREE.Fog(0,O.near,O.far):"exp2"===O.type&&(i=new THREE.FogExp2(0,O.density)),l=O.color,i.color.setRGB(l[0],l[1],l[2]),t.fogs[N]=i;var P,Q;for(P in v.geometries)Q=v.geometries[P],Q.type in this.geometryHandlerMap&&(p+=1,d.onLoadStart());var R,S;for(R in v.objects)S=v.objects[R],S.type&&S.type in this.hierarchyHandlerMap&&(p+=1,d.onLoadStart());r=p;for(P in v.geometries)if(Q=v.geometries[P],"cube"===Q.type)f=new THREE.CubeGeometry(Q.width,Q.height,Q.depth,Q.widthSegments,Q.heightSegments,Q.depthSegments),f.name=P,t.geometries[P]=f;else if("plane"===Q.type)f=new THREE.PlaneGeometry(Q.width,Q.height,Q.widthSegments,Q.heightSegments),f.name=P,t.geometries[P]=f;else if("sphere"===Q.type)f=new THREE.SphereGeometry(Q.radius,Q.widthSegments,Q.heightSegments),f.name=P,t.geometries[P]=f;else if("cylinder"===Q.type)f=new THREE.CylinderGeometry(Q.topRad,Q.botRad,Q.height,Q.radSegs,Q.heightSegs),f.name=P,t.geometries[P]=f;else if("torus"===Q.type)f=new THREE.TorusGeometry(Q.radius,Q.tube,Q.segmentsR,Q.segmentsT),f.name=P,t.geometries[P]=f;else if("icosahedron"===Q.type)f=new THREE.IcosahedronGeometry(Q.radius,Q.subdivisions),f.name=P,t.geometries[P]=f;else if(Q.type in this.geometryHandlerMap){var T={};for(var U in Q)"type"!==U&&"url"!==U&&(T[U]=Q[U]);var V=this.geometryHandlerMap[Q.type].loaderObject;V.load(B(Q.url,v.urlBaseType),G(P),T)}else if("embedded"===Q.type){var W=v.embeds[Q.id],X="";if(W.metadata=v.metadata,W){var Y=this.geometryHandlerMap.ascii.loaderObject,Z=Y.parse(W,X);I(P)(Z.geometry,Z.materials)}}var $,_;for($ in v.textures)if(_=v.textures[$],_.url instanceof Array){q+=_.url.length;for(var aa=0;aa<_.url.length;aa++)d.onLoadStart()}else q+=1,d.onLoadStart();s=q;for($ in v.textures){if(_=v.textures[$],void 0!==_.mapping&&void 0!==THREE[_.mapping]&&(_.mapping=new THREE[_.mapping]),_.url instanceof Array){for(var ba=_.url.length,ca=[],da=0;da<ba;da++)ca[da]=B(_.url[da],v.urlBaseType);var ea=/\.dds$/i.test(ca[0]);j=ea?THREE.ImageUtils.loadCompressedTextureCube(ca,_.mapping,M(ba)):THREE.ImageUtils.loadTextureCube(ca,_.mapping,M(ba))}else{var ea=/\.dds$/i.test(_.url),fa=B(_.url,v.urlBaseType),ga=M(1);if(j=ea?THREE.ImageUtils.loadCompressedTexture(fa,_.mapping,ga):THREE.ImageUtils.loadTexture(fa,_.mapping,ga),void 0!==THREE[_.minFilter]&&(j.minFilter=THREE[_.minFilter]),void 0!==THREE[_.magFilter]&&(j.magFilter=THREE[_.magFilter]),_.anisotropy&&(j.anisotropy=_.anisotropy),_.repeat&&(j.repeat.set(_.repeat[0],_.repeat[1]),1!==_.repeat[0]&&(j.wrapS=THREE.RepeatWrapping),1!==_.repeat[1]&&(j.wrapT=THREE.RepeatWrapping)),_.offset&&j.offset.set(_.offset[0],_.offset[1]),_.wrap){var ha={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==ha[_.wrap[0]]&&(j.wrapS=ha[_.wrap[0]]),void 0!==ha[_.wrap[1]]&&(j.wrapT=ha[_.wrap[1]])}}t.textures[$]=j}var ia,ja,ka;for(ia in v.materials){ja=v.materials[ia];for(ka in ja.parameters)if("envMap"===ka||"map"===ka||"lightMap"===ka||"bumpMap"===ka)ja.parameters[ka]=t.textures[ja.parameters[ka]];else if("shading"===ka)ja.parameters[ka]="flat"===ja.parameters[ka]?THREE.FlatShading:THREE.SmoothShading;else if("side"===ka)"double"==ja.parameters[ka]?ja.parameters[ka]=THREE.DoubleSide:"back"==ja.parameters[ka]?ja.parameters[ka]=THREE.BackSide:ja.parameters[ka]=THREE.FrontSide;else if("blending"===ka)ja.parameters[ka]=ja.parameters[ka]in THREE?THREE[ja.parameters[ka]]:THREE.NormalBlending;else if("combine"===ka)ja.parameters[ka]=ja.parameters[ka]in THREE?THREE[ja.parameters[ka]]:THREE.MultiplyOperation;else if("vertexColors"===ka)"face"==ja.parameters[ka]?ja.parameters[ka]=THREE.FaceColors:ja.parameters[ka]&&(ja.parameters[ka]=THREE.VertexColors);else if("wrapRGB"===ka){var la=ja.parameters[ka];ja.parameters[ka]=new THREE.Vector3(la[0],la[1],la[2])}if(void 0!==ja.parameters.opacity&&ja.parameters.opacity<1&&(ja.parameters.transparent=!0),ja.parameters.normalMap){var ma=THREE.ShaderLib.normalmap,na=THREE.UniformsUtils.clone(ma.uniforms),oa=ja.parameters.color,pa=ja.parameters.specular,qa=ja.parameters.ambient,ra=ja.parameters.shininess;na.tNormal.value=t.textures[ja.parameters.normalMap],ja.parameters.normalScale&&na.uNormalScale.value.set(ja.parameters.normalScale[0],ja.parameters.normalScale[1]),ja.parameters.map&&(na.tDiffuse.value=ja.parameters.map,na.enableDiffuse.value=!0),ja.parameters.envMap&&(na.tCube.value=ja.parameters.envMap,na.enableReflection.value=!0,na.uReflectivity.value=ja.parameters.reflectivity),ja.parameters.lightMap&&(na.tAO.value=ja.parameters.lightMap,na.enableAO.value=!0),ja.parameters.specularMap&&(na.tSpecular.value=t.textures[ja.parameters.specularMap],na.enableSpecular.value=!0),ja.parameters.displacementMap&&(na.tDisplacement.value=t.textures[ja.parameters.displacementMap],na.enableDisplacement.value=!0,na.uDisplacementBias.value=ja.parameters.displacementBias,na.uDisplacementScale.value=ja.parameters.displacementScale),na.uDiffuseColor.value.setHex(oa),na.uSpecularColor.value.setHex(pa),na.uAmbientColor.value.setHex(qa),na.uShininess.value=ra,ja.parameters.opacity&&(na.uOpacity.value=ja.parameters.opacity);var sa={fragmentShader:ma.fragmentShader,vertexShader:ma.vertexShader,uniforms:na,lights:!0,fog:!0};g=new THREE.ShaderMaterial(sa)}else g=new THREE[ja.type](ja.parameters);g.name=ia,t.materials[ia]=g}for(ia in v.materials)if(ja=v.materials[ia],ja.parameters.materials){for(var ta=[],da=0;da<ja.parameters.materials.length;da++){var ua=ja.parameters.materials[da];ta.push(t.materials[ua])}t.materials[ia].materials=ta}C(),t.cameras&&v.defaults.camera&&(t.currentCamera=t.cameras[v.defaults.camera]),t.fogs&&v.defaults.fog&&(t.scene.fog=t.fogs[v.defaults.fog]),d.callbackSync(t),J()},THREE.TextureLoader=function(){this.crossOrigin=null},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0,b.dispatchEvent({type:"load",content:a})},!1),c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1),b.crossOrigin&&(c.crossOrigin=b.crossOrigin),c.src=a}},THREE.Material=function(){this.id=THREE.MaterialIdCount++,this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=!1,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0!==c){if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}else console.warn("THREE.Material: '"+b+"' parameter is undefined.")}},clone:function(a){return void 0===a&&(a=new THREE.Material),a.name=this.name,a.side=this.side,a.opacity=this.opacity,a.transparent=this.transparent,a.blending=this.blending,a.blendSrc=this.blendSrc,a.blendDst=this.blendDst,a.blendEquation=this.blendEquation,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.polygonOffset=this.polygonOffset,a.polygonOffsetFactor=this.polygonOffsetFactor,a.polygonOffsetUnits=this.polygonOffsetUnits,a.alphaTest=this.alphaTest,a.overdraw=this.overdraw,a.visible=this.visible,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.linewidth=this.linewidth,a.linecap=this.linecap,a.linejoin=this.linejoin,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.LineDashedMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.linewidth=this.linewidth,a.scale=this.scale,a.dashSize=this.dashSize,a.gapSize=this.gapSize,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.MeshBasicMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(a)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.lightMap=this.lightMap,a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a},THREE.MeshLambertMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.ambient.copy(this.ambient),a.emissive.copy(this.emissive),a.wrapAround=this.wrapAround,
a.wrapRGB.copy(this.wrapRGB),a.map=this.map,a.lightMap=this.lightMap,a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.MeshPhongMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.ambient.copy(this.ambient),a.emissive.copy(this.emissive),a.specular.copy(this.specular),a.shininess=this.shininess,a.metal=this.metal,a.perPixel=this.perPixel,a.wrapAround=this.wrapAround,a.wrapRGB.copy(this.wrapRGB),a.map=this.map,a.lightMap=this.lightMap,a.bumpMap=this.bumpMap,a.bumpScale=this.bumpScale,a.normalMap=this.normalMap,a.normalScale.copy(this.normalScale),a.specularMap=this.specularMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.MeshDepthMaterial=function(a){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(a)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,a),a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a},THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(a)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,a),a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a},THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.size=this.size,a.sizeAttenuation=this.sizeAttenuation,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(a,b){},this.setValues(a)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.program=this.program,a},THREE.ShaderMaterial=function(a){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,a),a.fragmentShader=this.fragmentShader,a.vertexShader=this.vertexShader,a.uniforms=THREE.UniformsUtils.clone(this.uniforms),a.attributes=this.attributes,a.defines=this.defines,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.fog=this.fog,a.lights=this.lights,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.SpriteMaterial=function(a){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(a),a=a||{},void 0===a.depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===a.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===a.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.useScreenCoordinates=this.useScreenCoordinates,a.sizeAttenuation=this.sizeAttenuation,a.scaleByViewport=this.scaleByViewport,a.alignment.copy(this.alignment),a.uvOffset.copy(this.uvOffset),a.uvScale.copy(this.uvScale),a.fog=this.fog,a},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Texture=function(a,b,c,d,e,f,g,h,i){this.id=THREE.TextureIdCount++,this.name="",this.image=a,this.mipmaps=[],this.mapping=void 0!==b?b:new THREE.UVMapping,this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==e?e:THREE.LinearFilter,this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i?i:1,this.format=void 0!==g?g:THREE.RGBAFormat,this.type=void 0!==h?h:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,clone:function(a){return void 0===a&&(a=new THREE.Texture),a.image=this.image,a.mipmaps=this.mipmaps.slice(0),a.mapping=this.mapping,a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.anisotropy=this.anisotropy,a.format=this.format,a.type=this.type,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.generateMipmaps=this.generateMipmaps,a.premultiplyAlpha=this.premultiplyAlpha,a.flipY=this.flipY,a.unpackAlignment=this.unpackAlignment,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.TextureIdCount=0,THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k),this.image={width:b,height:c},this.mipmaps=a,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,a),a},THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k),this.image={data:a,width:b,height:c}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,a),a},THREE.Particle=function(a){THREE.Object3D.call(this),this.material=a},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(a){return void 0===a&&(a=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this),this.geometry=a,this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(a){return void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material)),a.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,a),a},THREE.Line=function(a,b,c){THREE.Object3D.call(this),this.geometry=a,this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==c?c:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(a){return void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Mesh=function(a,b){THREE.Object3D.call(this),this.geometry=null,this.material=null,this.setGeometry(a),this.setMaterial(b)},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.setGeometry=function(a){void 0!==a&&(this.geometry=a,null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())},THREE.Mesh.prototype.setMaterial=function(a){void 0!==a?this.material=a:this.material=new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0})},THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){return void 0!==this.morphTargetDictionary[a]?this.morphTargetDictionary[a]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Bone=function(a){THREE.Object3D.call(this),this.skin=a,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix()),(b||this.matrixWorldNeedsUpdate)&&(a?this.skinMatrix.multiplyMatrices(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0);var d,e=this.children.length;for(d=0;d<e;d++)this.children[d].update(this.skinMatrix,b)},THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b),this.useVertexTexture=void 0===c||c,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var d,e,f,g,h,i;if(this.geometry&&void 0!==this.geometry.bones){for(d=0;d<this.geometry.bones.length;d++)f=this.geometry.bones[d],g=f.pos,h=f.rotq,i=f.scl,e=this.addBone(),e.name=f.name,e.position.set(g[0],g[1],g[2]),e.quaternion.set(h[0],h[1],h[2],h[3]),e.useQuaternion=!0,void 0!==i?e.scale.set(i[0],i[1],i[2]):e.scale.set(1,1,1);for(d=0;d<this.bones.length;d++)f=this.geometry.bones[d],e=this.bones[d],f.parent===-1?this.add(e):this.bones[f.parent].add(e);var j=this.bones.length;if(this.useVertexTexture){var k;k=j>256?64:j>64?32:j>16?16:8,this.boneTextureWidth=k,this.boneTextureHeight=k,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*j);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(a){return void 0===a&&(a=new THREE.Bone(this)),this.bones.push(a),a},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;b<c;b++){var d=this.children[b];d instanceof THREE.Bone?d.update(this.identityMatrix,!1):d.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var e=0,f=this.bones.length;e<f;e++){var g=new THREE.Matrix4;g.getInverse(this.bones[e].skinMatrix),this.boneInverses.push(g)}}for(var e=0,f=this.bones.length;e<f;e++)THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[e].skinMatrix,this.boneInverses[e]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*e);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();c!==1/0?b.multiplyScalar(c):b.set(1)}},THREE.SkinnedMesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,a),a},THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4,THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a,this.endKeyframe=b,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e],h=g.name.match(d);if(h&&h.length>1){var i=h[1];h[2];c[i]||(c[i]={start:1/0,end:-(1/0)});var k=c[i];e<k.start&&(k.start=e),e>k.end&&(k.end=e),b||(b=i)}}a.firstAnimation=b},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[a]={start:b,end:c}},THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1e3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var c=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);c!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[c]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=c);var d=this.time%b/b;this.directionBackwards&&(d=1-d),this.morphTargetInfluences[this.currentKeyframe]=d,this.morphTargetInfluences[this.lastKeyframe]=1-d},THREE.MorphAnimMesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material)),a.duration=this.duration,a.mirroredLoop=this.mirroredLoop,a.time=this.time,a.lastKeyframe=this.lastKeyframe,a.currentKeyframe=this.currentKeyframe,a.direction=this.direction,a.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,a),a},THREE.Ribbon=function(a,b){THREE.Object3D.call(this),this.geometry=a,this.material=b},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(a){return void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0),b=Math.abs(b);for(var c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a}),this.add(a)},THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;b<c&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object},THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(this.objects.length>1){a.getPositionFromMatrix(c.matrixWorld),b.getPositionFromMatrix(this.matrixWorld);var d=a.distanceTo(b);this.objects[0].object.visible=!0;for(var e=1,f=this.objects.length;e<f&&d>=this.objects[e].distance;e++)this.objects[e-1].object.visible=!1,this.objects[e].object.visible=!0;for(;e<f;e++)this.objects[e].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(a){THREE.Object3D.call(this),this.material=void 0!==a?a:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.rotation3d.set(0,0,this.rotation),this.quaternion.setFromEuler(this.rotation3d,this.eulerOrder),this.matrix.makeFromPositionQuaternionScale(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(a){return void 0===a&&(a=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)this.__lights.indexOf(a)===-1&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.__objects.indexOf(a)===-1){this.__objects.push(a),this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(var c=0;c<a.children.length;c++)this.__addObject(a.children[c])},THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);b!==-1&&this.__lights.splice(b,1)}else if(!(a instanceof THREE.Camera)){var b=this.__objects.indexOf(a);if(b!==-1){this.__objects.splice(b,1),this.__objectsRemoved.push(a);var c=this.__objectsAdded.indexOf(a);c!==-1&&this.__objectsAdded.splice(c,1)}}for(var d=0;d<a.children.length;d++)this.__removeObject(a.children[d])},THREE.Fog=function(a,b,c){this.name="",this.color=new THREE.Color(a),this.near=void 0!==b?b:1,this.far=void 0!==c?c:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(a,b){this.name="",this.color=new THREE.Color(a),this.density=void 0!==b?b:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(a){function wa(a){p!==a&&(m.globalAlpha=a,p=a)}function xa(a){q!==a&&(a===THREE.NormalBlending?m.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?m.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(m.globalCompositeOperation="darker"),q=a)}function ya(a){t!==a&&(m.lineWidth=a,t=a)}function za(a){u!==a&&(m.lineCap=a,u=a)}function Aa(a){v!==a&&(m.lineJoin=a,v=a)}function Ba(a){r!==a&&(m.strokeStyle=a,r=a)}function Ca(a){s!==a&&(m.fillStyle=a,s=a)}function Da(a,b){w===a&&x===b||(m.setLineDash([a,b]),w=a,x=b)}console.log("THREE.CanvasRenderer",THREE.REVISION);var b=THREE.Math.smoothstep;a=a||{};var d,e,f,i,j,k,l,y,z,A,B,E,F,G,H,I,J,K,L,M,N,O,P,$,_,aa,ba,ca,da,ea,fa,ga,ha,pa,qa,ra,sa,ta,ua,c=this,g=new THREE.Projector,h=void 0!==a.canvas?a.canvas:document.createElement("canvas"),m=h.getContext("2d"),n=new THREE.Color(0),o=0,p=1,q=0,r=null,s=null,t=null,u=null,v=null,w=null,x=0,C=new THREE.RenderableVertex,D=new THREE.RenderableVertex,Q=new THREE.Color,R=new THREE.Color,S=new THREE.Color,T=new THREE.Color,U=new THREE.Color,V=new THREE.Color,W=new THREE.Color,X=new THREE.Color,Y={},Z={},ia=new THREE.Box2,ja=new THREE.Box2,ka=new THREE.Box2,la=new THREE.Color,ma=new THREE.Color,na=new THREE.Color,oa=new THREE.Vector3,va=16;pa=document.createElement("canvas"),pa.width=pa.height=2,qa=pa.getContext("2d"),qa.fillStyle="rgba(0,0,0,1)",qa.fillRect(0,0,2,2),ra=qa.getImageData(0,0,2,2),sa=ra.data,ta=document.createElement("canvas"),ta.width=ta.height=va,ua=ta.getContext("2d"),ua.translate(-va/2,-va/2),ua.scale(va,va),va--,void 0===m.setLineDash&&(void 0!==m.mozDash?m.setLineDash=function(a){m.mozDash=null!==a[0]?a:null}:m.setLineDash=function(){}),this.domElement=h,this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(a,b,c){i=a*this.devicePixelRatio,j=b*this.devicePixelRatio,k=Math.floor(i/2),l=Math.floor(j/2),h.width=i,h.height=j,1!==this.devicePixelRatio&&c!==!1&&(h.style.width=a+"px",h.style.height=b+"px"),ia.set(new THREE.Vector2(-k,-l),new THREE.Vector2(k,l)),ja.set(new THREE.Vector2(-k,-l),new THREE.Vector2(k,l)),p=1,q=0,r=null,s=null,t=null,u=null,v=null},this.setClearColor=function(a,b){n.set(a),o=void 0!==b?b:1,ja.set(new THREE.Vector2(-k,-l),new THREE.Vector2(k,l))},this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(a,b)},this.getMaxAnisotropy=function(){return 0},this.clear=function(){m.setTransform(1,0,0,-1,k,l),ja.empty()===!1&&(ja.intersect(ia),ja.expandByScalar(2),o<1&&m.clearRect(0|ja.min.x,0|ja.min.y,ja.max.x-ja.min.x|0,ja.max.y-ja.min.y|0),o>0&&(xa(THREE.NormalBlending),wa(1),Ca("rgba("+Math.floor(255*n.r)+","+Math.floor(255*n.g)+","+Math.floor(255*n.b)+","+o+")"),m.fillRect(0|ja.min.x,0|ja.min.y,ja.max.x-ja.min.x|0,ja.max.y-ja.min.y|0)),ja.makeEmpty())},this.render=function(a,h){function p(){la.setRGB(0,0,0),ma.setRGB(0,0,0),na.setRGB(0,0,0);for(var a=0,b=f.length;a<b;a++){var c=f[a],d=c.color;c instanceof THREE.AmbientLight?la.add(d):c instanceof THREE.DirectionalLight?ma.add(d):c instanceof THREE.PointLight&&na.add(d)}}function q(a,b,c){for(var d=0,e=f.length;d<e;d++){var g=f[d];if(X.copy(g.color),g instanceof THREE.DirectionalLight){var h=oa.getPositionFromMatrix(g.matrixWorld).normalize(),i=b.dot(h);if(i<=0)continue;i*=g.intensity,c.add(X.multiplyScalar(i))}else if(g instanceof THREE.PointLight){var h=oa.getPositionFromMatrix(g.matrixWorld),i=b.dot(oa.subVectors(h,a).normalize());if(i<=0)continue;if(i*=0==g.distance?1:1-Math.min(a.distanceTo(h)/g.distance,1),0==i)continue;i*=g.intensity,c.add(X.multiplyScalar(i))}}}function r(a,b,c){wa(c.opacity),xa(c.blending);var d,e,f,g,h,i,j;if(c instanceof THREE.ParticleBasicMaterial)if(null===c.map){if(f=b.object.scale.x,g=b.object.scale.y,f*=b.scale.x*k,g*=b.scale.y*l,ka.min.set(a.x-f,a.y-g),ka.max.set(a.x+f,a.y+g),ia.isIntersectionBox(ka)===!1)return void ka.makeEmpty();Ca(c.color.getStyle()),m.save(),m.translate(a.x,a.y),m.rotate(-b.rotation),m.scale(f,g),m.fillRect(-1,-1,2,2),m.restore()}else{if(h=c.map.image,i=h.width>>1,j=h.height>>1,f=b.scale.x*k,g=b.scale.y*l,d=f*i,e=g*j,ka.min.set(a.x-d,a.y-e),ka.max.set(a.x+d,a.y+e),ia.isIntersectionBox(ka)===!1)return void ka.makeEmpty();m.save(),m.translate(a.x,a.y),m.rotate(-b.rotation),m.scale(f,-g),m.translate(-i,-j),m.drawImage(h,0,0),m.restore()}else if(c instanceof THREE.ParticleCanvasMaterial){if(d=b.scale.x*k,e=b.scale.y*l,ka.min.set(a.x-d,a.y-e),ka.max.set(a.x+d,a.y+e),ia.isIntersectionBox(ka)===!1)return void ka.makeEmpty();Ba(c.color.getStyle()),Ca(c.color.getStyle()),m.save(),m.translate(a.x,a.y),m.rotate(-b.rotation),m.scale(d,e),c.program(m),m.restore()}}function s(a,b,c,d){if(wa(d.opacity),xa(d.blending),m.beginPath(),m.moveTo(a.positionScreen.x,a.positionScreen.y),m.lineTo(b.positionScreen.x,b.positionScreen.y),d instanceof THREE.LineBasicMaterial){if(ya(d.linewidth),za(d.linecap),Aa(d.linejoin),d.vertexColors!==THREE.VertexColors)Ba(d.color.getStyle());else{var e=c.vertexColors[0].getStyle(),f=c.vertexColors[1].getStyle();if(e===f)Ba(e);else{var g=m.createLinearGradient(a.positionScreen.x,a.positionScreen.y,b.positionScreen.x,b.positionScreen.y);g.addColorStop(0,e),g.addColorStop(1,f),Ba(g)}}m.stroke(),ka.expandByScalar(2*d.linewidth)}else d instanceof THREE.LineDashedMaterial&&(ya(d.linewidth),za(d.linecap),Aa(d.linejoin),Ba(d.color.getStyle()),Da(d.dashSize,d.gapSize),m.stroke(),ka.expandByScalar(2*d.linewidth),Da(null,null))}function t(a,d,e,f,g,i,j,k){if(c.info.render.vertices+=3,c.info.render.faces++,wa(k.opacity),xa(k.blending),E=a.positionScreen.x,F=a.positionScreen.y,G=d.positionScreen.x,H=d.positionScreen.y,I=e.positionScreen.x,J=e.positionScreen.y,v(E,F,G,H,I,J),(k instanceof THREE.MeshLambertMaterial||k instanceof THREE.MeshPhongMaterial)&&null===k.map)V.copy(k.color),W.copy(k.emissive),k.vertexColors===THREE.FaceColors&&V.multiply(j.color),k.wireframe===!1&&k.shading==THREE.SmoothShading&&3==j.vertexNormalsLength?(R.copy(la),S.copy(la),T.copy(la),q(j.v1.positionWorld,j.vertexNormalsModel[0],R),q(j.v2.positionWorld,j.vertexNormalsModel[1],S),q(j.v3.positionWorld,j.vertexNormalsModel[2],T),R.multiply(V).add(W),S.multiply(V).add(W),T.multiply(V).add(W),U.addColors(S,T).multiplyScalar(.5),aa=Ga(R,S,T,U),Fa(E,F,G,H,I,J,0,0,1,0,0,1,aa)):(Q.copy(la),q(j.centroidModel,j.normalModel,Q),Q.multiply(V).add(W),k.wireframe===!0?x(Q,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):va(Q));else if(k instanceof THREE.MeshBasicMaterial||k instanceof THREE.MeshLambertMaterial||k instanceof THREE.MeshPhongMaterial)null!==k.map?k.map.mapping instanceof THREE.UVMapping&&(ba=j.uvs[0],Ea(E,F,G,H,I,J,ba[f].x,ba[f].y,ba[g].x,ba[g].y,ba[i].x,ba[i].y,k.map)):null!==k.envMap?k.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(oa.copy(j.vertexNormalsModelView[f]),ca=.5*oa.x+.5,da=.5*oa.y+.5,oa.copy(j.vertexNormalsModelView[g]),ea=.5*oa.x+.5,fa=.5*oa.y+.5,oa.copy(j.vertexNormalsModelView[i]),ga=.5*oa.x+.5,ha=.5*oa.y+.5,Ea(E,F,G,H,I,J,ca,da,ea,fa,ga,ha,k.envMap)):(Q.copy(k.color),k.vertexColors===THREE.FaceColors&&Q.multiply(j.color),k.wireframe===!0?x(Q,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):va(Q));else if(k instanceof THREE.MeshDepthMaterial)$=h.near,_=h.far,R.r=R.g=R.b=1-b(a.positionScreen.z*a.positionScreen.w,$,_),S.r=S.g=S.b=1-b(d.positionScreen.z*d.positionScreen.w,$,_),T.r=T.g=T.b=1-b(e.positionScreen.z*e.positionScreen.w,$,_),U.addColors(S,T).multiplyScalar(.5),aa=Ga(R,S,T,U),Fa(E,F,G,H,I,J,0,0,1,0,0,1,aa);else if(k instanceof THREE.MeshNormalMaterial){var l;k.shading==THREE.FlatShading?(l=j.normalModelView,Q.setRGB(l.x,l.y,l.z).multiplyScalar(.5).addScalar(.5),k.wireframe===!0?x(Q,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):va(Q)):k.shading==THREE.SmoothShading&&(l=j.vertexNormalsModelView[f],R.setRGB(l.x,l.y,l.z).multiplyScalar(.5).addScalar(.5),l=j.vertexNormalsModelView[g],S.setRGB(l.x,l.y,l.z).multiplyScalar(.5).addScalar(.5),l=j.vertexNormalsModelView[i],T.setRGB(l.x,l.y,l.z).multiplyScalar(.5).addScalar(.5),U.addColors(S,T).multiplyScalar(.5),aa=Ga(R,S,T,U),Fa(E,F,G,H,I,J,0,0,1,0,0,1,aa))}}function u(a,d,e,f,g,i,j,k){if(c.info.render.vertices+=4,c.info.render.faces++,wa(k.opacity),xa(k.blending),void 0!==k.map&&null!==k.map||void 0!==k.envMap&&null!==k.envMap)return t(a,d,f,0,1,3,j,k),void t(g,e,i,1,2,3,j,k);if(E=a.positionScreen.x,F=a.positionScreen.y,G=d.positionScreen.x,H=d.positionScreen.y,I=e.positionScreen.x,J=e.positionScreen.y,K=f.positionScreen.x,L=f.positionScreen.y,M=g.positionScreen.x,N=g.positionScreen.y,O=i.positionScreen.x,P=i.positionScreen.y,k instanceof THREE.MeshLambertMaterial||k instanceof THREE.MeshPhongMaterial)V.copy(k.color),W.copy(k.emissive),k.vertexColors===THREE.FaceColors&&V.multiply(j.color),k.wireframe===!1&&k.shading==THREE.SmoothShading&&4==j.vertexNormalsLength?(R.copy(la),S.copy(la),T.copy(la),U.copy(la),q(j.v1.positionWorld,j.vertexNormalsModel[0],R),q(j.v2.positionWorld,j.vertexNormalsModel[1],S),q(j.v4.positionWorld,j.vertexNormalsModel[3],T),q(j.v3.positionWorld,j.vertexNormalsModel[2],U),R.multiply(V).add(W),S.multiply(V).add(W),T.multiply(V).add(W),U.multiply(V).add(W),aa=Ga(R,S,T,U),v(E,F,G,H,K,L),Fa(E,F,G,H,K,L,0,0,1,0,0,1,aa),v(M,N,I,J,O,P),Fa(M,N,I,J,O,P,1,0,1,1,0,1,aa)):(Q.copy(la),q(j.centroidModel,j.normalModel,Q),Q.multiply(V).add(W),w(E,F,G,H,I,J,K,L),k.wireframe===!0?x(Q,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):va(Q));else if(k instanceof THREE.MeshBasicMaterial)Q.copy(k.color),k.vertexColors===THREE.FaceColors&&Q.multiply(j.color),w(E,F,G,H,I,J,K,L),k.wireframe===!0?x(Q,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):va(Q);else if(k instanceof THREE.MeshNormalMaterial){var l;k.shading==THREE.FlatShading?(l=j.normalModelView,Q.setRGB(l.x,l.y,l.z).multiplyScalar(.5).addScalar(.5),w(E,F,G,H,I,J,K,L),k.wireframe===!0?x(Q,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):va(Q)):k.shading==THREE.SmoothShading&&(l=j.vertexNormalsModelView[0],R.setRGB(l.x,l.y,l.z).multiplyScalar(.5).addScalar(.5),
l=j.vertexNormalsModelView[1],S.setRGB(l.x,l.y,l.z).multiplyScalar(.5).addScalar(.5),l=j.vertexNormalsModelView[3],T.setRGB(l.x,l.y,l.z).multiplyScalar(.5).addScalar(.5),l=j.vertexNormalsModelView[2],U.setRGB(l.x,l.y,l.z).multiplyScalar(.5).addScalar(.5),aa=Ga(R,S,T,U),v(E,F,G,H,K,L),Fa(E,F,G,H,K,L,0,0,1,0,0,1,aa),v(M,N,I,J,O,P),Fa(M,N,I,J,O,P,1,0,1,1,0,1,aa))}else k instanceof THREE.MeshDepthMaterial&&($=h.near,_=h.far,R.r=R.g=R.b=1-b(a.positionScreen.z*a.positionScreen.w,$,_),S.r=S.g=S.b=1-b(d.positionScreen.z*d.positionScreen.w,$,_),T.r=T.g=T.b=1-b(f.positionScreen.z*f.positionScreen.w,$,_),U.r=U.g=U.b=1-b(e.positionScreen.z*e.positionScreen.w,$,_),aa=Ga(R,S,T,U),v(E,F,G,H,K,L),Fa(E,F,G,H,K,L,0,0,1,0,0,1,aa),v(M,N,I,J,O,P),Fa(M,N,I,J,O,P,1,0,1,1,0,1,aa))}function v(a,b,c,d,e,f){m.beginPath(),m.moveTo(a,b),m.lineTo(c,d),m.lineTo(e,f),m.closePath()}function w(a,b,c,d,e,f,g,h){m.beginPath(),m.moveTo(a,b),m.lineTo(c,d),m.lineTo(e,f),m.lineTo(g,h),m.closePath()}function x(a,b,c,d){ya(b),za(c),Aa(d),Ba(a.getStyle()),m.stroke(),ka.expandByScalar(2*b)}function va(a){Ca(a.getStyle()),m.fill()}function Ea(a,b,c,d,e,f,g,h,i,j,k,l,n){if(!(n instanceof THREE.DataTexture||void 0===n.image||0==n.image.width)){if(n.needsUpdate===!0){var o=n.wrapS==THREE.RepeatWrapping,p=n.wrapT==THREE.RepeatWrapping;Y[n.id]=m.createPattern(n.image,o===!0&&p===!0?"repeat":o===!0&&p===!1?"repeat-x":o===!1&&p===!0?"repeat-y":"no-repeat"),n.needsUpdate=!1}Ca(void 0===Y[n.id]?"rgba(0,0,0,1)":Y[n.id]);var q,r,s,t,u,v,w,x,y=n.offset.x/n.repeat.x,z=n.offset.y/n.repeat.y,A=n.image.width*n.repeat.x,B=n.image.height*n.repeat.y;if(g=(g+y)*A,h=(1-h+z)*B,i=(i+y)*A,j=(1-j+z)*B,k=(k+y)*A,l=(1-l+z)*B,c-=a,d-=b,e-=a,f-=b,i-=g,j-=h,k-=g,l-=h,w=i*l-k*j,0===w){if(void 0===Z[n.id]){var C=document.createElement("canvas");C.width=n.image.width,C.height=n.image.height;var D=C.getContext("2d");D.drawImage(n.image,0,0),Z[n.id]=D.getImageData(0,0,n.image.width,n.image.height).data}var E=Z[n.id],F=4*(Math.floor(g)+Math.floor(h)*n.image.width);return Q.setRGB(E[F]/255,E[F+1]/255,E[F+2]/255),void va(Q)}x=1/w,q=(l*c-j*e)*x,r=(l*d-j*f)*x,s=(i*e-k*c)*x,t=(i*f-k*d)*x,u=a-q*g-s*h,v=b-r*g-t*h,m.save(),m.transform(q,r,s,t,u,v),m.fill(),m.restore()}}function Fa(a,b,c,d,e,f,g,h,i,j,k,l,n){var o,p,q,r,s,t,u,v,w=n.width-1,x=n.height-1;g*=w,h*=x,i*=w,j*=x,k*=w,l*=x,c-=a,d-=b,e-=a,f-=b,i-=g,j-=h,k-=g,l-=h,u=i*l-k*j,v=1/u,o=(l*c-j*e)*v,p=(l*d-j*f)*v,q=(i*e-k*c)*v,r=(i*f-k*d)*v,s=a-o*g-q*h,t=b-p*g-r*h,m.save(),m.transform(o,p,q,r,s,t),m.clip(),m.drawImage(n,0,0),m.restore()}function Ga(a,b,c,d){return sa[0]=255*a.r|0,sa[1]=255*a.g|0,sa[2]=255*a.b|0,sa[4]=255*b.r|0,sa[5]=255*b.g|0,sa[6]=255*b.b|0,sa[8]=255*c.r|0,sa[9]=255*c.g|0,sa[10]=255*c.b|0,sa[12]=255*d.r|0,sa[13]=255*d.g|0,sa[14]=255*d.b|0,qa.putImageData(ra,0,0),ua.drawImage(pa,0,0),ta}function Ha(a,b){var f,c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;0!==e&&(f=1/Math.sqrt(e),c*=f,d*=f,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(h instanceof THREE.Camera==!1)return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");this.autoClear===!0&&this.clear(),m.setTransform(1,0,0,-1,k,l),c.info.render.vertices=0,c.info.render.faces=0,d=g.projectScene(a,h,this.sortObjects,this.sortElements),e=d.elements,f=d.lights,p();for(var i=0,j=e.length;i<j;i++){var n=e[i],o=n.material;if(void 0!==o&&o.visible!==!1){if(ka.makeEmpty(),n instanceof THREE.RenderableParticle)y=n,y.x*=k,y.y*=l,r(y,n,o);else if(n instanceof THREE.RenderableLine)y=n.v1,z=n.v2,y.positionScreen.x*=k,y.positionScreen.y*=l,z.positionScreen.x*=k,z.positionScreen.y*=l,ka.setFromPoints([y.positionScreen,z.positionScreen]),ia.isIntersectionBox(ka)===!0&&s(y,z,n,o);else if(n instanceof THREE.RenderableFace3){if(y=n.v1,z=n.v2,A=n.v3,y.positionScreen.z<-1||y.positionScreen.z>1)continue;if(z.positionScreen.z<-1||z.positionScreen.z>1)continue;if(A.positionScreen.z<-1||A.positionScreen.z>1)continue;y.positionScreen.x*=k,y.positionScreen.y*=l,z.positionScreen.x*=k,z.positionScreen.y*=l,A.positionScreen.x*=k,A.positionScreen.y*=l,o.overdraw===!0&&(Ha(y.positionScreen,z.positionScreen),Ha(z.positionScreen,A.positionScreen),Ha(A.positionScreen,y.positionScreen)),ka.setFromPoints([y.positionScreen,z.positionScreen,A.positionScreen]),ia.isIntersectionBox(ka)===!0&&t(y,z,A,0,1,2,n,o)}else if(n instanceof THREE.RenderableFace4){if(y=n.v1,z=n.v2,A=n.v3,B=n.v4,y.positionScreen.z<-1||y.positionScreen.z>1)continue;if(z.positionScreen.z<-1||z.positionScreen.z>1)continue;if(A.positionScreen.z<-1||A.positionScreen.z>1)continue;if(B.positionScreen.z<-1||B.positionScreen.z>1)continue;y.positionScreen.x*=k,y.positionScreen.y*=l,z.positionScreen.x*=k,z.positionScreen.y*=l,A.positionScreen.x*=k,A.positionScreen.y*=l,B.positionScreen.x*=k,B.positionScreen.y*=l,C.positionScreen.copy(z.positionScreen),D.positionScreen.copy(B.positionScreen),o.overdraw===!0&&(Ha(y.positionScreen,z.positionScreen),Ha(z.positionScreen,B.positionScreen),Ha(B.positionScreen,y.positionScreen),Ha(A.positionScreen,C.positionScreen),Ha(A.positionScreen,D.positionScreen)),ka.setFromPoints([y.positionScreen,z.positionScreen,A.positionScreen,B.positionScreen]),ia.isIntersectionBox(ka)===!0&&u(y,z,A,B,C,D,n,o)}ja.union(ka)}}m.setTransform(1,0,0,1,0,0)}},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -vViewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),
skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix \t+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","vec3 shadowZ = vec3( shadowCoord.z );","shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));","shadowKernel[0] *= vec3(0.25);","shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));","shadowKernel[1] *= vec3(0.25);","shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));","shadowKernel[2] *= vec3(0.25);","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++){d=this.clone(a[b]);for(c in d)e[c]=d[c]}return e},clone:function(a){var b,c,e,f={};for(b in a){f[b]={};for(c in a[b])e=a[b][c],e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?f[b][c]=e.clone():e instanceof Array?f[b][c]=e.slice():f[b][c]=e}return f}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {","vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned \t  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")
},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.WebGLRenderer=function(a){function ta(a){a.__webglVertexBuffer=U.createBuffer(),a.__webglColorBuffer=U.createBuffer(),k.info.memory.geometries++}function ua(a){a.__webglVertexBuffer=U.createBuffer(),a.__webglColorBuffer=U.createBuffer(),a.__webglLineDistanceBuffer=U.createBuffer(),k.info.memory.geometries++}function va(a){a.__webglVertexBuffer=U.createBuffer(),a.__webglColorBuffer=U.createBuffer(),a.__webglNormalBuffer=U.createBuffer(),k.info.memory.geometries++}function wa(a){a.__webglVertexBuffer=U.createBuffer(),a.__webglNormalBuffer=U.createBuffer(),a.__webglTangentBuffer=U.createBuffer(),a.__webglColorBuffer=U.createBuffer(),a.__webglUVBuffer=U.createBuffer(),a.__webglUV2Buffer=U.createBuffer(),a.__webglSkinIndicesBuffer=U.createBuffer(),a.__webglSkinWeightsBuffer=U.createBuffer(),a.__webglFaceBuffer=U.createBuffer(),a.__webglLineBuffer=U.createBuffer();var b,c;if(a.numMorphTargets)for(a.__webglMorphTargetsBuffers=[],b=0,c=a.numMorphTargets;b<c;b++)a.__webglMorphTargetsBuffers.push(U.createBuffer());if(a.numMorphNormals)for(a.__webglMorphNormalsBuffers=[],b=0,c=a.numMorphNormals;b<c;b++)a.__webglMorphNormalsBuffers.push(U.createBuffer());k.info.memory.geometries++}function Fa(a){if(a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)U.deleteBuffer(a.__webglCustomAttributesList[b].buffer)}function Ga(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3),f.size=g,f.array=new Float32Array(c*g),f.buffer=U.createBuffer(),f.buffer.belongsToAttribute=e,f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function Ha(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__sortArray=[],a.__webglParticleCount=c,Ga(a,b)}function Ia(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__lineDistanceArray=new Float32Array(1*c),a.__webglLineCount=c,Ga(a,b)}function Ja(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__normalArray=new Float32Array(3*c),a.__webglVertexCount=c,Ga(a,b)}function Ka(a,b){var c=b.geometry,d=a.faces3,e=a.faces4,f=3*d.length+4*e.length,g=1*d.length+2*e.length,h=3*d.length+4*e.length,i=La(b,a),j=Pa(i),k=Na(i),l=Oa(i);a.__vertexArray=new Float32Array(3*f),k&&(a.__normalArray=new Float32Array(3*f)),c.hasTangents&&(a.__tangentArray=new Float32Array(4*f)),l&&(a.__colorArray=new Float32Array(3*f)),j&&((c.faceUvs.length>0||c.faceVertexUvs.length>0)&&(a.__uvArray=new Float32Array(2*f)),(c.faceUvs.length>1||c.faceVertexUvs.length>1)&&(a.__uv2Array=new Float32Array(2*f))),b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*f),a.__skinWeightArray=new Float32Array(4*f)),a.__faceArray=new Uint16Array(3*g),a.__lineArray=new Uint16Array(2*h);var m,n;if(a.numMorphTargets)for(a.__morphTargetsArrays=[],m=0,n=a.numMorphTargets;m<n;m++)a.__morphTargetsArrays.push(new Float32Array(3*f));if(a.numMorphNormals)for(a.__morphNormalsArrays=[],m=0,n=a.numMorphNormals;m<n;m++)a.__morphNormalsArrays.push(new Float32Array(3*f));if(a.__webglFaceCount=3*g,a.__webglLineCount=2*h,i.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var o in i.attributes){var p=i.attributes[o],q={};for(var r in p)q[r]=p[r];if(!q.__webglInitialized||q.createUniqueBuffers){q.__webglInitialized=!0;var s=1;"v2"===q.type?s=2:"v3"===q.type?s=3:"v4"===q.type?s=4:"c"===q.type&&(s=3),q.size=s,q.array=new Float32Array(f*s),q.buffer=U.createBuffer(),q.buffer.belongsToAttribute=o,p.needsUpdate=!0,q.__original=p}a.__webglCustomAttributesList.push(q)}}a.__inittedArrays=!0}function La(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function Ma(a){return a&&void 0!==a.shading&&a.shading===THREE.SmoothShading}function Na(a){return!(a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial)&&(Ma(a)?THREE.SmoothShading:THREE.FlatShading)}function Oa(a){return!!a.vertexColors&&a.vertexColors}function Pa(a){return!!(a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial)}function Qa(a){var b,c,d;for(b in a.attributes)d="index"===b?U.ELEMENT_ARRAY_BUFFER:U.ARRAY_BUFFER,c=a.attributes[b],c.buffer=U.createBuffer(),U.bindBuffer(d,c.buffer),U.bufferData(d,c.array,U.STATIC_DRAW)}function Ra(a,b,c){var d,e,f,g,h,i,u,v,x,y,z,A,j=a.vertices,k=j.length,l=a.colors,m=l.length,n=a.__vertexArray,o=a.__colorArray,p=a.__sortArray,q=a.verticesNeedUpdate,s=(a.elementsNeedUpdate,a.colorsNeedUpdate),t=a.__webglCustomAttributesList;if(c.sortParticles){for(P.copy(O),P.multiply(c.matrixWorld),d=0;d<k;d++)f=j[d],Q.copy(f),Q.applyProjection(P),p[d]=[Q.z,d];for(p.sort($a),d=0;d<k;d++)f=j[p[d][1]],g=3*d,n[g]=f.x,n[g+1]=f.y,n[g+2]=f.z;for(e=0;e<m;e++)g=3*e,i=l[p[e][1]],o[g]=i.r,o[g+1]=i.g,o[g+2]=i.b;if(t)for(u=0,v=t.length;u<v;u++)if(A=t[u],void 0===A.boundTo||"vertices"===A.boundTo)if(g=0,y=A.value.length,1===A.size)for(x=0;x<y;x++)h=p[x][1],A.array[x]=A.value[h];else if(2===A.size)for(x=0;x<y;x++)h=p[x][1],z=A.value[h],A.array[g]=z.x,A.array[g+1]=z.y,g+=2;else if(3===A.size)if("c"===A.type)for(x=0;x<y;x++)h=p[x][1],z=A.value[h],A.array[g]=z.r,A.array[g+1]=z.g,A.array[g+2]=z.b,g+=3;else for(x=0;x<y;x++)h=p[x][1],z=A.value[h],A.array[g]=z.x,A.array[g+1]=z.y,A.array[g+2]=z.z,g+=3;else if(4===A.size)for(x=0;x<y;x++)h=p[x][1],z=A.value[h],A.array[g]=z.x,A.array[g+1]=z.y,A.array[g+2]=z.z,A.array[g+3]=z.w,g+=4}else{if(q)for(d=0;d<k;d++)f=j[d],g=3*d,n[g]=f.x,n[g+1]=f.y,n[g+2]=f.z;if(s)for(e=0;e<m;e++)i=l[e],g=3*e,o[g]=i.r,o[g+1]=i.g,o[g+2]=i.b;if(t)for(u=0,v=t.length;u<v;u++)if(A=t[u],A.needsUpdate&&(void 0===A.boundTo||"vertices"===A.boundTo))if(y=A.value.length,g=0,1===A.size)for(x=0;x<y;x++)A.array[x]=A.value[x];else if(2===A.size)for(x=0;x<y;x++)z=A.value[x],A.array[g]=z.x,A.array[g+1]=z.y,g+=2;else if(3===A.size)if("c"===A.type)for(x=0;x<y;x++)z=A.value[x],A.array[g]=z.r,A.array[g+1]=z.g,A.array[g+2]=z.b,g+=3;else for(x=0;x<y;x++)z=A.value[x],A.array[g]=z.x,A.array[g+1]=z.y,A.array[g+2]=z.z,g+=3;else if(4===A.size)for(x=0;x<y;x++)z=A.value[x],A.array[g]=z.x,A.array[g+1]=z.y,A.array[g+2]=z.z,A.array[g+3]=z.w,g+=4}if((q||c.sortParticles)&&(U.bindBuffer(U.ARRAY_BUFFER,a.__webglVertexBuffer),U.bufferData(U.ARRAY_BUFFER,n,b)),(s||c.sortParticles)&&(U.bindBuffer(U.ARRAY_BUFFER,a.__webglColorBuffer),U.bufferData(U.ARRAY_BUFFER,o,b)),t)for(u=0,v=t.length;u<v;u++)A=t[u],(A.needsUpdate||c.sortParticles)&&(U.bindBuffer(U.ARRAY_BUFFER,A.buffer),U.bufferData(U.ARRAY_BUFFER,A.array,b))}function Sa(a,b){var c,d,e,f,g,h,v,w,y,z,A,B,i=a.vertices,j=a.colors,k=a.lineDistances,l=i.length,m=j.length,n=k.length,o=a.__vertexArray,p=a.__colorArray,q=a.__lineDistanceArray,r=a.verticesNeedUpdate,s=a.colorsNeedUpdate,t=a.lineDistancesNeedUpdate,u=a.__webglCustomAttributesList;if(r){for(c=0;c<l;c++)f=i[c],g=3*c,o[g]=f.x,o[g+1]=f.y,o[g+2]=f.z;U.bindBuffer(U.ARRAY_BUFFER,a.__webglVertexBuffer),U.bufferData(U.ARRAY_BUFFER,o,b)}if(s){for(d=0;d<m;d++)h=j[d],g=3*d,p[g]=h.r,p[g+1]=h.g,p[g+2]=h.b;U.bindBuffer(U.ARRAY_BUFFER,a.__webglColorBuffer),U.bufferData(U.ARRAY_BUFFER,p,b)}if(t){for(e=0;e<n;e++)q[e]=k[e];U.bindBuffer(U.ARRAY_BUFFER,a.__webglLineDistanceBuffer),U.bufferData(U.ARRAY_BUFFER,q,b)}if(u)for(v=0,w=u.length;v<w;v++)if(B=u[v],B.needsUpdate&&(void 0===B.boundTo||"vertices"===B.boundTo)){if(g=0,z=B.value.length,1===B.size)for(y=0;y<z;y++)B.array[y]=B.value[y];else if(2===B.size)for(y=0;y<z;y++)A=B.value[y],B.array[g]=A.x,B.array[g+1]=A.y,g+=2;else if(3===B.size)if("c"===B.type)for(y=0;y<z;y++)A=B.value[y],B.array[g]=A.r,B.array[g+1]=A.g,B.array[g+2]=A.b,g+=3;else for(y=0;y<z;y++)A=B.value[y],B.array[g]=A.x,B.array[g+1]=A.y,B.array[g+2]=A.z,g+=3;else if(4===B.size)for(y=0;y<z;y++)A=B.value[y],B.array[g]=A.x,B.array[g+1]=A.y,B.array[g+2]=A.z,B.array[g+3]=A.w,g+=4;U.bindBuffer(U.ARRAY_BUFFER,B.buffer),U.bufferData(U.ARRAY_BUFFER,B.array,b)}}function Ta(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p=a.vertices,q=a.colors,r=a.normals,s=p.length,t=q.length,u=r.length,v=a.__vertexArray,w=a.__colorArray,x=a.__normalArray,y=a.verticesNeedUpdate,z=a.colorsNeedUpdate,A=a.normalsNeedUpdate,B=a.__webglCustomAttributesList;if(y){for(c=0;c<s;c++)f=p[c],g=3*c,v[g]=f.x,v[g+1]=f.y,v[g+2]=f.z;U.bindBuffer(U.ARRAY_BUFFER,a.__webglVertexBuffer),U.bufferData(U.ARRAY_BUFFER,v,b)}if(z){for(d=0;d<t;d++)h=q[d],g=3*d,w[g]=h.r,w[g+1]=h.g,w[g+2]=h.b;U.bindBuffer(U.ARRAY_BUFFER,a.__webglColorBuffer),U.bufferData(U.ARRAY_BUFFER,w,b)}if(A){for(e=0;e<u;e++)i=r[e],g=3*e,x[g]=i.x,x[g+1]=i.y,x[g+2]=i.z;U.bindBuffer(U.ARRAY_BUFFER,a.__webglNormalBuffer),U.bufferData(U.ARRAY_BUFFER,x,b)}if(B)for(j=0,k=B.length;j<k;j++)if(n=B[j],n.needsUpdate&&(void 0===n.boundTo||"vertices"===n.boundTo)){if(g=0,m=n.value.length,1===n.size)for(l=0;l<m;l++)n.array[l]=n.value[l];else if(2===n.size)for(l=0;l<m;l++)o=n.value[l],n.array[g]=o.x,n.array[g+1]=o.y,g+=2;else if(3===n.size)if("c"===n.type)for(l=0;l<m;l++)o=n.value[l],n.array[g]=o.r,n.array[g+1]=o.g,n.array[g+2]=o.b,g+=3;else for(l=0;l<m;l++)o=n.value[l],n.array[g]=o.x,n.array[g+1]=o.y,n.array[g+2]=o.z,g+=3;else if(4===n.size)for(l=0;l<m;l++)o=n.value[l],n.array[g]=o.x,n.array[g+1]=o.y,n.array[g+2]=o.z,n.array[g+3]=o.w,g+=4;U.bindBuffer(U.ARRAY_BUFFER,n.buffer),U.bufferData(U.ARRAY_BUFFER,n.array,b)}}function Ua(a,b,c,d,e){if(a.__inittedArrays){var j,k,l,m,n,o,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,ca,da,ea,fa,ga,ha,ia,ja,ka,la,ma,Ba,Qa,f=Na(e),g=Oa(e),h=Pa(e),i=f===THREE.SmoothShading,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ca=a.__vertexArray,Da=a.__uvArray,Ea=a.__uv2Array,Fa=a.__normalArray,Ga=a.__tangentArray,Ha=a.__colorArray,Ia=a.__skinIndexArray,Ja=a.__skinWeightArray,Ka=a.__morphTargetsArrays,La=a.__morphNormalsArrays,Ma=a.__webglCustomAttributesList,Ra=a.__faceArray,Sa=a.__lineArray,Ta=b.geometry,Ua=Ta.verticesNeedUpdate,Va=Ta.elementsNeedUpdate,Wa=Ta.uvsNeedUpdate,Xa=Ta.normalsNeedUpdate,Ya=Ta.tangentsNeedUpdate,Za=Ta.colorsNeedUpdate,$a=Ta.morphTargetsNeedUpdate,_a=Ta.vertices,ab=a.faces3,bb=a.faces4,cb=Ta.faces,db=Ta.faceVertexUvs[0],eb=Ta.faceVertexUvs[1],gb=(Ta.colors,Ta.skinIndices),hb=Ta.skinWeights,ib=Ta.morphTargets,jb=Ta.morphNormals;if(Ua){for(j=0,k=ab.length;j<k;j++)m=cb[ab[j]],v=_a[m.a],w=_a[m.b],x=_a[m.c],Ca[pa]=v.x,Ca[pa+1]=v.y,Ca[pa+2]=v.z,Ca[pa+3]=w.x,Ca[pa+4]=w.y,Ca[pa+5]=w.z,Ca[pa+6]=x.x,Ca[pa+7]=x.y,Ca[pa+8]=x.z,pa+=9;for(j=0,k=bb.length;j<k;j++)m=cb[bb[j]],v=_a[m.a],w=_a[m.b],x=_a[m.c],y=_a[m.d],Ca[pa]=v.x,Ca[pa+1]=v.y,Ca[pa+2]=v.z,Ca[pa+3]=w.x,Ca[pa+4]=w.y,Ca[pa+5]=w.z,Ca[pa+6]=x.x,Ca[pa+7]=x.y,Ca[pa+8]=x.z,Ca[pa+9]=y.x,Ca[pa+10]=y.y,Ca[pa+11]=y.z,pa+=12;U.bindBuffer(U.ARRAY_BUFFER,a.__webglVertexBuffer),U.bufferData(U.ARRAY_BUFFER,Ca,c)}if($a)for(ha=0,ia=ib.length;ha<ia;ha++){for(ya=0,j=0,k=ab.length;j<k;j++)la=ab[j],m=cb[la],v=ib[ha].vertices[m.a],w=ib[ha].vertices[m.b],x=ib[ha].vertices[m.c],ja=Ka[ha],ja[ya]=v.x,ja[ya+1]=v.y,ja[ya+2]=v.z,ja[ya+3]=w.x,ja[ya+4]=w.y,ja[ya+5]=w.z,ja[ya+6]=x.x,ja[ya+7]=x.y,ja[ya+8]=x.z,e.morphNormals&&(i?(ma=jb[ha].vertexNormals[la],D=ma.a,E=ma.b,F=ma.c):(D=jb[ha].faceNormals[la],E=D,F=D),ka=La[ha],ka[ya]=D.x,ka[ya+1]=D.y,ka[ya+2]=D.z,ka[ya+3]=E.x,ka[ya+4]=E.y,ka[ya+5]=E.z,ka[ya+6]=F.x,ka[ya+7]=F.y,ka[ya+8]=F.z),ya+=9;for(j=0,k=bb.length;j<k;j++)la=bb[j],m=cb[la],v=ib[ha].vertices[m.a],w=ib[ha].vertices[m.b],x=ib[ha].vertices[m.c],y=ib[ha].vertices[m.d],ja=Ka[ha],ja[ya]=v.x,ja[ya+1]=v.y,ja[ya+2]=v.z,ja[ya+3]=w.x,ja[ya+4]=w.y,ja[ya+5]=w.z,ja[ya+6]=x.x,ja[ya+7]=x.y,ja[ya+8]=x.z,ja[ya+9]=y.x,ja[ya+10]=y.y,ja[ya+11]=y.z,e.morphNormals&&(i?(ma=jb[ha].vertexNormals[la],D=ma.a,E=ma.b,F=ma.c,G=ma.d):(D=jb[ha].faceNormals[la],E=D,F=D,G=D),ka=La[ha],ka[ya]=D.x,ka[ya+1]=D.y,ka[ya+2]=D.z,ka[ya+3]=E.x,ka[ya+4]=E.y,ka[ya+5]=E.z,ka[ya+6]=F.x,ka[ya+7]=F.y,ka[ya+8]=F.z,ka[ya+9]=G.x,ka[ya+10]=G.y,ka[ya+11]=G.z),ya+=12;U.bindBuffer(U.ARRAY_BUFFER,a.__webglMorphTargetsBuffers[ha]),U.bufferData(U.ARRAY_BUFFER,Ka[ha],c),e.morphNormals&&(U.bindBuffer(U.ARRAY_BUFFER,a.__webglMorphNormalsBuffers[ha]),U.bufferData(U.ARRAY_BUFFER,La[ha],c))}if(hb.length){for(j=0,k=ab.length;j<k;j++)m=cb[ab[j]],L=hb[m.a],M=hb[m.b],N=hb[m.c],Ja[xa]=L.x,Ja[xa+1]=L.y,Ja[xa+2]=L.z,Ja[xa+3]=L.w,Ja[xa+4]=M.x,Ja[xa+5]=M.y,Ja[xa+6]=M.z,Ja[xa+7]=M.w,Ja[xa+8]=N.x,Ja[xa+9]=N.y,Ja[xa+10]=N.z,Ja[xa+11]=N.w,P=gb[m.a],Q=gb[m.b],R=gb[m.c],Ia[xa]=P.x,Ia[xa+1]=P.y,Ia[xa+2]=P.z,Ia[xa+3]=P.w,Ia[xa+4]=Q.x,Ia[xa+5]=Q.y,Ia[xa+6]=Q.z,Ia[xa+7]=Q.w,Ia[xa+8]=R.x,Ia[xa+9]=R.y,Ia[xa+10]=R.z,Ia[xa+11]=R.w,xa+=12;for(j=0,k=bb.length;j<k;j++)m=cb[bb[j]],L=hb[m.a],M=hb[m.b],N=hb[m.c],O=hb[m.d],Ja[xa]=L.x,Ja[xa+1]=L.y,Ja[xa+2]=L.z,Ja[xa+3]=L.w,Ja[xa+4]=M.x,Ja[xa+5]=M.y,Ja[xa+6]=M.z,Ja[xa+7]=M.w,Ja[xa+8]=N.x,Ja[xa+9]=N.y,Ja[xa+10]=N.z,Ja[xa+11]=N.w,Ja[xa+12]=O.x,Ja[xa+13]=O.y,Ja[xa+14]=O.z,Ja[xa+15]=O.w,P=gb[m.a],Q=gb[m.b],R=gb[m.c],S=gb[m.d],Ia[xa]=P.x,Ia[xa+1]=P.y,Ia[xa+2]=P.z,Ia[xa+3]=P.w,Ia[xa+4]=Q.x,Ia[xa+5]=Q.y,Ia[xa+6]=Q.z,Ia[xa+7]=Q.w,Ia[xa+8]=R.x,Ia[xa+9]=R.y,Ia[xa+10]=R.z,Ia[xa+11]=R.w,Ia[xa+12]=S.x,Ia[xa+13]=S.y,Ia[xa+14]=S.z,Ia[xa+15]=S.w,xa+=16;xa>0&&(U.bindBuffer(U.ARRAY_BUFFER,a.__webglSkinIndicesBuffer),U.bufferData(U.ARRAY_BUFFER,Ia,c),U.bindBuffer(U.ARRAY_BUFFER,a.__webglSkinWeightsBuffer),U.bufferData(U.ARRAY_BUFFER,Ja,c))}if(Za&&g){for(j=0,k=ab.length;j<k;j++)m=cb[ab[j]],q=m.vertexColors,r=m.color,3===q.length&&g===THREE.VertexColors?(H=q[0],I=q[1],J=q[2]):(H=r,I=r,J=r),Ha[wa]=H.r,Ha[wa+1]=H.g,Ha[wa+2]=H.b,Ha[wa+3]=I.r,Ha[wa+4]=I.g,Ha[wa+5]=I.b,Ha[wa+6]=J.r,Ha[wa+7]=J.g,Ha[wa+8]=J.b,wa+=9;for(j=0,k=bb.length;j<k;j++)m=cb[bb[j]],q=m.vertexColors,r=m.color,4===q.length&&g===THREE.VertexColors?(H=q[0],I=q[1],J=q[2],K=q[3]):(H=r,I=r,J=r,K=r),Ha[wa]=H.r,Ha[wa+1]=H.g,Ha[wa+2]=H.b,Ha[wa+3]=I.r,Ha[wa+4]=I.g,Ha[wa+5]=I.b,Ha[wa+6]=J.r,Ha[wa+7]=J.g,Ha[wa+8]=J.b,Ha[wa+9]=K.r,Ha[wa+10]=K.g,Ha[wa+11]=K.b,wa+=12;wa>0&&(U.bindBuffer(U.ARRAY_BUFFER,a.__webglColorBuffer),U.bufferData(U.ARRAY_BUFFER,Ha,c))}if(Ya&&Ta.hasTangents){for(j=0,k=ab.length;j<k;j++)m=cb[ab[j]],s=m.vertexTangents,z=s[0],A=s[1],B=s[2],Ga[ua]=z.x,Ga[ua+1]=z.y,Ga[ua+2]=z.z,Ga[ua+3]=z.w,Ga[ua+4]=A.x,Ga[ua+5]=A.y,Ga[ua+6]=A.z,Ga[ua+7]=A.w,Ga[ua+8]=B.x,Ga[ua+9]=B.y,Ga[ua+10]=B.z,Ga[ua+11]=B.w,ua+=12;for(j=0,k=bb.length;j<k;j++)m=cb[bb[j]],s=m.vertexTangents,z=s[0],A=s[1],B=s[2],C=s[3],Ga[ua]=z.x,Ga[ua+1]=z.y,Ga[ua+2]=z.z,Ga[ua+3]=z.w,Ga[ua+4]=A.x,Ga[ua+5]=A.y,Ga[ua+6]=A.z,Ga[ua+7]=A.w,Ga[ua+8]=B.x,Ga[ua+9]=B.y,Ga[ua+10]=B.z,Ga[ua+11]=B.w,Ga[ua+12]=C.x,Ga[ua+13]=C.y,Ga[ua+14]=C.z,Ga[ua+15]=C.w,ua+=16;U.bindBuffer(U.ARRAY_BUFFER,a.__webglTangentBuffer),U.bufferData(U.ARRAY_BUFFER,Ga,c)}if(Xa&&f){for(j=0,k=ab.length;j<k;j++)if(m=cb[ab[j]],n=m.vertexNormals,o=m.normal,3===n.length&&i)for(ca=0;ca<3;ca++)ea=n[ca],Fa[ta]=ea.x,Fa[ta+1]=ea.y,Fa[ta+2]=ea.z,ta+=3;else for(ca=0;ca<3;ca++)Fa[ta]=o.x,Fa[ta+1]=o.y,Fa[ta+2]=o.z,ta+=3;for(j=0,k=bb.length;j<k;j++)if(m=cb[bb[j]],n=m.vertexNormals,o=m.normal,4===n.length&&i)for(ca=0;ca<4;ca++)ea=n[ca],Fa[ta]=ea.x,Fa[ta+1]=ea.y,Fa[ta+2]=ea.z,ta+=3;else for(ca=0;ca<4;ca++)Fa[ta]=o.x,Fa[ta+1]=o.y,Fa[ta+2]=o.z,ta+=3;U.bindBuffer(U.ARRAY_BUFFER,a.__webglNormalBuffer),U.bufferData(U.ARRAY_BUFFER,Fa,c)}if(Wa&&db&&h){for(j=0,k=ab.length;j<k;j++)if(l=ab[j],t=db[l],void 0!==t)for(ca=0;ca<3;ca++)fa=t[ca],Da[qa]=fa.x,Da[qa+1]=fa.y,qa+=2;for(j=0,k=bb.length;j<k;j++)if(l=bb[j],t=db[l],void 0!==t)for(ca=0;ca<4;ca++)fa=t[ca],Da[qa]=fa.x,Da[qa+1]=fa.y,qa+=2;qa>0&&(U.bindBuffer(U.ARRAY_BUFFER,a.__webglUVBuffer),U.bufferData(U.ARRAY_BUFFER,Da,c))}if(Wa&&eb&&h){for(j=0,k=ab.length;j<k;j++)if(l=ab[j],u=eb[l],void 0!==u)for(ca=0;ca<3;ca++)ga=u[ca],Ea[ra]=ga.x,Ea[ra+1]=ga.y,ra+=2;for(j=0,k=bb.length;j<k;j++)if(l=bb[j],u=eb[l],void 0!==u)for(ca=0;ca<4;ca++)ga=u[ca],Ea[ra]=ga.x,Ea[ra+1]=ga.y,ra+=2;ra>0&&(U.bindBuffer(U.ARRAY_BUFFER,a.__webglUV2Buffer),U.bufferData(U.ARRAY_BUFFER,Ea,c))}if(Va){for(j=0,k=ab.length;j<k;j++)Ra[sa]=oa,Ra[sa+1]=oa+1,Ra[sa+2]=oa+2,sa+=3,Sa[va]=oa,Sa[va+1]=oa+1,Sa[va+2]=oa,Sa[va+3]=oa+2,Sa[va+4]=oa+1,Sa[va+5]=oa+2,va+=6,oa+=3;for(j=0,k=bb.length;j<k;j++)Ra[sa]=oa,Ra[sa+1]=oa+1,Ra[sa+2]=oa+3,Ra[sa+3]=oa+1,Ra[sa+4]=oa+2,Ra[sa+5]=oa+3,sa+=6,Sa[va]=oa,Sa[va+1]=oa+1,Sa[va+2]=oa,Sa[va+3]=oa+3,Sa[va+4]=oa+1,Sa[va+5]=oa+2,Sa[va+6]=oa+2,Sa[va+7]=oa+3,va+=8,oa+=4;U.bindBuffer(U.ELEMENT_ARRAY_BUFFER,a.__webglFaceBuffer),U.bufferData(U.ELEMENT_ARRAY_BUFFER,Ra,c),U.bindBuffer(U.ELEMENT_ARRAY_BUFFER,a.__webglLineBuffer),U.bufferData(U.ELEMENT_ARRAY_BUFFER,Sa,c)}if(Ma)for(ca=0,da=Ma.length;ca<da;ca++)if(Qa=Ma[ca],Qa.__original.needsUpdate){if(za=0,Aa=0,1===Qa.size){if(void 0===Qa.boundTo||"vertices"===Qa.boundTo){for(j=0,k=ab.length;j<k;j++)m=cb[ab[j]],Qa.array[za]=Qa.value[m.a],Qa.array[za+1]=Qa.value[m.b],Qa.array[za+2]=Qa.value[m.c],za+=3;for(j=0,k=bb.length;j<k;j++)m=cb[bb[j]],Qa.array[za]=Qa.value[m.a],Qa.array[za+1]=Qa.value[m.b],Qa.array[za+2]=Qa.value[m.c],Qa.array[za+3]=Qa.value[m.d],za+=4}else if("faces"===Qa.boundTo){for(j=0,k=ab.length;j<k;j++)Ba=Qa.value[ab[j]],Qa.array[za]=Ba,Qa.array[za+1]=Ba,Qa.array[za+2]=Ba,za+=3;for(j=0,k=bb.length;j<k;j++)Ba=Qa.value[bb[j]],Qa.array[za]=Ba,Qa.array[za+1]=Ba,Qa.array[za+2]=Ba,Qa.array[za+3]=Ba,za+=4}}else if(2===Qa.size){if(void 0===Qa.boundTo||"vertices"===Qa.boundTo){for(j=0,k=ab.length;j<k;j++)m=cb[ab[j]],v=Qa.value[m.a],w=Qa.value[m.b],x=Qa.value[m.c],Qa.array[za]=v.x,Qa.array[za+1]=v.y,Qa.array[za+2]=w.x,Qa.array[za+3]=w.y,Qa.array[za+4]=x.x,Qa.array[za+5]=x.y,za+=6;for(j=0,k=bb.length;j<k;j++)m=cb[bb[j]],v=Qa.value[m.a],w=Qa.value[m.b],x=Qa.value[m.c],y=Qa.value[m.d],Qa.array[za]=v.x,Qa.array[za+1]=v.y,Qa.array[za+2]=w.x,Qa.array[za+3]=w.y,Qa.array[za+4]=x.x,Qa.array[za+5]=x.y,Qa.array[za+6]=y.x,Qa.array[za+7]=y.y,za+=8}else if("faces"===Qa.boundTo){for(j=0,k=ab.length;j<k;j++)Ba=Qa.value[ab[j]],v=Ba,w=Ba,x=Ba,Qa.array[za]=v.x,Qa.array[za+1]=v.y,Qa.array[za+2]=w.x,Qa.array[za+3]=w.y,Qa.array[za+4]=x.x,Qa.array[za+5]=x.y,za+=6;for(j=0,k=bb.length;j<k;j++)Ba=Qa.value[bb[j]],v=Ba,w=Ba,x=Ba,y=Ba,Qa.array[za]=v.x,Qa.array[za+1]=v.y,Qa.array[za+2]=w.x,Qa.array[za+3]=w.y,Qa.array[za+4]=x.x,Qa.array[za+5]=x.y,Qa.array[za+6]=y.x,Qa.array[za+7]=y.y,za+=8}}else if(3===Qa.size){var kb;if(kb="c"===Qa.type?["r","g","b"]:["x","y","z"],void 0===Qa.boundTo||"vertices"===Qa.boundTo){for(j=0,k=ab.length;j<k;j++)m=cb[ab[j]],v=Qa.value[m.a],w=Qa.value[m.b],x=Qa.value[m.c],Qa.array[za]=v[kb[0]],Qa.array[za+1]=v[kb[1]],Qa.array[za+2]=v[kb[2]],Qa.array[za+3]=w[kb[0]],Qa.array[za+4]=w[kb[1]],Qa.array[za+5]=w[kb[2]],Qa.array[za+6]=x[kb[0]],Qa.array[za+7]=x[kb[1]],Qa.array[za+8]=x[kb[2]],za+=9;for(j=0,k=bb.length;j<k;j++)m=cb[bb[j]],v=Qa.value[m.a],w=Qa.value[m.b],x=Qa.value[m.c],y=Qa.value[m.d],Qa.array[za]=v[kb[0]],Qa.array[za+1]=v[kb[1]],Qa.array[za+2]=v[kb[2]],Qa.array[za+3]=w[kb[0]],Qa.array[za+4]=w[kb[1]],Qa.array[za+5]=w[kb[2]],Qa.array[za+6]=x[kb[0]],Qa.array[za+7]=x[kb[1]],Qa.array[za+8]=x[kb[2]],Qa.array[za+9]=y[kb[0]],Qa.array[za+10]=y[kb[1]],Qa.array[za+11]=y[kb[2]],za+=12}else if("faces"===Qa.boundTo){for(j=0,k=ab.length;j<k;j++)Ba=Qa.value[ab[j]],v=Ba,w=Ba,x=Ba,Qa.array[za]=v[kb[0]],Qa.array[za+1]=v[kb[1]],Qa.array[za+2]=v[kb[2]],Qa.array[za+3]=w[kb[0]],Qa.array[za+4]=w[kb[1]],Qa.array[za+5]=w[kb[2]],Qa.array[za+6]=x[kb[0]],Qa.array[za+7]=x[kb[1]],Qa.array[za+8]=x[kb[2]],za+=9;for(j=0,k=bb.length;j<k;j++)Ba=Qa.value[bb[j]],v=Ba,w=Ba,x=Ba,y=Ba,Qa.array[za]=v[kb[0]],Qa.array[za+1]=v[kb[1]],Qa.array[za+2]=v[kb[2]],Qa.array[za+3]=w[kb[0]],Qa.array[za+4]=w[kb[1]],Qa.array[za+5]=w[kb[2]],Qa.array[za+6]=x[kb[0]],Qa.array[za+7]=x[kb[1]],Qa.array[za+8]=x[kb[2]],Qa.array[za+9]=y[kb[0]],Qa.array[za+10]=y[kb[1]],Qa.array[za+11]=y[kb[2]],za+=12}else if("faceVertices"===Qa.boundTo){for(j=0,k=ab.length;j<k;j++)Ba=Qa.value[ab[j]],v=Ba[0],w=Ba[1],x=Ba[2],Qa.array[za]=v[kb[0]],Qa.array[za+1]=v[kb[1]],Qa.array[za+2]=v[kb[2]],Qa.array[za+3]=w[kb[0]],Qa.array[za+4]=w[kb[1]],Qa.array[za+5]=w[kb[2]],Qa.array[za+6]=x[kb[0]],Qa.array[za+7]=x[kb[1]],Qa.array[za+8]=x[kb[2]],za+=9;for(j=0,k=bb.length;j<k;j++)Ba=Qa.value[bb[j]],v=Ba[0],w=Ba[1],x=Ba[2],y=Ba[3],Qa.array[za]=v[kb[0]],Qa.array[za+1]=v[kb[1]],Qa.array[za+2]=v[kb[2]],Qa.array[za+3]=w[kb[0]],Qa.array[za+4]=w[kb[1]],Qa.array[za+5]=w[kb[2]],Qa.array[za+6]=x[kb[0]],Qa.array[za+7]=x[kb[1]],Qa.array[za+8]=x[kb[2]],Qa.array[za+9]=y[kb[0]],Qa.array[za+10]=y[kb[1]],Qa.array[za+11]=y[kb[2]],za+=12}}else if(4===Qa.size)if(void 0===Qa.boundTo||"vertices"===Qa.boundTo){for(j=0,k=ab.length;j<k;j++)m=cb[ab[j]],v=Qa.value[m.a],w=Qa.value[m.b],x=Qa.value[m.c],Qa.array[za]=v.x,Qa.array[za+1]=v.y,Qa.array[za+2]=v.z,Qa.array[za+3]=v.w,Qa.array[za+4]=w.x,Qa.array[za+5]=w.y,Qa.array[za+6]=w.z,Qa.array[za+7]=w.w,Qa.array[za+8]=x.x,Qa.array[za+9]=x.y,Qa.array[za+10]=x.z,Qa.array[za+11]=x.w,za+=12;for(j=0,k=bb.length;j<k;j++)m=cb[bb[j]],v=Qa.value[m.a],w=Qa.value[m.b],x=Qa.value[m.c],y=Qa.value[m.d],Qa.array[za]=v.x,Qa.array[za+1]=v.y,Qa.array[za+2]=v.z,Qa.array[za+3]=v.w,Qa.array[za+4]=w.x,Qa.array[za+5]=w.y,Qa.array[za+6]=w.z,Qa.array[za+7]=w.w,Qa.array[za+8]=x.x,Qa.array[za+9]=x.y,Qa.array[za+10]=x.z,Qa.array[za+11]=x.w,Qa.array[za+12]=y.x,Qa.array[za+13]=y.y,Qa.array[za+14]=y.z,Qa.array[za+15]=y.w,za+=16}else if("faces"===Qa.boundTo){for(j=0,k=ab.length;j<k;j++)Ba=Qa.value[ab[j]],v=Ba,w=Ba,x=Ba,Qa.array[za]=v.x,Qa.array[za+1]=v.y,Qa.array[za+2]=v.z,Qa.array[za+3]=v.w,Qa.array[za+4]=w.x,Qa.array[za+5]=w.y,Qa.array[za+6]=w.z,Qa.array[za+7]=w.w,Qa.array[za+8]=x.x,Qa.array[za+9]=x.y,Qa.array[za+10]=x.z,Qa.array[za+11]=x.w,za+=12;for(j=0,k=bb.length;j<k;j++)Ba=Qa.value[bb[j]],v=Ba,w=Ba,x=Ba,y=Ba,Qa.array[za]=v.x,Qa.array[za+1]=v.y,Qa.array[za+2]=v.z,Qa.array[za+3]=v.w,Qa.array[za+4]=w.x,Qa.array[za+5]=w.y,Qa.array[za+6]=w.z,Qa.array[za+7]=w.w,Qa.array[za+8]=x.x,Qa.array[za+9]=x.y,Qa.array[za+10]=x.z,Qa.array[za+11]=x.w,Qa.array[za+12]=y.x,Qa.array[za+13]=y.y,Qa.array[za+14]=y.z,Qa.array[za+15]=y.w,za+=16}else if("faceVertices"===Qa.boundTo){for(j=0,k=ab.length;j<k;j++)Ba=Qa.value[ab[j]],v=Ba[0],w=Ba[1],x=Ba[2],Qa.array[za]=v.x,Qa.array[za+1]=v.y,Qa.array[za+2]=v.z,Qa.array[za+3]=v.w,Qa.array[za+4]=w.x,Qa.array[za+5]=w.y,Qa.array[za+6]=w.z,Qa.array[za+7]=w.w,Qa.array[za+8]=x.x,Qa.array[za+9]=x.y,Qa.array[za+10]=x.z,Qa.array[za+11]=x.w,za+=12;for(j=0,k=bb.length;j<k;j++)Ba=Qa.value[bb[j]],v=Ba[0],w=Ba[1],x=Ba[2],y=Ba[3],Qa.array[za]=v.x,Qa.array[za+1]=v.y,Qa.array[za+2]=v.z,Qa.array[za+3]=v.w,Qa.array[za+4]=w.x,Qa.array[za+5]=w.y,Qa.array[za+6]=w.z,Qa.array[za+7]=w.w,Qa.array[za+8]=x.x,Qa.array[za+9]=x.y,Qa.array[za+10]=x.z,Qa.array[za+11]=x.w,Qa.array[za+12]=y.x,Qa.array[za+13]=y.y,Qa.array[za+14]=y.z,Qa.array[za+15]=y.w,za+=16}U.bindBuffer(U.ARRAY_BUFFER,Qa.buffer),U.bufferData(U.ARRAY_BUFFER,Qa.array,c)}d&&(delete a.__inittedArrays,delete a.__colorArray,delete a.__normalArray,delete a.__tangentArray,delete a.__uvArray,delete a.__uv2Array,delete a.__faceArray,delete a.__vertexArray,delete a.__lineArray,delete a.__skinIndexArray,delete a.__skinWeightArray)}}function Va(a,b,c){var e,f,d=a.attributes;for(e in d)f=d[e],f.needsUpdate&&("index"===e?(U.bindBuffer(U.ELEMENT_ARRAY_BUFFER,f.buffer),U.bufferData(U.ELEMENT_ARRAY_BUFFER,f.array,b)):(U.bindBuffer(U.ARRAY_BUFFER,f.buffer),U.bufferData(U.ARRAY_BUFFER,f.array,b)),f.needsUpdate=!1),c&&!f.dynamic&&delete f.array}function Wa(a){M[a]||(U.enableVertexAttribArray(a),M[a]=!0)}function Xa(){for(var a in M)M[a]&&(U.disableVertexAttribArray(a),M[a]=!1)}function Ya(a,b,c){var d=a.program.attributes;if(c.morphTargetBase!==-1&&d.position>=0?(U.bindBuffer(U.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[c.morphTargetBase]),Wa(d.position),U.vertexAttribPointer(d.position,3,U.FLOAT,!1,0,0)):d.position>=0&&(U.bindBuffer(U.ARRAY_BUFFER,b.__webglVertexBuffer),Wa(d.position),U.vertexAttribPointer(d.position,3,U.FLOAT,!1,0,0)),c.morphTargetForcedOrder.length)for(var e=0,f=c.morphTargetForcedOrder,g=c.morphTargetInfluences;e<a.numSupportedMorphTargets&&e<f.length;)d["morphTarget"+e]>=0&&(U.bindBuffer(U.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[f[e]]),Wa(d["morphTarget"+e]),U.vertexAttribPointer(d["morphTarget"+e],3,U.FLOAT,!1,0,0)),d["morphNormal"+e]>=0&&a.morphNormals&&(U.bindBuffer(U.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[f[e]]),Wa(d["morphNormal"+e]),U.vertexAttribPointer(d["morphNormal"+e],3,U.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[e]=g[f[e]],e++;else{var h,j,i=[],g=c.morphTargetInfluences,k=g.length;for(j=0;j<k;j++)h=g[j],h>0&&i.push([h,j]);i.length>a.numSupportedMorphTargets?(i.sort($a),i.length=a.numSupportedMorphTargets):i.length>a.numSupportedMorphNormals?i.sort($a):0===i.length&&i.push([0,0]);for(var l,e=0;e<a.numSupportedMorphTargets;)i[e]?(l=i[e][1],d["morphTarget"+e]>=0&&(U.bindBuffer(U.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[l]),Wa(d["morphTarget"+e]),U.vertexAttribPointer(d["morphTarget"+e],3,U.FLOAT,!1,0,0)),d["morphNormal"+e]>=0&&a.morphNormals&&(U.bindBuffer(U.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[l]),Wa(d["morphNormal"+e]),U.vertexAttribPointer(d["morphNormal"+e],3,U.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[e]=g[l]):c.__webglMorphTargetInfluences[e]=0,e++}null!==a.program.uniforms.morphTargetInfluences&&U.uniform1fv(a.program.uniforms.morphTargetInfluences,c.__webglMorphTargetInfluences)}function Za(a,b){return a.z!==b.z?b.z-a.z:a.id-b.id}function $a(a,b){return b[0]-a[0]}function _a(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)n=null,r=null,w=-1,A=-1,B=-1,u=-1,v=-1,q=-1,p=-1,S=!0,a[d].render(b,c,K,L),n=null,r=null,w=-1,A=-1,B=-1,u=-1,v=-1,q=-1,p=-1,S=!0}function ab(a,b,c,d,e,f,g,h){var i,j,l,m,n,o,p;b?(n=a.length-1,o=-1,p=-1):(n=0,o=a.length,p=1);for(var q=n;q!==o;q+=p)if(i=a[q],i.render){if(j=i.object,l=i.buffer,h)m=h;else{if(m=i[c],!m)continue;g&&k.setBlending(m.blending,m.blendEquation,m.blendSrc,m.blendDst),k.setDepthTest(m.depthTest),k.setDepthWrite(m.depthWrite),Hb(m.polygonOffset,m.polygonOffsetFactor,m.polygonOffsetUnits)}k.setMaterialFaces(m),l instanceof THREE.BufferGeometry?k.renderBufferDirect(d,e,f,m,l,j):k.renderBuffer(d,e,f,m,l,j)}}function bb(a,b,c,d,e,f,g){for(var h,i,j,m=0,n=a.length;m<n;m++)if(h=a[m],i=h.object,i.visible){if(g)j=g;else{if(j=h[b],!j)continue;f&&k.setBlending(j.blending,j.blendEquation,j.blendSrc,j.blendDst),k.setDepthTest(j.depthTest),k.setDepthWrite(j.depthWrite),Hb(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits)}k.renderImmediateObject(c,d,e,j,i)}}function cb(a){var b=a.object,c=b.material;c.transparent?(a.transparent=c,a.opaque=null):(a.opaque=c,a.transparent=null)}function db(a){var d,e,f,b=a.object,c=a.buffer;f=b.material,f instanceof THREE.MeshFaceMaterial?(e=c.materialIndex,d=f.materials[e],d.transparent?(a.transparent=d,a.opaque=null):(a.opaque=d,a.transparent=null)):(d=f,d&&(d.transparent?(a.transparent=d,a.opaque=null):(a.opaque=d,a.transparent=null)))}function eb(a,b){var c,d,e,f,g,h,i={},j=a.morphTargets.length,k=a.morphNormals.length,l=b instanceof THREE.MeshFaceMaterial;for(a.geometryGroups={},c=0,d=a.faces.length;c<d;c++)e=a.faces[c],f=l?e.materialIndex:0,void 0===i[f]&&(i[f]={hash:f,counter:0}),h=i[f].hash+"_"+i[f].counter,void 0===a.geometryGroups[h]&&(a.geometryGroups[h]={faces3:[],faces4:[],materialIndex:f,vertices:0,numMorphTargets:j,numMorphNormals:k}),g=e instanceof THREE.Face3?3:4,a.geometryGroups[h].vertices+g>65535&&(i[f].counter+=1,h=i[f].hash+"_"+i[f].counter,void 0===a.geometryGroups[h]&&(a.geometryGroups[h]={faces3:[],faces4:[],materialIndex:f,vertices:0,numMorphTargets:j,numMorphNormals:k})),e instanceof THREE.Face3?a.geometryGroups[h].faces3.push(c):a.geometryGroups[h].faces4.push(c),a.geometryGroups[h].vertices+=g;a.geometryGroupsList=[];for(var m in a.geometryGroups)a.geometryGroups[m].id=s++,a.geometryGroupsList.push(a.geometryGroups[m])}function fb(a,b){var c,d,e,f;if(void 0===a.__webglInit)if(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,void 0!==a.geometry&&void 0===a.geometry.__webglInit&&(a.geometry.__webglInit=!0,a.geometry.addEventListener("dispose",xa)),d=a.geometry,void 0===d);else if(d instanceof THREE.BufferGeometry)Qa(d);else if(a instanceof THREE.Mesh){e=a.material,void 0===d.geometryGroups&&eb(d,e);for(c in d.geometryGroups)f=d.geometryGroups[c],f.__webglVertexBuffer||(wa(f),Ka(f,a),d.verticesNeedUpdate=!0,d.morphTargetsNeedUpdate=!0,d.elementsNeedUpdate=!0,d.uvsNeedUpdate=!0,d.normalsNeedUpdate=!0,d.tangentsNeedUpdate=!0,d.colorsNeedUpdate=!0)}else a instanceof THREE.Ribbon?d.__webglVertexBuffer||(va(d),Ja(d,a),d.verticesNeedUpdate=!0,d.colorsNeedUpdate=!0,d.normalsNeedUpdate=!0):a instanceof THREE.Line?d.__webglVertexBuffer||(ua(d),Ia(d,a),d.verticesNeedUpdate=!0,d.colorsNeedUpdate=!0,d.lineDistancesNeedUpdate=!0):a instanceof THREE.ParticleSystem&&(d.__webglVertexBuffer||(ta(d),Ha(d,a),d.verticesNeedUpdate=!0,d.colorsNeedUpdate=!0));if(void 0===a.__webglActive){if(a instanceof THREE.Mesh){if(d=a.geometry,d instanceof THREE.BufferGeometry)gb(b.__webglObjects,d,a);else if(d instanceof THREE.Geometry)for(c in d.geometryGroups)f=d.geometryGroups[c],gb(b.__webglObjects,f,a)}else a instanceof THREE.Ribbon||a instanceof THREE.Line||a instanceof THREE.ParticleSystem?(d=a.geometry,gb(b.__webglObjects,d,a)):a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback?hb(b.__webglObjectsImmediate,a):a instanceof THREE.Sprite?b.__webglSprites.push(a):a instanceof THREE.LensFlare&&b.__webglFlares.push(a);a.__webglActive=!0}}function gb(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function hb(a,b){a.push({object:b,opaque:null,transparent:null})}function ib(a){var c,d,e,b=a.geometry;if(b instanceof THREE.BufferGeometry)Va(b,U.DYNAMIC_DRAW,!b.dynamic);else if(a instanceof THREE.Mesh){for(var f=0,g=b.geometryGroupsList.length;f<g;f++)c=b.geometryGroupsList[f],e=La(a,c),b.buffersNeedUpdate&&Ka(c,a),d=e.attributes&&jb(e),(b.verticesNeedUpdate||b.morphTargetsNeedUpdate||b.elementsNeedUpdate||b.uvsNeedUpdate||b.normalsNeedUpdate||b.colorsNeedUpdate||b.tangentsNeedUpdate||d)&&Ua(c,a,U.DYNAMIC_DRAW,!b.dynamic,e);b.verticesNeedUpdate=!1,b.morphTargetsNeedUpdate=!1,b.elementsNeedUpdate=!1,b.uvsNeedUpdate=!1,b.normalsNeedUpdate=!1,b.colorsNeedUpdate=!1,b.tangentsNeedUpdate=!1,b.buffersNeedUpdate=!1,e.attributes&&kb(e)}else a instanceof THREE.Ribbon?(e=La(a,b),d=e.attributes&&jb(e),(b.verticesNeedUpdate||b.colorsNeedUpdate||b.normalsNeedUpdate||d)&&Ta(b,U.DYNAMIC_DRAW),b.verticesNeedUpdate=!1,b.colorsNeedUpdate=!1,b.normalsNeedUpdate=!1,e.attributes&&kb(e)):a instanceof THREE.Line?(e=La(a,b),d=e.attributes&&jb(e),(b.verticesNeedUpdate||b.colorsNeedUpdate||b.lineDistancesNeedUpdate||d)&&Sa(b,U.DYNAMIC_DRAW),
b.verticesNeedUpdate=!1,b.colorsNeedUpdate=!1,b.lineDistancesNeedUpdate=!1,e.attributes&&kb(e)):a instanceof THREE.ParticleSystem&&(e=La(a,b),d=e.attributes&&jb(e),(b.verticesNeedUpdate||b.colorsNeedUpdate||a.sortParticles||d)&&Ra(b,U.DYNAMIC_DRAW,a),b.verticesNeedUpdate=!1,b.colorsNeedUpdate=!1,e.attributes&&kb(e))}function jb(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function kb(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function lb(a,b){a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem||a instanceof THREE.Ribbon||a instanceof THREE.Line?mb(b.__webglObjects,a):a instanceof THREE.Sprite?nb(b.__webglSprites,a):a instanceof THREE.LensFlare?nb(b.__webglFlares,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&mb(b.__webglObjectsImmediate,a),delete a.__webglActive}function mb(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function nb(a,b){for(var c=a.length-1;c>=0;c--)a[c]===b&&a.splice(c,1)}function ob(a,b){a.uniforms=THREE.UniformsUtils.clone(b.uniforms),a.vertexShader=b.vertexShader,a.fragmentShader=b.fragmentShader}function pb(a,b,c,d,e){t=0,d.needsUpdate&&(d.program&&Ea(d),k.initMaterial(d,b,c,e),d.needsUpdate=!1),d.morphTargets&&(e.__webglMorphTargetInfluences||(e.__webglMorphTargetInfluences=new Float32Array(k.maxMorphTargets)));var f=!1,g=d.program,h=g.uniforms,i=d.uniforms;if(g!==n&&(U.useProgram(g),n=g,f=!0),d.id!==p&&(p=d.id,f=!0),(f||a!==r)&&(U.uniformMatrix4fv(h.projectionMatrix,!1,a.projectionMatrix.elements),a!==r&&(r=a)),d.skinning)if(da&&e.useVertexTexture){if(null!==h.boneTexture){var j=Ab();U.uniform1i(h.boneTexture,j),k.setTexture(e.boneTexture,j)}}else null!==h.boneGlobalMatrices&&U.uniformMatrix4fv(h.boneGlobalMatrices,!1,e.boneMatrices);return f&&(c&&d.fog&&ub(i,c),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights)&&(S&&(Fb(g,b),S=!1),xb(i,T)),(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)&&qb(i,d),d instanceof THREE.LineBasicMaterial?rb(i,d):d instanceof THREE.LineDashedMaterial?(rb(i,d),sb(i,d)):d instanceof THREE.ParticleBasicMaterial?tb(i,d):d instanceof THREE.MeshPhongMaterial?vb(i,d):d instanceof THREE.MeshLambertMaterial?wb(i,d):d instanceof THREE.MeshDepthMaterial?(i.mNear.value=a.near,i.mFar.value=a.far,i.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(i.opacity.value=d.opacity),e.receiveShadow&&!d._shadowPass&&yb(i,b),Bb(g,d.uniformsList),(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition&&(Q.getPositionFromMatrix(a.matrixWorld),U.uniform3f(h.cameraPosition,Q.x,Q.y,Q.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&U.uniformMatrix4fv(h.viewMatrix,!1,a.matrixWorldInverse.elements)),zb(h,e),null!==h.modelMatrix&&U.uniformMatrix4fv(h.modelMatrix,!1,e.matrixWorld.elements),g}function qb(a,b){a.opacity.value=b.opacity,k.gammaInput?a.diffuse.value.copyGammaToLinear(b.color):a.diffuse.value=b.color,a.map.value=b.map,a.lightMap.value=b.lightMap,a.specularMap.value=b.specularMap,b.bumpMap&&(a.bumpMap.value=b.bumpMap,a.bumpScale.value=b.bumpScale),b.normalMap&&(a.normalMap.value=b.normalMap,a.normalScale.value.copy(b.normalScale));var c;if(b.map?c=b.map:b.specularMap?c=b.specularMap:b.normalMap?c=b.normalMap:b.bumpMap&&(c=b.bumpMap),void 0!==c){var d=c.offset,e=c.repeat;a.offsetRepeat.value.set(d.x,d.y,e.x,e.y)}a.envMap.value=b.envMap,a.flipEnvMap.value=b.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,k.gammaInput?a.reflectivity.value=b.reflectivity:a.reflectivity.value=b.reflectivity,a.refractionRatio.value=b.refractionRatio,a.combine.value=b.combine,a.useRefract.value=b.envMap&&b.envMap.mapping instanceof THREE.CubeRefractionMapping}function rb(a,b){a.diffuse.value=b.color,a.opacity.value=b.opacity}function sb(a,b){a.dashSize.value=b.dashSize,a.totalSize.value=b.dashSize+b.gapSize,a.scale.value=b.scale}function tb(a,c){a.psColor.value=c.color,a.opacity.value=c.opacity,a.size.value=c.size,a.scale.value=b.height/2,a.map.value=c.map}function ub(a,b){a.fogColor.value=b.color,b instanceof THREE.Fog?(a.fogNear.value=b.near,a.fogFar.value=b.far):b instanceof THREE.FogExp2&&(a.fogDensity.value=b.density)}function vb(a,b){a.shininess.value=b.shininess,k.gammaInput?(a.ambient.value.copyGammaToLinear(b.ambient),a.emissive.value.copyGammaToLinear(b.emissive),a.specular.value.copyGammaToLinear(b.specular)):(a.ambient.value=b.ambient,a.emissive.value=b.emissive,a.specular.value=b.specular),b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function wb(a,b){k.gammaInput?(a.ambient.value.copyGammaToLinear(b.ambient),a.emissive.value.copyGammaToLinear(b.emissive)):(a.ambient.value=b.ambient,a.emissive.value=b.emissive),b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function xb(a,b){a.ambientLightColor.value=b.ambient,a.directionalLightColor.value=b.directional.colors,a.directionalLightDirection.value=b.directional.positions,a.pointLightColor.value=b.point.colors,a.pointLightPosition.value=b.point.positions,a.pointLightDistance.value=b.point.distances,a.spotLightColor.value=b.spot.colors,a.spotLightPosition.value=b.spot.positions,a.spotLightDistance.value=b.spot.distances,a.spotLightDirection.value=b.spot.directions,a.spotLightAngleCos.value=b.spot.anglesCos,a.spotLightExponent.value=b.spot.exponents,a.hemisphereLightSkyColor.value=b.hemi.skyColors,a.hemisphereLightGroundColor.value=b.hemi.groundColors,a.hemisphereLightDirection.value=b.hemi.positions}function yb(a,b){if(a.shadowMatrix)for(var c=0,d=0,e=b.length;d<e;d++){var f=b[d];f.castShadow&&(f instanceof THREE.SpotLight||f instanceof THREE.DirectionalLight&&!f.shadowCascade)&&(a.shadowMap.value[c]=f.shadowMap,a.shadowMapSize.value[c]=f.shadowMapSize,a.shadowMatrix.value[c]=f.shadowMatrix,a.shadowDarkness.value[c]=f.shadowDarkness,a.shadowBias.value[c]=f.shadowBias,c++)}}function zb(a,b){U.uniformMatrix4fv(a.modelViewMatrix,!1,b._modelViewMatrix.elements),a.normalMatrix&&U.uniformMatrix3fv(a.normalMatrix,!1,b._normalMatrix.elements)}function Ab(){var a=t;return a>=Z&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Z),t+=1,a}function Bb(a,b){var c,d,e,f,g,h,i,j,l,m,n;for(l=0,m=b.length;l<m;l++)if(f=a.uniforms[b[l][1]])if(c=b[l][0],e=c.type,d=c.value,"i"===e)U.uniform1i(f,d);else if("f"===e)U.uniform1f(f,d);else if("v2"===e)U.uniform2f(f,d.x,d.y);else if("v3"===e)U.uniform3f(f,d.x,d.y,d.z);else if("v4"===e)U.uniform4f(f,d.x,d.y,d.z,d.w);else if("c"===e)U.uniform3f(f,d.r,d.g,d.b);else if("iv1"===e)U.uniform1iv(f,d);else if("iv"===e)U.uniform3iv(f,d);else if("fv1"===e)U.uniform1fv(f,d);else if("fv"===e)U.uniform3fv(f,d);else if("v2v"===e){for(void 0===c._array&&(c._array=new Float32Array(2*d.length)),i=0,j=d.length;i<j;i++)n=2*i,c._array[n]=d[i].x,c._array[n+1]=d[i].y;U.uniform2fv(f,c._array)}else if("v3v"===e){for(void 0===c._array&&(c._array=new Float32Array(3*d.length)),i=0,j=d.length;i<j;i++)n=3*i,c._array[n]=d[i].x,c._array[n+1]=d[i].y,c._array[n+2]=d[i].z;U.uniform3fv(f,c._array)}else if("v4v"===e){for(void 0===c._array&&(c._array=new Float32Array(4*d.length)),i=0,j=d.length;i<j;i++)n=4*i,c._array[n]=d[i].x,c._array[n+1]=d[i].y,c._array[n+2]=d[i].z,c._array[n+3]=d[i].w;U.uniform4fv(f,c._array)}else if("m4"===e)void 0===c._array&&(c._array=new Float32Array(16)),d.flattenToArray(c._array),U.uniformMatrix4fv(f,!1,c._array);else if("m4v"===e){for(void 0===c._array&&(c._array=new Float32Array(16*d.length)),i=0,j=d.length;i<j;i++)d[i].flattenToArrayOffset(c._array,16*i);U.uniformMatrix4fv(f,!1,c._array)}else if("t"===e){if(g=d,h=Ab(),U.uniform1i(f,h),!g)continue;g.image instanceof Array&&6===g.image.length?Rb(g,h):g instanceof THREE.WebGLRenderTargetCube?Sb(g,h):k.setTexture(g,h)}else if("tv"===e){for(void 0===c._array&&(c._array=[]),i=0,j=c.value.length;i<j;i++)c._array[i]=Ab();for(U.uniform1iv(f,c._array),i=0,j=c.value.length;i<j;i++)g=c.value[i],h=c._array[i],g&&k.setTexture(g,h)}}function Cb(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld),a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}function Db(a,b,c,d){a[b]=c.r*c.r*d,a[b+1]=c.g*c.g*d,a[b+2]=c.b*c.b*d}function Eb(a,b,c,d){a[b]=c.r*d,a[b+1]=c.g*d,a[b+2]=c.b*d}function Fb(a,b){var c,d,e,j,l,m,n,o,q,g=0,h=0,i=0,r=T,s=r.directional.colors,t=r.directional.positions,u=r.point.colors,v=r.point.positions,w=r.point.distances,x=r.spot.colors,y=r.spot.positions,z=r.spot.distances,A=r.spot.directions,B=r.spot.anglesCos,C=r.spot.exponents,D=r.hemi.skyColors,E=r.hemi.groundColors,F=r.hemi.positions,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,S=0,U=0;for(c=0,d=b.length;c<d;c++)if(e=b[c],!e.onlyShadow)if(j=e.color,n=e.intensity,q=e.distance,e instanceof THREE.AmbientLight){if(!e.visible)continue;k.gammaInput?(g+=j.r*j.r,h+=j.g*j.g,i+=j.b*j.b):(g+=j.r,h+=j.g,i+=j.b)}else if(e instanceof THREE.DirectionalLight){if(K+=1,!e.visible)continue;if(R.getPositionFromMatrix(e.matrixWorld),Q.getPositionFromMatrix(e.target.matrixWorld),R.sub(Q),R.normalize(),0===R.x&&0===R.y&&0===R.z)continue;O=3*G,t[O]=R.x,t[O+1]=R.y,t[O+2]=R.z,k.gammaInput?Db(s,O,j,n*n):Eb(s,O,j,n),G+=1}else if(e instanceof THREE.PointLight){if(L+=1,!e.visible)continue;P=3*H,k.gammaInput?Db(u,P,j,n*n):Eb(u,P,j,n),Q.getPositionFromMatrix(e.matrixWorld),v[P]=Q.x,v[P+1]=Q.y,v[P+2]=Q.z,w[H]=q,H+=1}else if(e instanceof THREE.SpotLight){if(M+=1,!e.visible)continue;S=3*I,k.gammaInput?Db(x,S,j,n*n):Eb(x,S,j,n),Q.getPositionFromMatrix(e.matrixWorld),y[S]=Q.x,y[S+1]=Q.y,y[S+2]=Q.z,z[I]=q,R.copy(Q),Q.getPositionFromMatrix(e.target.matrixWorld),R.sub(Q),R.normalize(),A[S]=R.x,A[S+1]=R.y,A[S+2]=R.z,B[I]=Math.cos(e.angle),C[I]=e.exponent,I+=1}else if(e instanceof THREE.HemisphereLight){if(N+=1,!e.visible)continue;if(R.getPositionFromMatrix(e.matrixWorld),R.normalize(),0===R.x&&0===R.y&&0===R.z)continue;U=3*J,F[U]=R.x,F[U+1]=R.y,F[U+2]=R.z,l=e.color,m=e.groundColor,k.gammaInput?(o=n*n,Db(D,U,l,o),Db(E,U,m,o)):(Eb(D,U,l,n),Eb(E,U,m,n)),J+=1}for(c=3*G,d=Math.max(s.length,3*K);c<d;c++)s[c]=0;for(c=3*H,d=Math.max(u.length,3*L);c<d;c++)u[c]=0;for(c=3*I,d=Math.max(x.length,3*M);c<d;c++)x[c]=0;for(c=3*J,d=Math.max(D.length,3*N);c<d;c++)D[c]=0;for(c=3*J,d=Math.max(E.length,3*N);c<d;c++)E[c]=0;r.directional.length=G,r.point.length=H,r.spot.length=I,r.hemi.length=J,r.ambient[0]=g,r.ambient[1]=h,r.ambient[2]=i}function Gb(a){a!==F&&(U.lineWidth(a),F=a)}function Hb(a,b,c){C!==a&&(a?U.enable(U.POLYGON_OFFSET_FILL):U.disable(U.POLYGON_OFFSET_FILL),C=a),!a||D===b&&E===c||(U.polygonOffset(b,c),D=b,E=c)}function Ib(a){var b,c,d=[];for(var e in a)b=a[e],b!==!1&&(c="#define "+e+" "+b,d.push(c));return d.join("\n")}function Jb(a,b,d,e,f,g,h){var i,j,n,o,p,q=[];a?q.push(a):(q.push(b),q.push(d));for(n in g)q.push(n),q.push(g[n]);for(i in h)q.push(i),q.push(h[i]);for(p=q.join(),i=0,j=l.length;i<j;i++){var r=l[i];if(r.code===p)return r.usedTimes++,r.program}var s="SHADOWMAP_TYPE_BASIC";h.shadowMapType===THREE.PCFShadowMap?s="SHADOWMAP_TYPE_PCF":h.shadowMapType===THREE.PCFSoftShadowMap&&(s="SHADOWMAP_TYPE_PCF_SOFT");var t=Ib(g);o=U.createProgram();var u=["precision "+c+" float;",t,ca?"#define VERTEX_TEXTURES":"",k.gammaInput?"#define GAMMA_INPUT":"",k.gammaOutput?"#define GAMMA_OUTPUT":"",k.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+h.maxDirLights,"#define MAX_POINT_LIGHTS "+h.maxPointLights,"#define MAX_SPOT_LIGHTS "+h.maxSpotLights,"#define MAX_HEMI_LIGHTS "+h.maxHemiLights,"#define MAX_SHADOWS "+h.maxShadows,"#define MAX_BONES "+h.maxBones,h.map?"#define USE_MAP":"",h.envMap?"#define USE_ENVMAP":"",h.lightMap?"#define USE_LIGHTMAP":"",h.bumpMap?"#define USE_BUMPMAP":"",h.normalMap?"#define USE_NORMALMAP":"",h.specularMap?"#define USE_SPECULARMAP":"",h.vertexColors?"#define USE_COLOR":"",h.skinning?"#define USE_SKINNING":"",h.useVertexTexture?"#define BONE_TEXTURE":"",h.boneTextureWidth?"#define N_BONE_PIXEL_X "+h.boneTextureWidth.toFixed(1):"",h.boneTextureHeight?"#define N_BONE_PIXEL_Y "+h.boneTextureHeight.toFixed(1):"",h.morphTargets?"#define USE_MORPHTARGETS":"",h.morphNormals?"#define USE_MORPHNORMALS":"",h.perPixel?"#define PHONG_PER_PIXEL":"",h.wrapAround?"#define WRAP_AROUND":"",h.doubleSided?"#define DOUBLE_SIDED":"",h.flipSided?"#define FLIP_SIDED":"",h.shadowMapEnabled?"#define USE_SHADOWMAP":"",h.shadowMapEnabled?"#define "+s:"",h.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",h.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",h.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),v=["precision "+c+" float;",h.bumpMap||h.normalMap?"#extension GL_OES_standard_derivatives : enable":"",t,"#define MAX_DIR_LIGHTS "+h.maxDirLights,"#define MAX_POINT_LIGHTS "+h.maxPointLights,"#define MAX_SPOT_LIGHTS "+h.maxSpotLights,"#define MAX_HEMI_LIGHTS "+h.maxHemiLights,"#define MAX_SHADOWS "+h.maxShadows,h.alphaTest?"#define ALPHATEST "+h.alphaTest:"",k.gammaInput?"#define GAMMA_INPUT":"",k.gammaOutput?"#define GAMMA_OUTPUT":"",k.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",h.useFog&&h.fog?"#define USE_FOG":"",h.useFog&&h.fogExp?"#define FOG_EXP2":"",h.map?"#define USE_MAP":"",h.envMap?"#define USE_ENVMAP":"",h.lightMap?"#define USE_LIGHTMAP":"",h.bumpMap?"#define USE_BUMPMAP":"",h.normalMap?"#define USE_NORMALMAP":"",h.specularMap?"#define USE_SPECULARMAP":"",h.vertexColors?"#define USE_COLOR":"",h.metal?"#define METAL":"",h.perPixel?"#define PHONG_PER_PIXEL":"",h.wrapAround?"#define WRAP_AROUND":"",h.doubleSided?"#define DOUBLE_SIDED":"",h.flipSided?"#define FLIP_SIDED":"",h.shadowMapEnabled?"#define USE_SHADOWMAP":"",h.shadowMapEnabled?"#define "+s:"",h.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",h.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"),w=Nb("vertex",u+d),x=Nb("fragment",v+b);U.attachShader(o,w),U.attachShader(o,x),U.linkProgram(o),U.getProgramParameter(o,U.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+U.getProgramParameter(o,U.VALIDATE_STATUS)+", gl error ["+U.getError()+"]"),U.deleteShader(x),U.deleteShader(w),o.uniforms={},o.attributes={};var y,z,A,B;y=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],h.useVertexTexture?y.push("boneTexture"):y.push("boneGlobalMatrices");for(z in e)y.push(z);for(Kb(o,y),y=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],B=0;B<h.maxMorphTargets;B++)y.push("morphTarget"+B);for(B=0;B<h.maxMorphNormals;B++)y.push("morphNormal"+B);for(A in f)y.push(A);return Lb(o,y),o.id=m++,l.push({program:o,code:p,usedTimes:1}),k.info.memory.programs=l.length,o}function Kb(a,b){var c,d,e;for(c=0,d=b.length;c<d;c++)e=b[c],a.uniforms[e]=U.getUniformLocation(a,e)}function Lb(a,b){var c,d,e;for(c=0,d=b.length;c<d;c++)e=b[c],a.attributes[e]=U.getAttribLocation(a,e)}function Mb(a){for(var b=a.split("\n"),c=0,d=b.length;c<d;c++)b[c]=c+1+": "+b[c];return b.join("\n")}function Nb(a,b){var c;return"fragment"===a?c=U.createShader(U.FRAGMENT_SHADER):"vertex"===a&&(c=U.createShader(U.VERTEX_SHADER)),U.shaderSource(c,b),U.compileShader(c),U.getShaderParameter(c,U.COMPILE_STATUS)?c:(console.error(U.getShaderInfoLog(c)),console.error(Mb(b)),null)}function Ob(a){return 0===(a&a-1)}function Pb(a,b,c){c?(U.texParameteri(a,U.TEXTURE_WRAP_S,Xb(b.wrapS)),U.texParameteri(a,U.TEXTURE_WRAP_T,Xb(b.wrapT)),U.texParameteri(a,U.TEXTURE_MAG_FILTER,Xb(b.magFilter)),U.texParameteri(a,U.TEXTURE_MIN_FILTER,Xb(b.minFilter))):(U.texParameteri(a,U.TEXTURE_WRAP_S,U.CLAMP_TO_EDGE),U.texParameteri(a,U.TEXTURE_WRAP_T,U.CLAMP_TO_EDGE),U.texParameteri(a,U.TEXTURE_MAG_FILTER,Wb(b.magFilter)),U.texParameteri(a,U.TEXTURE_MIN_FILTER,Wb(b.minFilter))),X&&b.type!==THREE.FloatType&&(b.anisotropy>1||b.__oldAnisotropy)&&(U.texParameterf(a,X.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,ba)),b.__oldAnisotropy=b.anisotropy)}function Qb(a,b){if(a.width<=b&&a.height<=b)return a;var c=Math.max(a.width,a.height),d=Math.floor(a.width*b/c),e=Math.floor(a.height*b/c),f=document.createElement("canvas");f.width=d,f.height=e;var g=f.getContext("2d");return g.drawImage(a,0,0,a.width,a.height,0,0,d,e),f}function Rb(a,b){if(6===a.image.length)if(a.needsUpdate){a.image.__webglTextureCube||(a.image.__webglTextureCube=U.createTexture(),k.info.memory.textures++),U.activeTexture(U.TEXTURE0+b),U.bindTexture(U.TEXTURE_CUBE_MAP,a.image.__webglTextureCube),U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,a.flipY);for(var c=a instanceof THREE.CompressedTexture,d=[],e=0;e<6;e++)k.autoScaleCubemaps&&!c?d[e]=Qb(a.image[e],aa):d[e]=a.image[e];var f=d[0],g=Ob(f.width)&&Ob(f.height),h=Xb(a.format),i=Xb(a.type);Pb(U.TEXTURE_CUBE_MAP,a,g);for(var e=0;e<6;e++)if(c)for(var j,l=d[e].mipmaps,m=0,n=l.length;m<n;m++)j=l[m],U.compressedTexImage2D(U.TEXTURE_CUBE_MAP_POSITIVE_X+e,m,h,j.width,j.height,0,j.data);else U.texImage2D(U.TEXTURE_CUBE_MAP_POSITIVE_X+e,0,h,h,i,d[e]);a.generateMipmaps&&g&&U.generateMipmap(U.TEXTURE_CUBE_MAP),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else U.activeTexture(U.TEXTURE0+b),U.bindTexture(U.TEXTURE_CUBE_MAP,a.image.__webglTextureCube)}function Sb(a,b){U.activeTexture(U.TEXTURE0+b),U.bindTexture(U.TEXTURE_CUBE_MAP,a.__webglTexture)}function Tb(a,b,c){U.bindFramebuffer(U.FRAMEBUFFER,a),U.framebufferTexture2D(U.FRAMEBUFFER,U.COLOR_ATTACHMENT0,c,b.__webglTexture,0)}function Ub(a,b){U.bindRenderbuffer(U.RENDERBUFFER,a),b.depthBuffer&&!b.stencilBuffer?(U.renderbufferStorage(U.RENDERBUFFER,U.DEPTH_COMPONENT16,b.width,b.height),U.framebufferRenderbuffer(U.FRAMEBUFFER,U.DEPTH_ATTACHMENT,U.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(U.renderbufferStorage(U.RENDERBUFFER,U.DEPTH_STENCIL,b.width,b.height),U.framebufferRenderbuffer(U.FRAMEBUFFER,U.DEPTH_STENCIL_ATTACHMENT,U.RENDERBUFFER,a)):U.renderbufferStorage(U.RENDERBUFFER,U.RGBA4,b.width,b.height)}function Vb(a){a instanceof THREE.WebGLRenderTargetCube?(U.bindTexture(U.TEXTURE_CUBE_MAP,a.__webglTexture),U.generateMipmap(U.TEXTURE_CUBE_MAP),U.bindTexture(U.TEXTURE_CUBE_MAP,null)):(U.bindTexture(U.TEXTURE_2D,a.__webglTexture),U.generateMipmap(U.TEXTURE_2D),U.bindTexture(U.TEXTURE_2D,null))}function Wb(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?U.NEAREST:U.LINEAR}function Xb(a){if(a===THREE.RepeatWrapping)return U.REPEAT;if(a===THREE.ClampToEdgeWrapping)return U.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return U.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return U.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return U.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return U.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return U.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return U.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return U.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return U.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return U.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return U.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return U.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return U.BYTE;if(a===THREE.ShortType)return U.SHORT;if(a===THREE.UnsignedShortType)return U.UNSIGNED_SHORT;if(a===THREE.IntType)return U.INT;if(a===THREE.UnsignedIntType)return U.UNSIGNED_INT;if(a===THREE.FloatType)return U.FLOAT;if(a===THREE.AlphaFormat)return U.ALPHA;if(a===THREE.RGBFormat)return U.RGB;if(a===THREE.RGBAFormat)return U.RGBA;if(a===THREE.LuminanceFormat)return U.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return U.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return U.FUNC_ADD;if(a===THREE.SubtractEquation)return U.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return U.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return U.ZERO;if(a===THREE.OneFactor)return U.ONE;if(a===THREE.SrcColorFactor)return U.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return U.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return U.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return U.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return U.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return U.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return U.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return U.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return U.SRC_ALPHA_SATURATE;if(void 0!==Y){if(a===THREE.RGB_S3TC_DXT1_Format)return Y.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return Y.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return Y.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return Y.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function Yb(a){if(da&&a&&a.useVertexTexture)return 1024;var b=U.getParameter(U.MAX_VERTEX_UNIFORM_VECTORS),c=Math.floor((b-20)/4),d=c;return void 0!==a&&a instanceof THREE.SkinnedMesh&&(d=Math.min(a.bones.length,d),d<a.bones.length&&console.warn("WebGLRenderer: too many bones - "+a.bones.length+", this GPU supports just "+d+" (try OpenGL instead of ANGLE)")),d}function Zb(a){var b,c,d,e,f,g,h;for(e=f=g=h=0,b=0,c=a.length;b<c;b++)d=a[b],d.onlyShadow||(d instanceof THREE.DirectionalLight&&e++,d instanceof THREE.PointLight&&f++,d instanceof THREE.SpotLight&&g++,d instanceof THREE.HemisphereLight&&h++);return{directional:e,point:f,spot:g,hemi:h}}function $b(a){var b,c,d,e=0;for(b=0,c=a.length;b<c;b++)d=a[b],d.castShadow&&(d instanceof THREE.SpotLight&&e++,d instanceof THREE.DirectionalLight&&!d.shadowCascade&&e++);return e}function _b(){try{if(!(U=b.getContext("experimental-webgl",{alpha:d,premultipliedAlpha:e,antialias:f,stencil:g,preserveDrawingBuffer:h})))throw"Error creating WebGL context."}catch(a){console.error(a)}V=U.getExtension("OES_texture_float"),W=U.getExtension("OES_standard_derivatives"),X=U.getExtension("EXT_texture_filter_anisotropic")||U.getExtension("MOZ_EXT_texture_filter_anisotropic")||U.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),Y=U.getExtension("WEBGL_compressed_texture_s3tc")||U.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||U.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),V||console.log("THREE.WebGLRenderer: Float textures not supported."),W||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),X||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),Y||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported."),void 0===U.getShaderPrecisionFormat&&(U.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}function ac(){U.clearColor(0,0,0,1),U.clearDepth(1),U.clearStencil(0),U.enable(U.DEPTH_TEST),U.depthFunc(U.LEQUAL),U.frontFace(U.CCW),U.cullFace(U.BACK),U.enable(U.CULL_FACE),U.enable(U.BLEND),U.blendEquation(U.FUNC_ADD),U.blendFunc(U.SRC_ALPHA,U.ONE_MINUS_SRC_ALPHA),U.clearColor(i.r,i.g,i.b,j)}console.log("THREE.WebGLRenderer",THREE.REVISION),a=a||{};var b=void 0!==a.canvas?a.canvas:document.createElement("canvas"),c=void 0!==a.precision?a.precision:"highp",d=void 0===a.alpha||a.alpha,e=void 0===a.premultipliedAlpha||a.premultipliedAlpha,f=void 0!==a.antialias&&a.antialias,g=void 0===a.stencil||a.stencil,h=void 0!==a.preserveDrawingBuffer&&a.preserveDrawingBuffer,i=new THREE.Color(0),j=0;void 0!==a.clearColor&&(console.warn("DEPRECATED: clearColor in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),i.setHex(a.clearColor)),void 0!==a.clearAlpha&&(console.warn("DEPRECATED: clearAlpha in WebGLRenderer constructor parameters is being removed. Use .setClearColor() instead."),j=a.clearAlpha),this.domElement=b,this.context=null,this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var U,V,W,X,Y,k=this,l=[],m=0,n=null,o=null,p=-1,q=null,r=null,s=0,t=0,u=-1,v=-1,w=-1,x=-1,y=-1,z=-1,A=-1,B=-1,C=null,D=null,E=null,F=null,G=0,H=0,I=0,J=0,K=0,L=0,M={},N=new THREE.Frustum,O=new THREE.Matrix4,P=new THREE.Matrix4,Q=new THREE.Vector3,R=new THREE.Vector3,S=!0,T={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,anglesCos:new Array,exponents:new Array},hemi:{length:0,skyColors:new Array,groundColors:new Array,positions:new Array}};_b(),ac(),this.context=U;var Z=U.getParameter(U.MAX_TEXTURE_IMAGE_UNITS),$=U.getParameter(U.MAX_VERTEX_TEXTURE_IMAGE_UNITS),aa=(U.getParameter(U.MAX_TEXTURE_SIZE),U.getParameter(U.MAX_CUBE_MAP_TEXTURE_SIZE)),ba=X?U.getParameter(X.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,ca=$>0,da=ca&&V,fa=(Y?U.getParameter(U.COMPRESSED_TEXTURE_FORMATS):[],U.getShaderPrecisionFormat(U.VERTEX_SHADER,U.HIGH_FLOAT)),ga=U.getShaderPrecisionFormat(U.VERTEX_SHADER,U.MEDIUM_FLOAT),ia=(U.getShaderPrecisionFormat(U.VERTEX_SHADER,U.LOW_FLOAT),U.getShaderPrecisionFormat(U.FRAGMENT_SHADER,U.HIGH_FLOAT)),ja=U.getShaderPrecisionFormat(U.FRAGMENT_SHADER,U.MEDIUM_FLOAT),ra=(U.getShaderPrecisionFormat(U.FRAGMENT_SHADER,U.LOW_FLOAT),U.getShaderPrecisionFormat(U.VERTEX_SHADER,U.HIGH_INT),U.getShaderPrecisionFormat(U.VERTEX_SHADER,U.MEDIUM_INT),U.getShaderPrecisionFormat(U.VERTEX_SHADER,U.LOW_INT),U.getShaderPrecisionFormat(U.FRAGMENT_SHADER,U.HIGH_INT),U.getShaderPrecisionFormat(U.FRAGMENT_SHADER,U.MEDIUM_INT),U.getShaderPrecisionFormat(U.FRAGMENT_SHADER,U.LOW_INT),fa.precision>0&&ia.precision>0),sa=ga.precision>0&&ja.precision>0;"highp"!==c||ra||(sa?(c="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(c="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==c||sa||(c="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return U},this.supportsVertexTextures=function(){return ca},this.supportsFloatTextures=function(){return V},this.supportsStandardDerivatives=function(){return W},this.supportsCompressedTextureS3TC=function(){return Y},this.getMaxAnisotropy=function(){return ba},this.getPrecision=function(){return c},this.setSize=function(a,c,d){b.width=a*this.devicePixelRatio,b.height=c*this.devicePixelRatio,1!==this.devicePixelRatio&&d!==!1&&(b.style.width=a+"px",b.style.height=c+"px"),this.setViewport(0,0,b.width,b.height)},this.setViewport=function(a,c,d,e){G=void 0!==a?a:0,H=void 0!==c?c:0,I=void 0!==d?d:b.width,J=void 0!==e?e:b.height,U.viewport(G,H,I,J)},this.setScissor=function(a,b,c,d){U.scissor(a,b,c,d)},this.enableScissorTest=function(a){a?U.enable(U.SCISSOR_TEST):U.disable(U.SCISSOR_TEST)},this.setClearColor=function(a,b){i.set(a),j=void 0!==b?b:1,U.clearColor(i.r,i.g,i.b,j)},this.setClearColorHex=function(a,b){console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(a,b)},this.getClearColor=function(){return i},this.getClearAlpha=function(){return j},this.clear=function(a,b,c){var d=0;(void 0===a||a)&&(d|=U.COLOR_BUFFER_BIT),(void 0===b||b)&&(d|=U.DEPTH_BUFFER_BIT),(void 0===c||c)&&(d|=U.STENCIL_BUFFER_BIT),U.clear(d)},this.clearTarget=function(a,b,c,d){this.setRenderTarget(a),this.clear(b,c,d)},this.addPostPlugin=function(a){a.init(this),this.renderPluginsPost.push(a)},this.addPrePlugin=function(a){a.init(this),this.renderPluginsPre.push(a)},this.updateShadowMap=function(a,b){n=null,w=-1,A=-1,B=-1,q=-1,p=-1,S=!0,u=-1,v=-1,this.shadowMapPlugin.update(a,b)};var xa=function(a){var b=a.target;b.removeEventListener("dispose",xa),Ba(b),k.info.memory.geometries--},ya=function(a){var b=a.target;b.removeEventListener("dispose",ya),Ca(b),k.info.memory.textures--},za=function(a){var b=a.target;b.removeEventListener("dispose",za),Da(b),k.info.memory.textures--},Aa=function(a){var b=a.target;b.removeEventListener("dispose",Aa),Ea(b)},Ba=function(a){if(a.__webglInit=void 0,void 0!==a.__webglVertexBuffer&&U.deleteBuffer(a.__webglVertexBuffer),void 0!==a.__webglNormalBuffer&&U.deleteBuffer(a.__webglNormalBuffer),void 0!==a.__webglTangentBuffer&&U.deleteBuffer(a.__webglTangentBuffer),void 0!==a.__webglColorBuffer&&U.deleteBuffer(a.__webglColorBuffer),void 0!==a.__webglUVBuffer&&U.deleteBuffer(a.__webglUVBuffer),void 0!==a.__webglUV2Buffer&&U.deleteBuffer(a.__webglUV2Buffer),void 0!==a.__webglSkinIndicesBuffer&&U.deleteBuffer(a.__webglSkinIndicesBuffer),void 0!==a.__webglSkinWeightsBuffer&&U.deleteBuffer(a.__webglSkinWeightsBuffer),void 0!==a.__webglFaceBuffer&&U.deleteBuffer(a.__webglFaceBuffer),void 0!==a.__webglLineBuffer&&U.deleteBuffer(a.__webglLineBuffer),void 0!==a.__webglLineDistanceBuffer&&U.deleteBuffer(a.__webglLineDistanceBuffer),void 0!==a.geometryGroups)for(var b in a.geometryGroups){var c=a.geometryGroups[b];if(void 0!==c.numMorphTargets)for(var d=0,e=c.numMorphTargets;d<e;d++)U.deleteBuffer(c.__webglMorphTargetsBuffers[d]);if(void 0!==c.numMorphNormals)for(var d=0,e=c.numMorphNormals;d<e;d++)U.deleteBuffer(c.__webglMorphNormalsBuffers[d]);Fa(c)}Fa(a)},Ca=function(a){if(a.image&&a.image.__webglTextureCube)U.deleteTexture(a.image.__webglTextureCube);else{if(!a.__webglInit)return;a.__webglInit=!1,U.deleteTexture(a.__webglTexture)}},Da=function(a){if(a&&a.__webglTexture)if(U.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;b<6;b++)U.deleteFramebuffer(a.__webglFramebuffer[b]),U.deleteRenderbuffer(a.__webglRenderbuffer[b]);else U.deleteFramebuffer(a.__webglFramebuffer),U.deleteRenderbuffer(a.__webglRenderbuffer)},Ea=function(a){var b=a.program;if(void 0!==b){a.program=void 0;var c,d,e,f=!1;for(c=0,d=l.length;c<d;c++)if(e=l[c],e.program===b){e.usedTimes--,0===e.usedTimes&&(f=!0);break}if(f===!0){var g=[];for(c=0,d=l.length;c<d;c++)e=l[c],e.program!==b&&g.push(e);l=g,U.deleteProgram(b),k.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){if(a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=U.createBuffer()),a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=U.createBuffer()),a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=U.createBuffer()),a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=U.createBuffer()),a.hasPositions&&(U.bindBuffer(U.ARRAY_BUFFER,a.__webglVertexBuffer),U.bufferData(U.ARRAY_BUFFER,a.positionArray,U.DYNAMIC_DRAW),U.enableVertexAttribArray(b.attributes.position),U.vertexAttribPointer(b.attributes.position,3,U.FLOAT,!1,0,0)),a.hasNormals){if(U.bindBuffer(U.ARRAY_BUFFER,a.__webglNormalBuffer),c.shading===THREE.FlatShading){
var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r=3*a.count;for(q=0;q<r;q+=9)p=a.normalArray,g=p[q],j=p[q+1],m=p[q+2],h=p[q+3],k=p[q+4],n=p[q+5],i=p[q+6],l=p[q+7],o=p[q+8],d=(g+h+i)/3,e=(j+k+l)/3,f=(m+n+o)/3,p[q]=d,p[q+1]=e,p[q+2]=f,p[q+3]=d,p[q+4]=e,p[q+5]=f,p[q+6]=d,p[q+7]=e,p[q+8]=f}U.bufferData(U.ARRAY_BUFFER,a.normalArray,U.DYNAMIC_DRAW),U.enableVertexAttribArray(b.attributes.normal),U.vertexAttribPointer(b.attributes.normal,3,U.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(U.bindBuffer(U.ARRAY_BUFFER,a.__webglUvBuffer),U.bufferData(U.ARRAY_BUFFER,a.uvArray,U.DYNAMIC_DRAW),U.enableVertexAttribArray(b.attributes.uv),U.vertexAttribPointer(b.attributes.uv,2,U.FLOAT,!1,0,0)),a.hasColors&&c.vertexColors!==THREE.NoColors&&(U.bindBuffer(U.ARRAY_BUFFER,a.__webglColorBuffer),U.bufferData(U.ARRAY_BUFFER,a.colorArray,U.DYNAMIC_DRAW),U.enableVertexAttribArray(b.attributes.color),U.vertexAttribPointer(b.attributes.color,3,U.FLOAT,!1,0,0)),U.drawArrays(U.TRIANGLES,0,a.count),a.count=0},this.renderBufferDirect=function(a,b,c,d,e,f){if(d.visible!==!1){var g,h,n,o,p,r,s;g=pb(a,b,c,d,f),h=g.attributes,n=e.attributes;var t=!1,u=d.wireframe?1:0,v=16777215*e.id+2*g.id+u;if(v!==q&&(q=v,t=!0),t&&Xa(),f instanceof THREE.Mesh){var w=n.index;if(w){var x=e.offsets;x.length>1&&(t=!0);for(var y=0,z=x.length;y<z;y++){var A=x[y].index;if(t){for(p in n)"index"!==p&&(r=h[p],o=n[p],s=o.itemSize,r>=0&&(U.bindBuffer(U.ARRAY_BUFFER,o.buffer),Wa(r),U.vertexAttribPointer(r,s,U.FLOAT,!1,0,A*s*4)));U.bindBuffer(U.ELEMENT_ARRAY_BUFFER,w.buffer)}U.drawElements(U.TRIANGLES,x[y].count,U.UNSIGNED_SHORT,2*x[y].start),k.info.render.calls++,k.info.render.vertices+=x[y].count,k.info.render.faces+=x[y].count/3}}else{if(t)for(p in n)"index"!==p&&(r=h[p],o=n[p],s=o.itemSize,r>=0&&(U.bindBuffer(U.ARRAY_BUFFER,o.buffer),Wa(r),U.vertexAttribPointer(r,s,U.FLOAT,!1,0,0)));var B=e.attributes.position;U.drawArrays(U.TRIANGLES,0,B.numItems/3),k.info.render.calls++,k.info.render.vertices+=B.numItems/3,k.info.render.faces+=B.numItems/3/3}}else if(f instanceof THREE.ParticleSystem){if(t){for(p in n)r=h[p],o=n[p],s=o.itemSize,r>=0&&(U.bindBuffer(U.ARRAY_BUFFER,o.buffer),Wa(r),U.vertexAttribPointer(r,s,U.FLOAT,!1,0,0));var B=n.position;U.drawArrays(U.POINTS,0,B.numItems/3),k.info.render.calls++,k.info.render.points+=B.numItems/3}}else if(f instanceof THREE.Line&&t){for(p in n)r=h[p],o=n[p],s=o.itemSize,r>=0&&(U.bindBuffer(U.ARRAY_BUFFER,o.buffer),Wa(r),U.vertexAttribPointer(r,s,U.FLOAT,!1,0,0));Gb(d.linewidth);var B=n.position;U.drawArrays(U.LINE_STRIP,0,B.numItems/3),k.info.render.calls++,k.info.render.points+=B.numItems}}},this.renderBuffer=function(a,b,c,d,e,f){if(d.visible!==!1){var g,h,j,m,n,o;g=pb(a,b,c,d,f),h=g.attributes;var p=!1,r=d.wireframe?1:0,s=16777215*e.id+2*g.id+r;if(s!==q&&(q=s,p=!0),p&&Xa(),!d.morphTargets&&h.position>=0?p&&(U.bindBuffer(U.ARRAY_BUFFER,e.__webglVertexBuffer),Wa(h.position),U.vertexAttribPointer(h.position,3,U.FLOAT,!1,0,0)):f.morphTargetBase&&Ya(d,e,f),p){if(e.__webglCustomAttributesList)for(n=0,o=e.__webglCustomAttributesList.length;n<o;n++)m=e.__webglCustomAttributesList[n],h[m.buffer.belongsToAttribute]>=0&&(U.bindBuffer(U.ARRAY_BUFFER,m.buffer),Wa(h[m.buffer.belongsToAttribute]),U.vertexAttribPointer(h[m.buffer.belongsToAttribute],m.size,U.FLOAT,!1,0,0));h.color>=0&&(U.bindBuffer(U.ARRAY_BUFFER,e.__webglColorBuffer),Wa(h.color),U.vertexAttribPointer(h.color,3,U.FLOAT,!1,0,0)),h.normal>=0&&(U.bindBuffer(U.ARRAY_BUFFER,e.__webglNormalBuffer),Wa(h.normal),U.vertexAttribPointer(h.normal,3,U.FLOAT,!1,0,0)),h.tangent>=0&&(U.bindBuffer(U.ARRAY_BUFFER,e.__webglTangentBuffer),Wa(h.tangent),U.vertexAttribPointer(h.tangent,4,U.FLOAT,!1,0,0)),h.uv>=0&&(U.bindBuffer(U.ARRAY_BUFFER,e.__webglUVBuffer),Wa(h.uv),U.vertexAttribPointer(h.uv,2,U.FLOAT,!1,0,0)),h.uv2>=0&&(U.bindBuffer(U.ARRAY_BUFFER,e.__webglUV2Buffer),Wa(h.uv2),U.vertexAttribPointer(h.uv2,2,U.FLOAT,!1,0,0)),d.skinning&&h.skinIndex>=0&&h.skinWeight>=0&&(U.bindBuffer(U.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),Wa(h.skinIndex),U.vertexAttribPointer(h.skinIndex,4,U.FLOAT,!1,0,0),U.bindBuffer(U.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),Wa(h.skinWeight),U.vertexAttribPointer(h.skinWeight,4,U.FLOAT,!1,0,0)),h.lineDistance>=0&&(U.bindBuffer(U.ARRAY_BUFFER,e.__webglLineDistanceBuffer),Wa(h.lineDistance),U.vertexAttribPointer(h.lineDistance,1,U.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(Gb(d.wireframeLinewidth),p&&U.bindBuffer(U.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),U.drawElements(U.LINES,e.__webglLineCount,U.UNSIGNED_SHORT,0)):(p&&U.bindBuffer(U.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),U.drawElements(U.TRIANGLES,e.__webglFaceCount,U.UNSIGNED_SHORT,0)),k.info.render.calls++,k.info.render.vertices+=e.__webglFaceCount,k.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(j=f.type===THREE.LineStrip?U.LINE_STRIP:U.LINES,Gb(d.linewidth),U.drawArrays(j,0,e.__webglLineCount),k.info.render.calls++):f instanceof THREE.ParticleSystem?(U.drawArrays(U.POINTS,0,e.__webglParticleCount),k.info.render.calls++,k.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(U.drawArrays(U.TRIANGLE_STRIP,0,e.__webglVertexCount),k.info.render.calls++)}},this.render=function(a,b,c,d){if(b instanceof THREE.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var e,f,g,h,i,j=a.__lights,l=a.fog;for(p=-1,S=!0,a.autoUpdate===!0&&a.updateMatrixWorld(),void 0===b.parent&&b.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),O.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),N.setFromMatrix(O),this.autoUpdateObjects&&this.initWebGLObjects(a),_a(this.renderPluginsPre,a,b),k.info.render.calls=0,k.info.render.vertices=0,k.info.render.faces=0,k.info.render.points=0,this.setRenderTarget(c),(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),i=a.__webglObjects,e=0,f=i.length;e<f;e++)g=i[e],h=g.object,g.id=e,g.render=!1,h.visible&&((h instanceof THREE.Mesh||h instanceof THREE.ParticleSystem)&&h.frustumCulled&&!N.intersectsObject(h)||(Cb(h,b),db(g),g.render=!0,this.sortObjects===!0&&(null!==h.renderDepth?g.z=h.renderDepth:(Q.getPositionFromMatrix(h.matrixWorld),Q.applyProjection(O),g.z=Q.z))));for(this.sortObjects&&i.sort(Za),i=a.__webglObjectsImmediate,e=0,f=i.length;e<f;e++)g=i[e],h=g.object,h.visible&&(Cb(h,b),cb(g));if(a.overrideMaterial){var m=a.overrideMaterial;this.setBlending(m.blending,m.blendEquation,m.blendSrc,m.blendDst),this.setDepthTest(m.depthTest),this.setDepthWrite(m.depthWrite),Hb(m.polygonOffset,m.polygonOffsetFactor,m.polygonOffsetUnits),ab(a.__webglObjects,!1,"",b,j,l,!0,m),bb(a.__webglObjectsImmediate,"",b,j,l,!1,m)}else{var m=null;this.setBlending(THREE.NoBlending),ab(a.__webglObjects,!0,"opaque",b,j,l,!1,m),bb(a.__webglObjectsImmediate,"opaque",b,j,l,!1,m),ab(a.__webglObjects,!1,"transparent",b,j,l,!0,m),bb(a.__webglObjectsImmediate,"transparent",b,j,l,!0,m)}_a(this.renderPluginsPost,a,b),c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&Vb(c),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(a,b,c,d,e){var f=pb(a,b,c,d,e);q=-1,k.setMaterialFaces(d),e.immediateRenderCallback?e.immediateRenderCallback(f,U,N):e.render(function(a){k.renderBufferImmediate(a,f,d)})},this.initWebGLObjects=function(a){for(a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);a.__objectsAdded.length;)fb(a.__objectsAdded[0],a),a.__objectsAdded.splice(0,1);for(;a.__objectsRemoved.length;)lb(a.__objectsRemoved[0],a),a.__objectsRemoved.splice(0,1);for(var b=0,c=a.__webglObjects.length;b<c;b++){var d=a.__webglObjects[b].object;void 0===d.__webglInit&&(void 0!==d.__webglActive&&lb(d,a),fb(d,a)),ib(d)}},this.initMaterial=function(a,b,c,d){a.addEventListener("dispose",Aa);var e,h,i,j,k,l,m;a instanceof THREE.MeshDepthMaterial?m="depth":a instanceof THREE.MeshNormalMaterial?m="normal":a instanceof THREE.MeshBasicMaterial?m="basic":a instanceof THREE.MeshLambertMaterial?m="lambert":a instanceof THREE.MeshPhongMaterial?m="phong":a instanceof THREE.LineBasicMaterial?m="basic":a instanceof THREE.LineDashedMaterial?m="dashed":a instanceof THREE.ParticleBasicMaterial&&(m="particle_basic"),m&&ob(a,THREE.ShaderLib[m]),j=Zb(b),l=$b(b),k=Yb(d),i={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:k,useVertexTexture:da&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:j.directional,maxPointLights:j.point,maxSpotLights:j.spot,maxHemiLights:j.hemi,maxShadows:l,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},a.program=Jb(m,a.fragmentShader,a.vertexShader,a.uniforms,a.attributes,a.defines,i);var n=a.program.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;var o,p="morphTarget";for(h=0;h<this.maxMorphTargets;h++)o=p+h,n[o]>=0&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=0;var o,p="morphNormal";for(h=0;h<this.maxMorphNormals;h++)o=p+h,n[o]>=0&&a.numSupportedMorphNormals++}a.uniformsList=[];for(e in a.uniforms)a.uniformsList.push([a.uniforms[e],e])},this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?U.disable(U.CULL_FACE):(b===THREE.FrontFaceDirectionCW?U.frontFace(U.CW):U.frontFace(U.CCW),a===THREE.CullFaceBack?U.cullFace(U.BACK):a===THREE.CullFaceFront?U.cullFace(U.FRONT):U.cullFace(U.FRONT_AND_BACK),U.enable(U.CULL_FACE))},this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,c=a.side===THREE.BackSide;u!==b&&(b?U.disable(U.CULL_FACE):U.enable(U.CULL_FACE),u=b),v!==c&&(c?U.frontFace(U.CW):U.frontFace(U.CCW),v=c)},this.setDepthTest=function(a){A!==a&&(a?U.enable(U.DEPTH_TEST):U.disable(U.DEPTH_TEST),A=a)},this.setDepthWrite=function(a){B!==a&&(U.depthMask(a),B=a)},this.setBlending=function(a,b,c,d){a!==w&&(a===THREE.NoBlending?U.disable(U.BLEND):a===THREE.AdditiveBlending?(U.enable(U.BLEND),U.blendEquation(U.FUNC_ADD),U.blendFunc(U.SRC_ALPHA,U.ONE)):a===THREE.SubtractiveBlending?(U.enable(U.BLEND),U.blendEquation(U.FUNC_ADD),U.blendFunc(U.ZERO,U.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(U.enable(U.BLEND),U.blendEquation(U.FUNC_ADD),U.blendFunc(U.ZERO,U.SRC_COLOR)):a===THREE.CustomBlending?U.enable(U.BLEND):(U.enable(U.BLEND),U.blendEquationSeparate(U.FUNC_ADD,U.FUNC_ADD),U.blendFuncSeparate(U.SRC_ALPHA,U.ONE_MINUS_SRC_ALPHA,U.ONE,U.ONE_MINUS_SRC_ALPHA)),w=a),a===THREE.CustomBlending?(b!==x&&(U.blendEquation(Xb(b)),x=b),c===y&&d===z||(U.blendFunc(Xb(c),Xb(d)),y=c,z=d)):(x=null,y=null,z=null)},this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",ya),a.__webglTexture=U.createTexture(),k.info.memory.textures++),U.activeTexture(U.TEXTURE0+b),U.bindTexture(U.TEXTURE_2D,a.__webglTexture),U.pixelStorei(U.UNPACK_FLIP_Y_WEBGL,a.flipY),U.pixelStorei(U.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),U.pixelStorei(U.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=Ob(c.width)&&Ob(c.height),e=Xb(a.format),f=Xb(a.type);Pb(U.TEXTURE_2D,a,d);var g,h=a.mipmaps;if(a instanceof THREE.DataTexture)if(h.length>0&&d){for(var i=0,j=h.length;i<j;i++)g=h[i],U.texImage2D(U.TEXTURE_2D,i,e,g.width,g.height,0,e,f,g.data);a.generateMipmaps=!1}else U.texImage2D(U.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture)for(var i=0,j=h.length;i<j;i++)g=h[i],U.compressedTexImage2D(U.TEXTURE_2D,i,e,g.width,g.height,0,g.data);else if(h.length>0&&d){for(var i=0,j=h.length;i<j;i++)g=h[i],U.texImage2D(U.TEXTURE_2D,i,e,e,f,g);a.generateMipmaps=!1}else U.texImage2D(U.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&U.generateMipmap(U.TEXTURE_2D),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else U.activeTexture(U.TEXTURE0+b),U.bindTexture(U.TEXTURE_2D,a.__webglTexture)},this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0),void 0===a.stencilBuffer&&(a.stencilBuffer=!0),a.addEventListener("dispose",za),a.__webglTexture=U.createTexture(),k.info.memory.textures++;var c=Ob(a.width)&&Ob(a.height),d=Xb(a.format),e=Xb(a.type);if(b){a.__webglFramebuffer=[],a.__webglRenderbuffer=[],U.bindTexture(U.TEXTURE_CUBE_MAP,a.__webglTexture),Pb(U.TEXTURE_CUBE_MAP,a,c);for(var f=0;f<6;f++)a.__webglFramebuffer[f]=U.createFramebuffer(),a.__webglRenderbuffer[f]=U.createRenderbuffer(),U.texImage2D(U.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null),Tb(a.__webglFramebuffer[f],a,U.TEXTURE_CUBE_MAP_POSITIVE_X+f),Ub(a.__webglRenderbuffer[f],a);c&&U.generateMipmap(U.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=U.createFramebuffer(),a.shareDepthFrom?a.__webglRenderbuffer=a.shareDepthFrom.__webglRenderbuffer:a.__webglRenderbuffer=U.createRenderbuffer(),U.bindTexture(U.TEXTURE_2D,a.__webglTexture),Pb(U.TEXTURE_2D,a,c),U.texImage2D(U.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),Tb(a.__webglFramebuffer,a,U.TEXTURE_2D),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?U.framebufferRenderbuffer(U.FRAMEBUFFER,U.DEPTH_ATTACHMENT,U.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&U.framebufferRenderbuffer(U.FRAMEBUFFER,U.DEPTH_STENCIL_ATTACHMENT,U.RENDERBUFFER,a.__webglRenderbuffer):Ub(a.__webglRenderbuffer,a),c&&U.generateMipmap(U.TEXTURE_2D);b?U.bindTexture(U.TEXTURE_CUBE_MAP,null):U.bindTexture(U.TEXTURE_2D,null),U.bindRenderbuffer(U.RENDERBUFFER,null),U.bindFramebuffer(U.FRAMEBUFFER,null)}var g,h,i,j,l;a?(g=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,h=a.width,i=a.height,j=0,l=0):(g=null,h=I,i=J,j=G,l=H),g!==o&&(U.bindFramebuffer(U.FRAMEBUFFER,g),U.viewport(j,l,h,i),o=g),K=h,L=i},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(a,b,c){this.width=a,this.height=b,c=c||{},this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter,this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==c.format?c.format:THREE.RGBAFormat,this.type=void 0!==c.type?c.type:THREE.UnsignedByteType,this.depthBuffer=void 0===c.depthBuffer||c.depthBuffer,this.stencilBuffer=void 0===c.stencilBuffer||c.stencilBuffer,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,addEventListener:THREE.EventDispatcher.prototype.addEventListener,hasEventListener:THREE.EventDispatcher.prototype.hasEventListener,removeEventListener:THREE.EventDispatcher.prototype.removeEventListener,dispatchEvent:THREE.EventDispatcher.prototype.dispatchEvent,clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);return a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.anisotropy=this.anisotropy,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.format=this.format,a.type=this.type,a.depthBuffer=this.depthBuffer,a.stencilBuffer=this.stencilBuffer,a.generateMipmaps=this.generateMipmaps,a.shareDepthFrom=this.shareDepthFrom,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld),this.positionScreen.copy(a.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.object=null,this.z=null},THREE.RenderableParticle=function(){this.object=null,this.x=null,this.y=null,this.z=null,this.rotation=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null},THREE.GeometryUtils={merge:function(a,b,c){var d,e,f=a.vertices.length,h=(a.faceVertexUvs[0].length,b instanceof THREE.Mesh?b.geometry:b),i=a.vertices,j=h.vertices,k=a.faces,l=h.faces,m=a.faceVertexUvs[0],n=h.faceVertexUvs[0];void 0===c&&(c=0),b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,e=(new THREE.Matrix3).getNormalMatrix(d));for(var o=0,p=j.length;o<p;o++){var q=j[o],r=q.clone();d&&r.applyMatrix4(d),i.push(r)}for(o=0,p=l.length;o<p;o++){var t,u,v,s=l[o],w=s.vertexNormals,x=s.vertexColors;s instanceof THREE.Face3?t=new THREE.Face3(s.a+f,s.b+f,s.c+f):s instanceof THREE.Face4&&(t=new THREE.Face4(s.a+f,s.b+f,s.c+f,s.d+f)),t.normal.copy(s.normal),e&&t.normal.applyMatrix3(e).normalize();for(var y=0,z=w.length;y<z;y++)u=w[y].clone(),e&&u.applyMatrix3(e).normalize(),t.vertexNormals.push(u);t.color.copy(s.color);for(var y=0,z=x.length;y<z;y++)v=x[y],t.vertexColors.push(v.clone());t.materialIndex=s.materialIndex+c,t.centroid.copy(s.centroid),d&&t.centroid.applyMatrix4(d),k.push(t)}for(o=0,p=n.length;o<p;o++){for(var A=n[o],B=[],y=0,z=A.length;y<z;y++)B.push(new THREE.Vector2(A[y].x,A[y].y));m.push(B)}},removeMaterials:function(a,b){for(var c={},d=0,e=b.length;d<e;d++)c[b[d]]=!0;for(var f,g=[],d=0,e=a.faces.length;d<e;d++)f=a.faces[d],f.materialIndex in c||g.push(f);a.faces=g},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;return d=THREE.GeometryUtils.random(),e=THREE.GeometryUtils.random(),d+e>1&&(d=1-d,e=1-e),f=1-d-e,g.copy(a),g.multiplyScalar(d),h.copy(b),h.multiplyScalar(e),g.add(h),h.copy(c),h.multiplyScalar(f),g.add(h),g},randomPointInFace:function(a,b,c){var d,e,f,g;if(a instanceof THREE.Face3)return d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],g=b.vertices[a.d];var h,i;c?a._area1&&a._area2?(h=a._area1,i=a._area2):(h=THREE.GeometryUtils.triangleArea(d,e,g),i=THREE.GeometryUtils.triangleArea(e,f,g),a._area1=h,a._area2=i):(h=THREE.GeometryUtils.triangleArea(d,e,g),i=THREE.GeometryUtils.triangleArea(e,f,g));var j=THREE.GeometryUtils.random()*(h+i);return j<h?THREE.GeometryUtils.randomPointInTriangle(d,e,g):THREE.GeometryUtils.randomPointInTriangle(e,f,g)}},randomPointsInGeometry:function(a,b){function n(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return i[e]>a?b(c,e-1):i[e]<a?b(e+1,d):e}var c=b(0,i.length-1);return c}var c,d,j,k,l,m,e=a.faces,f=a.vertices,g=e.length,h=0,i=[];for(d=0;d<g;d++)c=e[d],c instanceof THREE.Face3?(j=f[c.a],k=f[c.b],l=f[c.c],c._area=THREE.GeometryUtils.triangleArea(j,k,l)):c instanceof THREE.Face4&&(j=f[c.a],k=f[c.b],l=f[c.c],m=f[c.d],c._area1=THREE.GeometryUtils.triangleArea(j,k,m),c._area2=THREE.GeometryUtils.triangleArea(k,l,m),c._area=c._area1+c._area2),h+=c._area,i[d]=h;var o,p,q=[],r={};for(d=0;d<b;d++)o=THREE.GeometryUtils.random()*h,p=n(o),q[d]=THREE.GeometryUtils.randomPointInFace(e[p],a,!0),r[p]?r[p]+=1:r[p]=1;return q},triangleArea:function(a,b,c){var d=THREE.GeometryUtils.__v1,e=THREE.GeometryUtils.__v2;return d.subVectors(b,a),e.subVectors(c,a),d.cross(e),.5*d.length()},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;return c.addVectors(b.min,b.max),c.multiplyScalar(-.5),a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z)),a.computeBoundingBox(),c},normalizeUVs:function(a){for(var b=a.faceVertexUvs[0],c=0,d=b.length;c<d;c++)for(var e=b[c],f=0,g=e.length;f<g;f++)1!==e[f].x&&(e[f].x=e[f].x-Math.floor(e[f].x)),1!==e[f].y&&(e[f].y=e[f].y-Math.floor(e[f].y))},triangulateQuads:function(a){var b,c,d,e,f=[],g=[],h=[];for(b=0,c=a.faceUvs.length;b<c;b++)g[b]=[];for(b=0,c=a.faceVertexUvs.length;b<c;b++)h[b]=[];for(b=0,c=a.faces.length;b<c;b++){var i=a.faces[b];if(i instanceof THREE.Face4){var j=i.a,k=i.b,l=i.c,m=i.d,n=new THREE.Face3,o=new THREE.Face3;for(n.color.copy(i.color),o.color.copy(i.color),n.materialIndex=i.materialIndex,o.materialIndex=i.materialIndex,n.a=j,n.b=k,n.c=m,o.a=k,o.b=l,o.c=m,4===i.vertexColors.length&&(n.vertexColors[0]=i.vertexColors[0].clone(),n.vertexColors[1]=i.vertexColors[1].clone(),n.vertexColors[2]=i.vertexColors[3].clone(),o.vertexColors[0]=i.vertexColors[1].clone(),o.vertexColors[1]=i.vertexColors[2].clone(),o.vertexColors[2]=i.vertexColors[3].clone()),f.push(n,o),d=0,e=a.faceVertexUvs.length;d<e;d++)if(a.faceVertexUvs[d].length){var p=a.faceVertexUvs[d][b],q=p[0],r=p[1],s=p[2],t=p[3],u=[q.clone(),r.clone(),t.clone()],v=[r.clone(),s.clone(),t.clone()];h[d].push(u,v)}for(d=0,e=a.faceUvs.length;d<e;d++)if(a.faceUvs[d].length){var w=a.faceUvs[d][b];g[d].push(w,w)}}else{for(f.push(i),d=0,e=a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d][b]);for(d=0,e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d][b])}}a.faces=f,a.faceUvs=g,a.faceVertexUvs=h,a.computeCentroids(),a.computeFaceNormals(),a.computeVertexNormals(),a.hasTangents&&a.computeTangents()},setMaterialIndex:function(a,b,c,d){for(var e=a.faces,f=c||0,g=d||e.length-1,h=f;h<=g;h++)e[h].materialIndex=b}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.GeometryUtils.__v2=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var e=new Image,f=new THREE.Texture(e,b),g=new THREE.ImageLoader;return g.addEventListener("load",function(a){f.image=a.content,f.needsUpdate=!0,c&&c(f)}),g.addEventListener("error",function(a){d&&d(a.message)}),g.crossOrigin=this.crossOrigin,g.load(a,e),f.sourceFile=a,f},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;return f.onload=function(){var a=f.response,b=THREE.ImageUtils.parseDDS(a,!0);e.format=b.format,e.mipmaps=b.mipmaps,e.image.width=b.width,e.image.height=b.height,e.generateMipmaps=!1,e.needsUpdate=!0,c&&c(e)},f.onerror=d,f.open("GET",a,!0),f.responseType="arraybuffer",f.send(null),e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e,void 0!==b&&(f.mapping=b),f.flipY=!1;for(var g=0,h=a.length;g<h;++g){var i=new Image;e[g]=i,i.onload=function(){e.loadCount+=1,6===e.loadCount&&(f.needsUpdate=!0,c&&c(f))},i.onerror=d,i.crossOrigin=this.crossOrigin,i.src=a[g]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e,void 0!==b&&(f.mapping=b),f.flipY=!1,f.generateMipmaps=!1;var g=function(a,b){return function(){var d=a.response,g=THREE.ImageUtils.parseDDS(d,!0);b.format=g.format,b.mipmaps=g.mipmaps,b.width=g.width,b.height=g.height,e.loadCount+=1,6===e.loadCount&&(f.format=g.format,f.needsUpdate=!0,c&&c(f))}};if(a instanceof Array)for(var h=0,i=a.length;h<i;++h){var j={};e[h]=j;var k=new XMLHttpRequest;k.onload=g(k,j),k.onerror=d;var l=a[h];k.open("GET",l,!0),k.responseType="arraybuffer",k.send(null)}else{var l=a,k=new XMLHttpRequest;k.onload=function(){var a=k.response,b=THREE.ImageUtils.parseDDS(a,!0);if(b.isCubemap){for(var d=b.mipmaps.length/b.mipmapCount,g=0;g<d;g++){e[g]={mipmaps:[]};for(var h=0;h<b.mipmapCount;h++)e[g].mipmaps.push(b.mipmaps[g*b.mipmapCount+h]),e[g].format=b.format,e[g].width=b.width,e[g].height=b.height}f.format=b.format,f.needsUpdate=!0,c&&c(f)}},k.onerror=d,k.open("GET",l,!0),k.responseType="arraybuffer",k.send(null)}return f},parseDDS:function(a,b){function D(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}function E(a){return String.fromCharCode(255&a,a>>8&255,a>>16&255,a>>24&255)}var c={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},d=542327876,j=131072,p=512,z=4,F=D("DXT1"),G=D("DXT3"),H=D("DXT5"),I=31,J=0,K=1,L=2,M=3,N=4,O=7,P=20,Q=21,S=28,V=new Int32Array(a,0,I);if(V[J]!==d)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),c;if(!V[P]&z)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),c;var W,X=V[Q];switch(X){case F:W=8,c.format=THREE.RGB_S3TC_DXT1_Format;break;case G:W=16,c.format=THREE.RGBA_S3TC_DXT3_Format;break;case H:W=16,c.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",E(X)),c}c.mipmapCount=1,V[L]&j&&b!==!1&&(c.mipmapCount=Math.max(1,V[O])),c.isCubemap=!!(V[S]&p),c.width=V[N],c.height=V[M];for(var Y=V[K]+4,Z=c.width,$=c.height,_=c.isCubemap?6:1,aa=0;aa<_;aa++){for(var ba=0;ba<c.mipmapCount;ba++){var ca=Math.max(4,Z)/4*Math.max(4,$)/4*W,da=new Uint8Array(a,Y,ca),ea={data:da,width:Z,height:$};c.mipmaps.push(ea),Y+=ca,Z=Math.max(.5*Z,1),$=Math.max(.5*$,1)}Z=c.width,$=c.height}return c},getNormalMap:function(a,b){var c=function(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]},d=function(a,b){return[a[0]-b[0],a[1]-b[1],a[2]-b[2]]},e=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b=1|b;var f=a.width,g=a.height,h=document.createElement("canvas");h.width=f,h.height=g;var i=h.getContext("2d");i.drawImage(a,0,0);for(var j=i.getImageData(0,0,f,g).data,k=i.createImageData(f,g),l=k.data,m=0;m<f;m++)for(var n=0;n<g;n++){var o=n-1<0?0:n-1,p=n+1>g-1?g-1:n+1,q=m-1<0?0:m-1,r=m+1>f-1?f-1:m+1,s=[],t=[0,0,j[4*(n*f+m)]/255*b];s.push([-1,0,j[4*(n*f+q)]/255*b]),s.push([-1,-1,j[4*(o*f+q)]/255*b]),s.push([0,-1,j[4*(o*f+m)]/255*b]),s.push([1,-1,j[4*(o*f+r)]/255*b]),s.push([1,0,j[4*(n*f+r)]/255*b]),s.push([1,1,j[4*(p*f+r)]/255*b]),s.push([0,1,j[4*(p*f+m)]/255*b]),s.push([-1,1,j[4*(p*f+q)]/255*b]);for(var u=[],v=s.length,w=0;w<v;w++){var x=s[w],y=s[(w+1)%v];x=d(x,t),y=d(y,t),u.push(e(c(x,y)))}for(var z=[0,0,0],w=0;w<u.length;w++)z[0]+=u[w][0],z[1]+=u[w][1],z[2]+=u[w][2];z[0]/=u.length,z[1]/=u.length,z[2]/=u.length;var A=4*(n*f+m);l[A]=(z[0]+1)/2*255|0,l[A+1]=(z[1]+1)/2*255|0,l[A+2]=255*z[2]|0,l[A+3]=255}return i.putImageData(k,0,0),h},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g),h=Math.floor(255*c.b),i=0;i<d;i++)e[3*i]=f,e[3*i+1]=g,e[3*i+2]=h;var j=new THREE.DataTexture(e,a,b,THREE.RGBFormat);return j.needsUpdate=!0,j}},THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld),b.remove(a),c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld),a.applyMatrix(d),b.remove(a),c.add(a)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase(),c=this;c.faces[b]=c.faces[b]||{},c.faces[b][a.cssFontWeight]=c.faces[b][a.cssFontWeight]||{},c.faces[b][a.cssFontWeight][a.cssFontStyle]=a;c.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return a},drawText:function(a){var d,f=this.getFace(),g=this.size/f.resolution,h=0,i=String(a).split(""),j=i.length,k=[];for(d=0;d<j;d++){var l=new THREE.Path,m=this.extractGlyphPoints(i[d],f,g,h,l);h+=m.offset,k.push(m.path)}var n=h/2;return{paths:k,offset:n}},extractGlyphPoints:function(a,b,c,d,e){var g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,f=[],z=b.glyphs[a]||b.glyphs["?"];if(z){if(z.o)for(j=z._cachedOutline||(z._cachedOutline=z.o.split(" ")),l=j.length,m=c,n=c,g=0;g<l;)switch(k=j[g++]){case"m":o=j[g++]*m+d,p=j[g++]*n,e.moveTo(o,p);break;case"l":o=j[g++]*m+d,p=j[g++]*n,e.lineTo(o,p);break;case"q":if(q=j[g++]*m+d,r=j[g++]*n,u=j[g++]*m+d,v=j[g++]*n,e.quadraticCurveTo(u,v,q,r),y=f[f.length-1])for(s=y.x,t=y.y,h=1,i=this.divisions;h<=i;h++){var A=h/i;THREE.Shape.Utils.b2(A,s,u,q),THREE.Shape.Utils.b2(A,t,v,r)}break;case"b":if(q=j[g++]*m+d,r=j[g++]*n,u=j[g++]*m+d,v=j[g++]*-n,w=j[g++]*m+d,x=j[g++]*-n,e.bezierCurveTo(q,r,u,v,w,x),y=f[f.length-1])for(s=y.x,t=y.y,h=1,i=this.divisions;h<=i;h++){var A=h/i;THREE.Shape.Utils.b3(A,s,u,w,q),THREE.Shape.Utils.b3(A,t,v,x,r)}}return{offset:z.ha*c,path:e}}}},THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.size?b.size:100,d=void 0!==b.curveSegments?b.curveSegments:4,e=void 0!==b.font?b.font:"helvetiker",f=void 0!==b.weight?b.weight:"normal",g=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=c,THREE.FontUtils.divisions=d,THREE.FontUtils.face=e,THREE.FontUtils.weight=f,THREE.FontUtils.style=g;for(var h=THREE.FontUtils.drawText(a),i=h.paths,j=[],k=0,l=i.length;k<l;k++)Array.prototype.push.apply(j,i[k].toShapes());return j},function(a){var b=1e-10,c=function(a,b){var c=a.length;if(c<3)return null;var i,j,k,f=[],g=[],h=[];if(d(a)>0)for(j=0;j<c;j++)g[j]=j;else for(j=0;j<c;j++)g[j]=c-1-j;var l=c,m=2*l;for(j=l-1;l>2;){if(m--<=0)return console.log("Warning, unable to triangulate polygon!"),b?h:f;if(i=j,l<=i&&(i=0),j=i+1,l<=j&&(j=0),k=j+1,l<=k&&(k=0),e(a,i,j,k,l,g)){var n,o,p,q,r;for(n=g[i],o=g[j],p=g[k],f.push([a[n],a[o],a[p]]),h.push([g[i],g[j],g[k]]),q=j,r=j+1;r<l;q++,r++)g[q]=g[r];l--,m=2*l}}return b?h:f},d=function(a){for(var b=a.length,c=0,d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},e=function(a,c,d,e,f,g){var h,i,j,k,l,m,n,o,p;if(i=a[g[c]].x,j=a[g[c]].y,k=a[g[d]].x,l=a[g[d]].y,m=a[g[e]].x,n=a[g[e]].y,b>(k-i)*(n-j)-(l-j)*(m-i))return!1;var q,r,s,t,u,v,w,x,y,z,A,B,C,D,E;for(q=m-k,r=n-l,s=i-m,t=j-n,u=k-i,v=l-j,h=0;h<f;h++)if(h!==c&&h!==d&&h!==e&&(o=a[g[h]].x,p=a[g[h]].y,w=o-i,x=p-j,y=o-k,z=p-l,A=o-m,B=p-n,E=q*z-r*y,C=u*x-v*w,D=s*B-t*A,E>=0&&D>=0&&C>=0))return!1;return!0};return a.Triangulate=c,a.Triangulate.area=d,a}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(a){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(a){var b=this.getUtoTmapping(a);return this.getPoint(b)},THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c},THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];
for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c},THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]},THREE.Curve.prototype.getLengths=function(a){if(a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var c,e,b=[],d=this.getPoint(0),f=0;for(b.push(0),e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b,b},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(a,b){var f,c=this.getLengths(),d=0,e=c.length;f=b?b:a*c[e-1];for(var i,g=0,h=e-1;g<=h;)if(d=Math.floor(g+(h-g)/2),i=c[d]-f,i<0)g=d+1;else{if(!(i>0)){h=d;break}h=d-1}if(d=h,c[d]==f){var j=d/(e-1);return j}var k=c[d],l=c[d+1],m=l-k,n=(f-k)/m,j=(d+n)/(e-1);return j},THREE.Curve.prototype.getTangent=function(a){var b=1e-4,c=a-b,d=a+b;c<0&&(c=0),d>1&&(d=1);var e=this.getPoint(c),f=this.getPoint(d),g=f.clone().sub(e);return g.normalize()},THREE.Curve.prototype.getTangentAt=function(a){var b=this.getUtoTmapping(a);return this.getTangent(b)},THREE.LineCurve=function(a,b){this.v1=a,this.v2=b},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);return b.multiplyScalar(a).add(this.v1),b},THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)},THREE.LineCurve.prototype.getTangent=function(a){var b=this.v2.clone().sub(this.v1);return b.normalize()},THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a,this.v1=b,this.v2=c},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b,c;return b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(b,c)},THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b,c;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x),c=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);var d=new THREE.Vector2(b,c);return d.normalize(),d},THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(a){var b,c;return b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(b,c)},THREE.CubicBezierCurve.prototype.getTangent=function(a){var b,c;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var d=new THREE.Vector2(b,c);return d.normalize(),d},THREE.SplineCurve=function(a){this.points=void 0==a?[]:a},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(a){var e,f,g,b=new THREE.Vector2,c=[],d=this.points;return e=(d.length-1)*a,f=Math.floor(e),g=e-f,c[0]=0==f?f:f-1,c[1]=f,c[2]=f>d.length-2?d.length-1:f+1,c[3]=f>d.length-3?d.length-1:f+2,b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,g),b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,g),b},THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);var c=this.aStartAngle+a*b,d=this.aX+this.xRadius*Math.cos(c),e=this.aY+this.yRadius*Math.sin(c);return new THREE.Vector2(d,e)},THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){var f=6*a*a-6*a,g=3*a*a-4*a+1,h=-6*a*a+6*a,i=3*a*a-2*a;return f+g+h+i},interpolate:function(a,b,c,d,e){var f=.5*(c-a),g=.5*(d-b),h=e*e,i=e*h;return(2*b-2*c+f+g)*i+(-3*b+3*c-2*f-g)*h+f*e+b}},THREE.Curve.create=function(a,b){return a.prototype=Object.create(THREE.Curve.prototype),a.prototype.getPoint=b,a},THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a,this.v2=b},function(a){var b=new THREE.Vector3;return b.subVectors(this.v2,this.v1),b.multiplyScalar(a),b.add(this.v1),b}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a,this.v1=b,this.v2=c},function(a){var b,c,d;return b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),d=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(b,c,d)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},function(a){var b,c,d;return b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),d=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(b,c,d)}),THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var e,f,g,b=new THREE.Vector3,c=[],d=this.points;e=(d.length-1)*a,f=Math.floor(e),g=e-f,c[0]=0==f?f:f-1,c[1]=f,c[2]=f>d.length-2?d.length-1:f+1,c[3]=f>d.length-3?d.length-1:f+2;var h=d[c[0]],i=d[c[1]],j=d[c[2]],k=d[c[3]];return b.x=THREE.Curve.Utils.interpolate(h.x,i.x,j.x,k.x,g),b.y=THREE.Curve.Utils.interpolate(h.y,i.y,j.y,k.y,g),b.z=THREE.Curve.Utils.interpolate(h.z,i.z,j.z,k.z,g),b}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var e,f,g,b=new THREE.Vector3,c=[],d=this.points;return e=(d.length-0)*a,f=Math.floor(e),g=e-f,f+=f>0?0:(Math.floor(Math.abs(f)/d.length)+1)*d.length,c[0]=(f-1)%d.length,c[1]=f%d.length,c[2]=(f+1)%d.length,c[3]=(f+2)%d.length,b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,g),b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,g),b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,d[c[1]].z,d[c[2]].z,d[c[3]].z,g),b}),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(a){this.curves.push(a)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))},THREE.CurvePath.prototype.getPoint=function(a){for(var e,f,b=a*this.getLength(),c=this.getCurveLengths(),d=0;d<c.length;){if(c[d]>=b){e=c[d]-b,f=this.curves[d];var g=1-e/f.getLength();return f.getPointAt(g)}d++}return null},THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var c,a=[],b=0,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a,a},THREE.CurvePath.prototype.getBoundingBox=function(){var b,c,d,e,f,g,a=this.getPoints();b=c=Number.NEGATIVE_INFINITY,e=f=Number.POSITIVE_INFINITY;var h,i,j,k,l=a[0]instanceof THREE.Vector3;for(k=l?new THREE.Vector3:new THREE.Vector2,i=0,j=a.length;i<j;i++)h=a[i],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),l&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),k.add(h);var m={minX:e,minY:f,maxX:b,maxY:c,centroid:k.divideScalar(j)};return l&&(m.maxZ=d,m.minZ=g),m},THREE.CurvePath.prototype.createPointsGeometry=function(a){var b=this.getPoints(a,!0);return this.createGeometry(b)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){var b=this.getSpacedPoints(a,!0);return this.createGeometry(b)},THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b},THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)},THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var d,e,c=this.getPoints(a);for(b||(b=this.bends),d=0,e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var d,e,c=this.getSpacedPoints(a);for(b||(b=this.bends),d=0,e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c},THREE.CurvePath.prototype.getWrapPoints=function(a,b){var d,e,f,g,h,i,c=this.getBoundingBox();for(d=0,e=a.length;d<e;d++){f=a[d],g=f.x,h=f.y,i=g/c.maxX,i=b.getUtoTmapping(i,g);var j=b.getPoint(i),k=b.getNormalVector(i).multiplyScalar(h);f.x=j.x+k.x,f.y=j.y+k.y}return a},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||a)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.makeFromPositionQuaternionScale(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(a){THREE.CurvePath.call(this),this.actions=[],a&&this.fromPoints(a)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)},THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})},THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,e=d[d.length-2],f=d[d.length-1],g=new THREE.LineCurve(new THREE.Vector2(e,f),new THREE.Vector2(a,b));this.curves.push(g),this.actions.push({action:THREE.PathActions.LINE_TO,args:c})},THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,g=f[f.length-2],h=f[f.length-1],i=new THREE.QuadraticBezierCurve(new THREE.Vector2(g,h),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(i),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})},THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,i=h[h.length-2],j=h[h.length-1],k=new THREE.CubicBezierCurve(new THREE.Vector2(i,j),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(k),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})},THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,d=c[c.length-2],e=c[c.length-1],f=[new THREE.Vector2(d,e)];Array.prototype.push.apply(f,a);var g=new THREE.SplineCurve(f);this.curves.push(g),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})},THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args,h=g[g.length-2],i=g[g.length-1];this.absarc(a+h,b+i,c,d,e,f)},THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)},THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args,i=h[h.length-2],j=h[h.length-1];this.absellipse(a+i,b+j,c,d,e,f,g)},THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(i);var j=i.getPoint(g?1:0);h.push(j.x),h.push(j.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})},THREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);for(var c=[],d=0;d<a;d++)c.push(this.getPoint(d/a));return c},THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,c=[];for(d=0,e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,h=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(h[0],h[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(h[0],h[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(i=h[2],j=h[3],m=h[0],n=h[1],c.length>0?(q=c[c.length-1],o=q.x,p=q.y):(q=this.actions[d-1].args,o=q[q.length-2],p=q[q.length-1]),r=1;r<=a;r++)s=r/a,t=THREE.Shape.Utils.b2(s,o,m,i),u=THREE.Shape.Utils.b2(s,p,n,j),c.push(new THREE.Vector2(t,u));break;case THREE.PathActions.BEZIER_CURVE_TO:for(i=h[4],j=h[5],m=h[0],n=h[1],k=h[2],l=h[3],c.length>0?(q=c[c.length-1],o=q.x,p=q.y):(q=this.actions[d-1].args,o=q[q.length-2],p=q[q.length-1]),r=1;r<=a;r++)s=r/a,t=THREE.Shape.Utils.b3(s,o,m,k,i),u=THREE.Shape.Utils.b3(s,p,n,l,j),c.push(new THREE.Vector2(t,u));break;case THREE.PathActions.CSPLINE_THRU:q=this.actions[d-1].args;var v=new THREE.Vector2(q[q.length-2],q[q.length-1]),w=[v],x=a*h[0].length;w=w.concat(h[0]);var y=new THREE.SplineCurve(w);for(r=1;r<=x;r++)c.push(y.getPointAt(r/x));break;case THREE.PathActions.ARC:var G,z=h[0],A=h[1],B=h[2],C=h[3],D=h[4],E=!!h[5],F=D-C,H=2*a;for(r=1;r<=H;r++)s=r/H,E||(s=1-s),G=C+s*F,t=z+B*Math.cos(G),u=A+B*Math.sin(G),c.push(new THREE.Vector2(t,u));break;case THREE.PathActions.ELLIPSE:var G,z=h[0],A=h[1],I=h[2],J=h[3],C=h[4],D=h[5],E=!!h[6],F=D-C,H=2*a;for(r=1;r<=H;r++)s=r/H,E||(s=1-s),G=C+s*F,t=z+I*Math.cos(G),u=A+J*Math.sin(G),c.push(new THREE.Vector2(t,u))}var K=c[c.length-1],L=1e-10;return Math.abs(K.x-c[0].x)<L&&Math.abs(K.y-c[0].y)<L&&c.splice(c.length-1,1),b&&c.push(c[0]),c},THREE.Path.prototype.toShapes=function(){var a,b,c,d,e,f=[],g=new THREE.Path;for(a=0,b=this.actions.length;a<b;a++)c=this.actions[a],e=c.args,d=c.action,d==THREE.PathActions.MOVE_TO&&0!=g.actions.length&&(f.push(g),g=new THREE.Path),g[d].apply(g,e);if(0!=g.actions.length&&f.push(g),0==f.length)return[];var h,i,j=[],k=!THREE.Shape.Utils.isClockWise(f[0].getPoints());if(1==f.length)return h=f[0],i=new THREE.Shape,i.actions=h.actions,i.curves=h.curves,j.push(i),j;if(k)for(i=new THREE.Shape,a=0,b=f.length;a<b;a++)h=f[a],THREE.Shape.Utils.isClockWise(h.getPoints())?(i.actions=h.actions,i.curves=h.curves,j.push(i),i=new THREE.Shape):i.holes.push(h);else{for(a=0,b=f.length;a<b;a++)h=f[a],THREE.Shape.Utils.isClockWise(h.getPoints())?(i&&j.push(i),i=new THREE.Shape,i.actions=h.actions,i.curves=h.curves):i.holes.push(h);j.push(i)}return j},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(a){var b=new THREE.ExtrudeGeometry(this,a);return b},THREE.Shape.prototype.makeGeometry=function(a){var b=new THREE.ShapeGeometry(this,a);return b},THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d},THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d},THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}},THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)},THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}},THREE.Shape.Utils={removeHoles:function(a,b){var e,g,i,j,m,n,o,p,q,r,s,t,u,v,w,x,c=a.concat(),d=c.concat(),y=[];for(m=0;m<b.length;m++){for(o=b[m],Array.prototype.push.apply(d,o),p=Number.POSITIVE_INFINITY,n=0;n<o.length;n++){s=o[n];var z=[];for(r=0;r<c.length;r++)t=c[r],q=s.distanceToSquared(t),z.push(q),q<p&&(p=q,i=n,j=r)}e=j-1>=0?j-1:c.length-1,g=i-1>=0?i-1:o.length-1;var A=[o[i],c[j],c[e]],B=THREE.FontUtils.Triangulate.area(A),C=[o[i],o[g],c[j]],D=THREE.FontUtils.Triangulate.area(C),E=1,F=-1,G=j,H=i;j+=E,i+=F,j<0&&(j+=c.length),j%=c.length,i<0&&(i+=o.length),i%=o.length,e=j-1>=0?j-1:c.length-1,g=i-1>=0?i-1:o.length-1,A=[o[i],c[j],c[e]];var I=THREE.FontUtils.Triangulate.area(A);C=[o[i],o[g],c[j]];var J=THREE.FontUtils.Triangulate.area(C);B+D>I+J&&(j=G,i=H,j<0&&(j+=c.length),j%=c.length,i<0&&(i+=o.length),i%=o.length,e=j-1>=0?j-1:c.length-1,g=i-1>=0?i-1:o.length-1),u=c.slice(0,j),v=c.slice(j),w=o.slice(i),x=o.slice(0,i);var K=[o[i],c[j],c[e]],L=[o[i],o[g],c[j]];y.push(K),y.push(L),c=u.concat(w).concat(x).concat(v)}return{shape:c,isolatedPts:y,allpoints:d}},triangulateShape:function(a,b){var h,i,j,k,l,m,c=THREE.Shape.Utils.removeHoles(a,b),d=c.shape,e=c.allpoints,f=c.isolatedPts,g=THREE.FontUtils.Triangulate(d,!1),n={};for(h=0,i=e.length;h<i;h++)l=e[h].x+":"+e[h].y,void 0!==n[l]&&console.log("Duplicate point",l),n[l]=h;for(h=0,i=g.length;h<i;h++)for(k=g[h],j=0;j<3;j++)l=k[j].x+":"+k[j].y,m=n[l],void 0!==m&&(k[j]=m);for(h=0,i=f.length;h<i;h++)for(k=f[h],j=0;j<3;j++)l=k[j].x+":"+k[j].y,m=n[l],void 0!==m&&(k[j]=m);return g.concat(f)},isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){var c=1-a;return 3*c*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}},THREE.AnimationHandler=function(){var a=[],b={},c={};c.update=function(b){for(var c=0;c<a.length;c++)a[c].update(b)},c.addToUpdate=function(b){a.indexOf(b)===-1&&a.push(b)},c.removeFromUpdate=function(b){var c=a.indexOf(b);c!==-1&&a.splice(c,1)},c.add=function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting."),b[a.name]=a,e(a)},c.get=function(a){if("string"==typeof a)return b[a]?b[a]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+a),null)},c.parse=function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b};var d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)},e=function(a){if(a.initialized!==!0){for(var b=0;b<a.hierarchy.length;b++){for(var c=0;c<a.hierarchy[b].keys.length;c++)if(a.hierarchy[b].keys[c].time<0&&(a.hierarchy[b].keys[c].time=0),void 0!==a.hierarchy[b].keys[c].rot&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=new THREE.Quaternion(d[0],d[1],d[2],d[3])}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){for(var e={},c=0;c<a.hierarchy[b].keys.length;c++)for(var f=0;f<a.hierarchy[b].keys[c].morphTargets.length;f++){var g=a.hierarchy[b].keys[c].morphTargets[f];e[g]=-1}a.hierarchy[b].usedMorphTargets=e;for(var c=0;c<a.hierarchy[b].keys.length;c++){var h={};for(var g in e){for(var f=0;f<a.hierarchy[b].keys[c].morphTargets.length;f++)if(a.hierarchy[b].keys[c].morphTargets[f]===g){h[g]=a.hierarchy[b].keys[c].morphTargetsInfluences[f];break}f===a.hierarchy[b].keys[c].morphTargets.length&&(h[g]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=h}}for(var c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(var c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}var i=parseInt(a.length*a.fps,10);a.JIT={},a.JIT.hierarchy=[];for(var b=0;b<a.hierarchy.length;b++)a.JIT.hierarchy.push(new Array(i));a.initialized=!0}};return c.LINEAR=0,c.CATMULLROM=1,c.CATMULLROM_FORWARD=2,c}(),THREE.Animation=function(a,b,c){this.root=a,this.data=THREE.AnimationHandler.get(b),this.hierarchy=THREE.AnimationHandler.parse(a),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(a,b){if(this.isPlaying===!1){this.isPlaying=!0,this.loop=void 0===a||a,this.currentTime=void 0!==b?b:0;var c,e,d=this.hierarchy.length;for(c=0;c<d;c++){e=this.hierarchy[c],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(e.useQuaternion=!0),e.matrixAutoUpdate=!0,void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:e.matrix);var f=e.animationCache.prevKey,g=e.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0],f.rot=this.data.hierarchy[c].keys[0],f.scl=this.data.hierarchy[c].keys[0],g.pos=this.getNextKeyWith("pos",c,1),g.rot=this.getNextKeyWith("rot",c,1),g.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){this.isPaused===!0?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(a){if(this.isPlaying!==!1){var c,d,e,f,g,h,i,j,k,l,n,o,p,q,r,b=["pos","rot","scl"];this.data.JIT.hierarchy;this.currentTime+=a*this.timeScale,o=this.currentTime,n=this.currentTime=this.currentTime%this.data.length,l=parseInt(Math.min(n*this.data.fps,this.data.length*this.data.fps),10);for(var s=0,t=this.hierarchy.length;s<t;s++){j=this.hierarchy[s],k=j.animationCache;for(var u=0;u<3;u++){if(c=b[u],h=k.prevKey[c],i=k.nextKey[c],i.time<=o){if(n<o){if(!this.loop)return void this.stop();for(h=this.data.hierarchy[s].keys[0],i=this.getNextKeyWith(c,s,1);i.time<n;)h=i,i=this.getNextKeyWith(c,s,i.index+1)}else do h=i,i=this.getNextKeyWith(c,s,i.index+1);while(i.time<n);k.prevKey[c]=h,k.nextKey[c]=i}j.matrixAutoUpdate=!0,j.matrixWorldNeedsUpdate=!0,d=(n-h.time)/(i.time-h.time),f=h[c],g=i[c],(d<0||d>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+s),d=d<0?0:1),"pos"===c?(e=j.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(e.x=f[0]+(g[0]-f[0])*d,e.y=f[1]+(g[1]-f[1])*d,e.z=f[2]+(g[2]-f[2])*d):this.interpolationType!==THREE.AnimationHandler.CATMULLROM&&this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD||(this.points[0]=this.getPrevKeyWith("pos",s,h.index-1).pos,this.points[1]=f,this.points[2]=g,this.points[3]=this.getNextKeyWith("pos",s,i.index+1).pos,d=.33*d+.33,p=this.interpolateCatmullRom(this.points,d),e.x=p[0],e.y=p[1],e.z=p[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(q=this.interpolateCatmullRom(this.points,1.01*d),this.target.set(q[0],q[1],q[2]),this.target.sub(e),this.target.y=0,this.target.normalize(),r=Math.atan2(this.target.x,this.target.z),j.rotation.set(0,r,0)))):"rot"===c?THREE.Quaternion.slerp(f,g,j.quaternion,d):"scl"===c&&(e=j.scale,e.x=f[0]+(g[0]-f[0])*d,e.y=f[1]+(g[1]-f[1])*d,e.z=f[2]+(g[2]-f[2])*d)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var e,f,g,h,i,j,k,l,m,c=[],d=[];return e=(a.length-1)*b,f=Math.floor(e),g=e-f,c[0]=0===f?f:f-1,c[1]=f,c[2]=f>a.length-2?f:f+1,c[3]=f>a.length-3?f:f+2,j=a[c[0]],k=a[c[1]],l=a[c[2]],m=a[c[3]],h=g*g,i=g*h,d[0]=this.interpolate(j[0],k[0],l[0],m[0],g,h,i),d[1]=this.interpolate(j[1],k[1],l[1],m[1],g,h,i),d[2]=this.interpolate(j[2],k[2],l[2],m[2],g,h,i),d},THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){var h=.5*(c-a),i=.5*(d-b);return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b},THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c=c<d.length-1?c:d.length-1:c%=d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c>0?c:0:c>=0?c:c+d.length;c>=0;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]},THREE.KeyFrameAnimation=function(a,b,c){this.root=a,this.data=THREE.AnimationHandler.get(b),this.hierarchy=THREE.AnimationHandler.parse(a),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.JITCompile=void 0===c||c;for(var d=0,e=this.hierarchy.length;d<e;d++){var f=this.data.hierarchy[d].keys,g=this.data.hierarchy[d].sids,h=this.hierarchy[d];if(f.length&&g){for(var i=0;i<g.length;i++){var j=g[i],k=this.getNextKeyWith(j,d,0);k&&k.apply(j)}h.matrixAutoUpdate=!1,this.data.hierarchy[d].node.updateMatrix(),h.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0===a||a,this.currentTime=void 0!==b?b:0,this.startTimeMs=b,this.startTime=1e7,this.endTime=-this.startTime;var c,e,f,d=this.hierarchy.length;for(c=0;c<d;c++){e=this.hierarchy[c],f=this.data.hierarchy[c],e.useQuaternion=!0,void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey=null,f.animationCache.nextKey=null,f.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:e.matrix);var g=this.data.hierarchy[c].keys;g.length&&(f.animationCache.prevKey=g[0],f.animationCache.nextKey=g[1],this.startTime=Math.min(g[0].time,this.startTime),this.endTime=Math.max(g[g.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d),delete c.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f,h,i,j,g=this.data.JIT.hierarchy;if(this.currentTime+=a*this.timeScale,i=this.currentTime,h=this.currentTime=this.currentTime%this.data.length,h<this.startTimeMs&&(h=this.currentTime=this.startTimeMs+h),f=parseInt(Math.min(h*this.data.fps,this.data.length*this.data.fps),10),j=h<i,j&&!this.loop){for(var k=0,l=this.hierarchy.length;k<l;k++){var m=this.data.hierarchy[k].keys,n=this.data.hierarchy[k].sids,o=m.length-1,p=this.hierarchy[k];if(m.length){for(var q=0;q<n.length;q++){var r=n[q],s=this.getPrevKeyWith(r,k,o);s&&s.apply(r)}this.data.hierarchy[k].node.updateMatrix(),p.matrixWorldNeedsUpdate=!0}}return void this.stop()}if(!(h<this.startTime)){for(var k=0,l=this.hierarchy.length;k<l;k++){d=this.hierarchy[k],e=this.data.hierarchy[k];var m=e.keys,t=e.animationCache;if(this.JITCompile&&void 0!==g[k][f])d instanceof THREE.Bone?(d.skinMatrix=g[k][f],d.matrixWorldNeedsUpdate=!1):(d.matrix=g[k][f],d.matrixWorldNeedsUpdate=!0);else if(m.length){if(this.JITCompile&&t&&(d instanceof THREE.Bone?d.skinMatrix=t.originalMatrix:d.matrix=t.originalMatrix),b=t.prevKey,c=t.nextKey,b&&c){if(c.time<=i){if(j&&this.loop)for(b=m[0],c=m[1];c.time<h;)b=c,c=m[b.index+1];else if(!j)for(var u=m.length-1;c.time<h&&c.index!==u;)b=c,c=m[b.index+1];t.prevKey=b,t.nextKey=c}c.time>=h?b.interpolate(c,h):b.interpolate(c,c.time)}this.data.hierarchy[k].node.updateMatrix(),d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===g[0][f]){this.hierarchy[0].updateMatrixWorld(!0);for(var k=0;k<this.hierarchy.length;k++)this.hierarchy[k]instanceof THREE.Bone?g[k][f]=this.hierarchy[k].skinMatrix.clone():g[k][f]=this.hierarchy[k].matrix.clone()}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c%=d.length;c<d.length;c++)if(d[c].hasTarget(a))return d[c];return d[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=c>=0?c:c+d.length;c>=0;c--)if(d[c].hasTarget(a))return d[c];return d[d.length-1]},THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=90,e=1,f=new THREE.PerspectiveCamera(d,e,a,b);f.up.set(0,-1,0),f.lookAt(new THREE.Vector3(1,0,0)),this.add(f);var g=new THREE.PerspectiveCamera(d,e,a,b);g.up.set(0,-1,0),g.lookAt(new THREE.Vector3(-1,0,0)),this.add(g);var h=new THREE.PerspectiveCamera(d,e,a,b);h.up.set(0,0,1),h.lookAt(new THREE.Vector3(0,1,0)),this.add(h);var i=new THREE.PerspectiveCamera(d,e,a,b);i.up.set(0,0,-1),i.lookAt(new THREE.Vector3(0,-1,0)),this.add(i);var j=new THREE.PerspectiveCamera(d,e,a,b);j.up.set(0,-1,0),j.lookAt(new THREE.Vector3(0,0,1)),this.add(j);var k=new THREE.PerspectiveCamera(d,e,a,b);k.up.set(0,-1,0),k.lookAt(new THREE.Vector3(0,0,-1)),this.add(k),this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(a,b){var c=this.renderTarget,d=c.generateMipmaps;c.generateMipmaps=!1,c.activeCubeFace=0,a.render(b,f,c),c.activeCubeFace=1,a.render(b,g,c),c.activeCubeFace=2,a.render(b,h,c),c.activeCubeFace=3,a.render(b,i,c),c.activeCubeFace=4,a.render(b,j,c),c.generateMipmaps=d,c.activeCubeFace=5,a.render(b,k,c)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this),this.fov=c,this.left=-a/2,this.right=a/2,this.top=b/2,this.bottom=-b/2,this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g),this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.fov,b=this.cameraP.aspect,c=this.cameraP.near,d=this.cameraP.far,e=(c+d)/2,f=Math.tan(a/2)*e,g=2*f,h=g*b,i=h/2;f/=this.zoom,i/=this.zoom,this.cameraO.left=-i,this.cameraO.right=i,this.cameraO.top=f,this.cameraO.bottom=-f,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,
this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b,this.left=-a/2,this.right=a/2,this.top=b/2,this.bottom=-b/2},THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));return this.setFov(c),c},THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this),a=a||50,c=void 0!==c?c:0,d=void 0!==d?d:2*Math.PI,b=void 0!==b?Math.max(3,b):8;var e,f=[],g=new THREE.Vector3,h=new THREE.Vector2(.5,.5);for(this.vertices.push(g),f.push(h),e=0;e<=b;e++){var i=new THREE.Vector3,j=c+e/b*d;i.x=a*Math.cos(j),i.y=a*Math.sin(j),this.vertices.push(i),f.push(new THREE.Vector2((i.x/a+1)/2,(i.y/a+1)/2))}var k=new THREE.Vector3(0,0,1);for(e=1;e<=b;e++){var l=e,m=e+1,n=0;this.faces.push(new THREE.Face3(l,m,n,[k,k,k])),this.faceVertexUvs[0].push([f[e],f[e+1],h])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(a,b,c,d,e,f){function k(a,b,c,d,e,f,h,i){var j,k,l,m=g.widthSegments,n=g.heightSegments,o=e/2,p=f/2,q=g.vertices.length;"x"===a&&"y"===b||"y"===a&&"x"===b?j="z":"x"===a&&"z"===b||"z"===a&&"x"===b?(j="y",n=g.depthSegments):("z"===a&&"y"===b||"y"===a&&"z"===b)&&(j="x",m=g.depthSegments);var r=m+1,s=n+1,t=e/m,u=f/n,v=new THREE.Vector3;for(v[j]=h>0?1:-1,l=0;l<s;l++)for(k=0;k<r;k++){var w=new THREE.Vector3;w[a]=(k*t-o)*c,w[b]=(l*u-p)*d,w[j]=h,g.vertices.push(w)}for(l=0;l<n;l++)for(k=0;k<m;k++){var x=k+r*l,y=k+r*(l+1),z=k+1+r*(l+1),A=k+1+r*l,B=new THREE.Face4(x+q,y+q,z+q,A+q);B.normal.copy(v),B.vertexNormals.push(v.clone(),v.clone(),v.clone(),v.clone()),B.materialIndex=i,g.faces.push(B),g.faceVertexUvs[0].push([new THREE.Vector2(k/m,1-l/n),new THREE.Vector2(k/m,1-(l+1)/n),new THREE.Vector2((k+1)/m,1-(l+1)/n),new THREE.Vector2((k+1)/m,1-l/n)])}}THREE.Geometry.call(this);var g=this;this.width=a,this.height=b,this.depth=c,this.widthSegments=d||1,this.heightSegments=e||1,this.depthSegments=f||1;var h=this.width/2,i=this.height/2,j=this.depth/2;k("z","y",-1,-1,this.depth,this.height,h,0),k("z","y",1,-1,this.depth,this.height,-h,1),k("x","z",1,1,this.width,this.depth,i,2),k("x","z",1,-1,this.width,this.depth,-i,3),k("x","y",1,-1,this.width,this.height,j,4),k("x","y",-1,-1,this.width,this.height,-j,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this),this.radiusTop=a=void 0!==a?a:20,this.radiusBottom=b=void 0!==b?b:20,this.height=c=void 0!==c?c:100,this.radiusSegments=d=d||8,this.heightSegments=e=e||1,this.openEnded=f=void 0!==f&&f;var h,i,g=c/2,j=[],k=[];for(i=0;i<=e;i++){var l=[],m=[],n=i/e,o=n*(b-a)+a;for(h=0;h<=d;h++){var p=h/d,q=new THREE.Vector3;q.x=o*Math.sin(p*Math.PI*2),q.y=-n*c+g,q.z=o*Math.cos(p*Math.PI*2),this.vertices.push(q),l.push(this.vertices.length-1),m.push(new THREE.Vector2(p,1-n))}j.push(l),k.push(m)}var s,t,r=(b-a)/c;for(h=0;h<d;h++)for(0!==a?(s=this.vertices[j[0][h]].clone(),t=this.vertices[j[0][h+1]].clone()):(s=this.vertices[j[1][h]].clone(),t=this.vertices[j[1][h+1]].clone()),s.setY(Math.sqrt(s.x*s.x+s.z*s.z)*r).normalize(),t.setY(Math.sqrt(t.x*t.x+t.z*t.z)*r).normalize(),i=0;i<e;i++){var u=j[i][h],v=j[i+1][h],w=j[i+1][h+1],x=j[i][h+1],y=s.clone(),z=s.clone(),A=t.clone(),B=t.clone(),C=k[i][h].clone(),D=k[i+1][h].clone(),E=k[i+1][h+1].clone(),F=k[i][h+1].clone();this.faces.push(new THREE.Face4(u,v,w,x,[y,z,A,B])),this.faceVertexUvs[0].push([C,D,E,F])}if(f===!1&&a>0)for(this.vertices.push(new THREE.Vector3(0,g,0)),h=0;h<d;h++){var u=j[0][h],v=j[0][h+1],w=this.vertices.length-1,y=new THREE.Vector3(0,1,0),z=new THREE.Vector3(0,1,0),A=new THREE.Vector3(0,1,0),C=k[0][h].clone(),D=k[0][h+1].clone(),E=new THREE.Vector2(D.u,0);this.faces.push(new THREE.Face3(u,v,w,[y,z,A])),this.faceVertexUvs[0].push([C,D,E])}if(f===!1&&b>0)for(this.vertices.push(new THREE.Vector3(0,-g,0)),h=0;h<d;h++){var u=j[i][h+1],v=j[i][h],w=this.vertices.length-1,y=new THREE.Vector3(0,-1,0),z=new THREE.Vector3(0,-1,0),A=new THREE.Vector3(0,-1,0),C=k[i][h+1].clone(),D=k[i][h].clone(),E=new THREE.Vector2(D.u,1);this.faces.push(new THREE.Face3(u,v,w,[y,z,A])),this.faceVertexUvs[0].push([C,D,E])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(a,b){return"undefined"==typeof a?void(a=[]):(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),void this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++){var e=a[d];this.addShape(e,b)}},THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function G(a,b,c){return b||console.log("die"),b.clone().multiplyScalar(c).add(a)}function S(a,b,c){return U(a,b,c)}function T(a,b,c){var d=Math.atan2(b.y-a.y,b.x-a.x),e=Math.atan2(c.y-a.y,c.x-a.x);d>e&&(e+=2*Math.PI);var f=(d+e)/2,g=-Math.cos(f),h=-Math.sin(f),i=new THREE.Vector2(g,h);return i}function U(a,b,c){var j,k,l,m,n,o,d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6;return d.set(a.x-b.x,a.y-b.y),e.set(a.x-c.x,a.y-c.y),j=d.normalize(),k=e.normalize(),f.set(-j.y,j.x),g.set(k.y,-k.x),h.copy(a).add(f),i.copy(a).add(g),h.equals(i)?g.clone():(h.copy(b).add(f),i.copy(c).add(g),l=j.dot(g),m=i.sub(h).dot(g),0===l&&(console.log("Either infinite or no solutions!"),0===m?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),n=m/l,n<0?T(a,b,c):(o=j.multiplyScalar(n).add(h),o.sub(a).clone()))}function fa(){if(g){var a=0,b=M*a;for(W=0;W<O;W++)N=E[W],ja(N[2]+b,N[1]+b,N[0]+b,!0);for(a=i+2*f,b=M*a,W=0;W<O;W++)N=E[W],ja(N[0]+b,N[1]+b,N[2]+b,!1)}else{for(W=0;W<O;W++)N=E[W],ja(N[2],N[1],N[0],!0);for(W=0;W<O;W++)N=E[W],ja(N[0]+M*i,N[1]+M*i,N[2]+M*i,!1)}}function ga(){var a=0;for(ha(F,a),a+=F.length,v=0,w=C.length;v<w;v++)u=C[v],ha(u,a),a+=u.length}function ha(a,b){var c,d;for(W=a.length;--W>=0;){c=W,d=W-1,d<0&&(d=a.length-1);var e=0,g=i+2*f;for(e=0;e<g;e++){var h=M*e,j=M*(e+1),k=b+c+h,l=b+d+h,m=b+d+j,n=b+c+j;ka(k,l,m,n,a,e,g,c,d)}}}function ia(a,b,c){x.vertices.push(new THREE.Vector3(a,b,c))}function ja(c,d,e,f){c+=z,d+=z,e+=z,x.faces.push(new THREE.Face3(c,d,e,null,null,m));var g=f?o.generateBottomUV(x,a,b,c,d,e):o.generateTopUV(x,a,b,c,d,e);x.faceVertexUvs[0].push(g)}function ka(c,d,e,f,g,h,i,j,k){c+=z,d+=z,e+=z,f+=z,x.faces.push(new THREE.Face4(c,d,e,f,null,null,n));var l=o.generateSideWallUV(x,a,g,b,c,d,e,f,h,i,j,k);x.faceVertexUvs[0].push(l)}var k,q,r,s,t,c=void 0!==b.amount?b.amount:100,d=void 0!==b.bevelThickness?b.bevelThickness:6,e=void 0!==b.bevelSize?b.bevelSize:d-2,f=void 0!==b.bevelSegments?b.bevelSegments:3,g=void 0===b.bevelEnabled||b.bevelEnabled,h=void 0!==b.curveSegments?b.curveSegments:12,i=void 0!==b.steps?b.steps:1,j=b.extrudePath,l=!1,m=b.material,n=b.extrudeMaterial,o=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;this.shapebb;j&&(k=j.getSpacedPoints(i),l=!0,g=!1,q=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(j,i,!1),r=new THREE.Vector3,s=new THREE.Vector3,t=new THREE.Vector3),g||(f=0,d=0,e=0);var u,v,w,x=this,z=this.vertices.length,A=a.extractPoints(h),B=A.shape,C=A.holes,D=!THREE.Shape.Utils.isClockWise(B);if(D){for(B=B.reverse(),v=0,w=C.length;v<w;v++)u=C[v],THREE.Shape.Utils.isClockWise(u)&&(C[v]=u.reverse());D=!1}var E=THREE.Shape.Utils.triangulateShape(B,C),F=B;for(v=0,w=C.length;v<w;v++)u=C[v],B=B.concat(u);for(var H,I,J,K,L,N,M=B.length,O=E.length,V=(F.length,180/Math.PI,[]),W=0,X=F.length,Y=X-1,Z=W+1;W<X;W++,Y++,Z++){Y===X&&(Y=0),Z===X&&(Z=0);F[W],F[Y],F[Z];V[W]=S(F[W],F[Y],F[Z])}var ca,ba=[],da=V.concat();for(v=0,w=C.length;v<w;v++){for(u=C[v],ca=[],W=0,X=u.length,Y=X-1,Z=W+1;W<X;W++,Y++,Z++)Y===X&&(Y=0),Z===X&&(Z=0),ca[W]=S(u[W],u[Y],u[Z]);ba.push(ca),da=da.concat(ca)}for(H=0;H<f;H++){for(J=H/f,K=d*(1-J),I=e*Math.sin(J*Math.PI/2),W=0,X=F.length;W<X;W++)L=G(F[W],V[W],I),ia(L.x,L.y,-K);for(v=0,w=C.length;v<w;v++)for(u=C[v],ca=ba[v],W=0,X=u.length;W<X;W++)L=G(u[W],ca[W],I),ia(L.x,L.y,-K)}for(I=e,W=0;W<M;W++)L=g?G(B[W],da[W],I):B[W],l?(s.copy(q.normals[0]).multiplyScalar(L.x),r.copy(q.binormals[0]).multiplyScalar(L.y),t.copy(k[0]).add(s).add(r),ia(t.x,t.y,t.z)):ia(L.x,L.y,0);var ea;for(ea=1;ea<=i;ea++)for(W=0;W<M;W++)L=g?G(B[W],da[W],I):B[W],l?(s.copy(q.normals[ea]).multiplyScalar(L.x),r.copy(q.binormals[ea]).multiplyScalar(L.y),t.copy(k[ea]).add(s).add(r),ia(t.x,t.y,t.z)):ia(L.x,L.y,c/i*ea);for(H=f-1;H>=0;H--){for(J=H/f,K=d*(1-J),I=e*Math.sin(J*Math.PI/2),W=0,X=F.length;W<X;W++)L=G(F[W],V[W],I),ia(L.x,L.y,c+K);for(v=0,w=C.length;v<w;v++)for(u=C[v],ca=ba[v],W=0,X=u.length;W<X;W++)L=G(u[W],ca[W],I),l?ia(L.x,L.y+k[i-1].y,k[i-1].x+K):ia(L.x,L.y,c+K)}fa(),ga()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){var g=a.vertices[d].x,h=a.vertices[d].y,i=a.vertices[e].x,j=a.vertices[e].y,k=a.vertices[f].x,l=a.vertices[f].y;return[new THREE.Vector2(g,h),new THREE.Vector2(i,j),new THREE.Vector2(k,l)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h,i,j,k,l){var m=a.vertices[e].x,n=a.vertices[e].y,o=a.vertices[e].z,p=a.vertices[f].x,q=a.vertices[f].y,r=a.vertices[f].z,s=a.vertices[g].x,t=a.vertices[g].y,u=a.vertices[g].z,v=a.vertices[h].x,w=a.vertices[h].y,x=a.vertices[h].z;return Math.abs(n-q)<.01?[new THREE.Vector2(m,1-o),new THREE.Vector2(p,1-r),new THREE.Vector2(s,1-u),new THREE.Vector2(v,1-x)]:[new THREE.Vector2(n,1-o),new THREE.Vector2(q,1-r),new THREE.Vector2(t,1-u),new THREE.Vector2(w,1-x)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this),a instanceof Array==!1&&(a=[a]),this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this},THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var g,h,i,c=void 0!==b.curveSegments?b.curveSegments:12,d=b.material,e=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,k=(this.shapebb,this.vertices.length),l=a.extractPoints(c),m=l.shape,n=l.holes,o=!THREE.Shape.Utils.isClockWise(m);if(o){for(m=m.reverse(),g=0,h=n.length;g<h;g++)i=n[g],THREE.Shape.Utils.isClockWise(i)&&(n[g]=i.reverse());o=!1}var p=THREE.Shape.Utils.triangulateShape(m,n),q=m;for(g=0,h=n.length;g<h;g++)i=n[g],m=m.concat(i);var r,t,s=m.length,u=p.length;q.length;for(g=0;g<s;g++)r=m[g],this.vertices.push(new THREE.Vector3(r.x,r.y,0));for(g=0;g<u;g++){t=p[g];var x=t[0]+k,y=t[1]+k,z=t[2]+k;this.faces.push(new THREE.Face3(x,y,z,null,null,d)),this.faceVertexUvs[0].push(e.generateBottomUV(this,a,b,x,y,z))}},THREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this),b=b||12,c=c||0,d=d||2*Math.PI;for(var e=1/(a.length-1),f=1/b,g=0,h=b;g<=h;g++)for(var i=c+g*f*d,j=Math.cos(i),k=Math.sin(i),l=0,m=a.length;l<m;l++){var n=a[l],o=new THREE.Vector3;o.x=j*n.x-k*n.y,o.y=k*n.x+j*n.y,o.z=n.z,this.vertices.push(o)}for(var p=a.length,g=0,h=b;g<h;g++)for(var l=0,m=a.length-1;l<m;l++){var q=l+p*g,r=q,s=q+p,j=q+1+p,t=q+1;this.faces.push(new THREE.Face4(r,s,j,t));var u=g*f,v=l*e,w=u+f,x=v+e;this.faceVertexUvs[0].push([new THREE.Vector2(u,v),new THREE.Vector2(w,v),new THREE.Vector2(w,x),new THREE.Vector2(u,x)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this),this.width=a,this.height=b,this.widthSegments=c||1,this.heightSegments=d||1;var e,f,g=a/2,h=b/2,i=this.widthSegments,j=this.heightSegments,k=i+1,l=j+1,m=this.width/i,n=this.height/j,o=new THREE.Vector3(0,0,1);for(f=0;f<l;f++)for(e=0;e<k;e++){var p=e*m-g,q=f*n-h;this.vertices.push(new THREE.Vector3(p,-q,0))}for(f=0;f<j;f++)for(e=0;e<i;e++){var r=e+k*f,s=e+k*(f+1),t=e+1+k*(f+1),u=e+1+k*f,v=new THREE.Face4(r,s,t,u);v.normal.copy(o),v.vertexNormals.push(o.clone(),o.clone(),o.clone(),o.clone()),this.faces.push(v),this.faceVertexUvs[0].push([new THREE.Vector2(e/i,1-f/j),new THREE.Vector2(e/i,1-(f+1)/j),new THREE.Vector2((e+1)/i,1-(f+1)/j),new THREE.Vector2((e+1)/i,1-f/j)])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this),a=a||0,b=b||50,e=void 0!==e?e:0,f=void 0!==f?f:2*Math.PI,c=void 0!==c?Math.max(3,c):8,d=void 0!==d?Math.max(3,d):8;var g,h,i=[],j=a,k=(b-a)/d;for(g=0;g<=d;g++){for(h=0;h<=c;h++){var l=new THREE.Vector3,m=e+h/c*f;l.x=j*Math.cos(m),l.y=j*Math.sin(m),this.vertices.push(l),i.push(new THREE.Vector2((l.x/j+1)/2,-(l.y/j+1)/2+1))}j+=k}var n=new THREE.Vector3(0,0,1);for(g=0;g<d;g++){var o=g*c;for(h=0;h<=c;h++){var m=h+o,p=m+g,q=m+c+g,r=m+c+1+g;this.faces.push(new THREE.Face3(p,q,r,[n,n,n])),this.faceVertexUvs[0].push([i[p],i[q],i[r]]),p=m+g,q=m+c+1+g,r=m+1+g,this.faces.push(new THREE.Face3(p,q,r,[n,n,n])),this.faceVertexUvs[0].push([i[p],i[q],i[r]])}}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,j)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this),this.radius=a=a||50,this.widthSegments=b=Math.max(3,Math.floor(b)||8),this.heightSegments=c=Math.max(2,Math.floor(c)||6),this.phiStart=d=void 0!==d?d:0,this.phiLength=e=void 0!==e?e:2*Math.PI,this.thetaStart=f=void 0!==f?f:0,this.thetaLength=g=void 0!==g?g:Math.PI;var h,i,j=[],k=[];for(i=0;i<=c;i++){var l=[],m=[];for(h=0;h<=b;h++){var n=h/b,o=i/c,p=new THREE.Vector3;p.x=-a*Math.cos(d+n*e)*Math.sin(f+o*g),p.y=a*Math.cos(f+o*g),p.z=a*Math.sin(d+n*e)*Math.sin(f+o*g),this.vertices.push(p),l.push(this.vertices.length-1),m.push(new THREE.Vector2(n,1-o))}j.push(l),k.push(m)}for(i=0;i<this.heightSegments;i++)for(h=0;h<this.widthSegments;h++){var q=j[i][h+1],r=j[i][h],s=j[i+1][h],t=j[i+1][h+1],u=this.vertices[q].clone().normalize(),v=this.vertices[r].clone().normalize(),w=this.vertices[s].clone().normalize(),x=this.vertices[t].clone().normalize(),y=k[i][h+1].clone(),z=k[i][h].clone(),A=k[i+1][h].clone(),B=k[i+1][h+1].clone();Math.abs(this.vertices[q].y)===this.radius?(this.faces.push(new THREE.Face3(q,s,t,[u,w,x])),this.faceVertexUvs[0].push([y,A,B])):Math.abs(this.vertices[s].y)===this.radius?(this.faces.push(new THREE.Face3(q,r,s,[u,v,w])),this.faceVertexUvs[0].push([y,z,A])):(this.faces.push(new THREE.Face4(q,r,s,t,[u,v,w,x])),this.faceVertexUvs[0].push([y,z,A,B]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(a,b){b=b||{};var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50,void 0===b.bevelThickness&&(b.bevelThickness=10),void 0===b.bevelSize&&(b.bevelSize=8),void 0===b.bevelEnabled&&(b.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,c,b)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100,this.tube=b||40,this.radialSegments=c||8,this.tubularSegments=d||6,this.arc=e||2*Math.PI;for(var g=new THREE.Vector3,h=[],i=[],j=0;j<=this.radialSegments;j++)for(var k=0;k<=this.tubularSegments;k++){var l=k/this.tubularSegments*this.arc,m=j/this.radialSegments*Math.PI*2;g.x=this.radius*Math.cos(l),g.y=this.radius*Math.sin(l);var n=new THREE.Vector3;n.x=(this.radius+this.tube*Math.cos(m))*Math.cos(l),n.y=(this.radius+this.tube*Math.cos(m))*Math.sin(l),n.z=this.tube*Math.sin(m),this.vertices.push(n),h.push(new THREE.Vector2(k/this.tubularSegments,j/this.radialSegments)),i.push(n.clone().sub(g).normalize())}for(var j=1;j<=this.radialSegments;j++)for(var k=1;k<=this.tubularSegments;k++){var o=(this.tubularSegments+1)*j+k-1,p=(this.tubularSegments+1)*(j-1)+k-1,q=(this.tubularSegments+1)*(j-1)+k,r=(this.tubularSegments+1)*j+k,s=new THREE.Face4(o,p,q,r,[i[o],i[p],i[q],i[r]]);s.normal.add(i[o]),s.normal.add(i[p]),s.normal.add(i[q]),s.normal.add(i[r]),s.normal.normalize(),this.faces.push(s),this.faceVertexUvs[0].push([h[o].clone(),h[p].clone(),h[q].clone(),h[r].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function D(a,b,c){return h.vertices.push(new THREE.Vector3(a,b,c))-1}function E(a,b,c,d,e,f){var g=Math.cos(a),i=(Math.cos(b),Math.sin(a)),j=c/d*a,k=Math.cos(j),l=e*(2+k)*.5*g,m=e*(2+k)*i*.5,n=f*e*Math.sin(j)*.5;return new THREE.Vector3(l,m,n)}THREE.Geometry.call(this);var h=this;this.radius=a||100,this.tube=b||40,this.radialSegments=c||64,this.tubularSegments=d||8,this.p=e||2,this.q=f||3,this.heightScale=g||1,this.grid=new Array(this.radialSegments);for(var i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,l=0;l<this.radialSegments;++l){this.grid[l]=new Array(this.tubularSegments);for(var m=0;m<this.tubularSegments;++m){var r,s,n=l/this.radialSegments*2*this.p*Math.PI,o=m/this.tubularSegments*2*Math.PI,p=E(n,o,this.q,this.p,this.radius,this.heightScale),q=E(n+.01,o,this.q,this.p,this.radius,this.heightScale);i.subVectors(q,p),j.addVectors(q,p),k.crossVectors(i,j),j.crossVectors(k,i),k.normalize(),j.normalize(),r=-this.tube*Math.cos(o),s=this.tube*Math.sin(o),p.x+=r*j.x+s*k.x,p.y+=r*j.y+s*k.y,p.z+=r*j.z+s*k.z,this.grid[l][m]=D(p.x,p.y,p.z)}}for(var l=0;l<this.radialSegments;++l)for(var m=0;m<this.tubularSegments;++m){var t=(l+1)%this.radialSegments,u=(m+1)%this.tubularSegments,v=this.grid[l][m],w=this.grid[t][m],x=this.grid[t][u],y=this.grid[l][u],z=new THREE.Vector2(l/this.radialSegments,m/this.tubularSegments),A=new THREE.Vector2((l+1)/this.radialSegments,m/this.tubularSegments),B=new THREE.Vector2((l+1)/this.radialSegments,(m+1)/this.tubularSegments),C=new THREE.Vector2(l/this.radialSegments,(m+1)/this.tubularSegments);this.faces.push(new THREE.Face4(v,w,x,y)),this.faceVertexUvs[0].push([z,A,B,C])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(a,b,c,d,e,f){function N(a,b,c){return g.vertices.push(new THREE.Vector3(a,b,c))-1}THREE.Geometry.call(this),this.path=a,this.segments=b||64,this.radius=c||1,this.radiusSegments=d||8,this.closed=e||!1,f&&(this.debug=new THREE.Object3D),this.grid=[];var h,i,j,r,s,t,u,v,x,y,z,A,B,C,D,E,F,G,H,I,g=this,k=this.segments+1,w=new THREE.Vector3,J=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),K=J.tangents,L=J.normals,M=J.binormals;for(this.tangents=K,this.normals=L,this.binormals=M,x=0;x<k;x++)for(this.grid[x]=[],r=x/(k-1),v=a.getPointAt(r),h=K[x],i=L[x],j=M[x],this.debug&&(this.debug.add(new THREE.ArrowHelper(h,v,c,255)),this.debug.add(new THREE.ArrowHelper(i,v,c,16711680)),this.debug.add(new THREE.ArrowHelper(j,v,c,65280))),y=0;y<this.radiusSegments;y++)s=y/this.radiusSegments*2*Math.PI,t=-this.radius*Math.cos(s),u=this.radius*Math.sin(s),w.copy(v),w.x+=t*i.x+u*j.x,w.y+=t*i.y+u*j.y,w.z+=t*i.z+u*j.z,this.grid[x][y]=N(w.x,w.y,w.z);for(x=0;x<this.segments;x++)for(y=0;y<this.radiusSegments;y++)z=this.closed?(x+1)%this.segments:x+1,A=(y+1)%this.radiusSegments,B=this.grid[x][y],C=this.grid[z][y],D=this.grid[z][A],E=this.grid[x][A],F=new THREE.Vector2(x/this.segments,y/this.radiusSegments),G=new THREE.Vector2((x+1)/this.segments,y/this.radiusSegments),H=new THREE.Vector2((x+1)/this.segments,(y+1)/this.radiusSegments),I=new THREE.Vector2(x/this.segments,(y+1)/this.radiusSegments),this.faces.push(new THREE.Face4(B,C,D,E)),this.faceVertexUvs[0].push([F,G,H,I]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(a,b,c){function x(){h[0]=new THREE.Vector3,i[0]=new THREE.Vector3,o=Number.MAX_VALUE,p=Math.abs(g[0].x),q=Math.abs(g[0].y),r=Math.abs(g[0].z),p<=o&&(o=p,e.set(1,0,0)),q<=o&&(o=q,e.set(0,1,0)),r<=o&&e.set(0,0,1),j.crossVectors(g[0],e).normalize(),h[0].crossVectors(g[0],j),i[0].crossVectors(g[0],h[0])}var m,o,p,q,r,s,t,e=(new THREE.Vector3,new THREE.Vector3),g=(new THREE.Vector3,[]),h=[],i=[],j=new THREE.Vector3,k=new THREE.Matrix4,l=b+1,n=1e-4;for(this.tangents=g,this.normals=h,this.binormals=i,s=0;s<l;s++)t=s/(l-1),g[s]=a.getTangentAt(t),g[s].normalize();for(x(),s=1;s<l;s++)h[s]=h[s-1].clone(),i[s]=i[s-1].clone(),j.crossVectors(g[s-1],g[s]),j.length()>n&&(j.normalize(),m=Math.acos(g[s-1].dot(g[s])),h[s].applyMatrix4(k.makeRotationAxis(j,m))),i[s].crossVectors(g[s],h[s]);if(c)for(m=Math.acos(h[0].dot(h[l-1])),m/=l-1,g[0].dot(j.crossVectors(h[0],h[l-1]))>0&&(m=-m),s=1;s<l;s++)h[s].applyMatrix4(k.makeRotationAxis(g[s],m*s)),i[s].crossVectors(g[s],h[s])},THREE.PolyhedronGeometry=function(a,b,c,d){function t(a){var b=a.normalize().clone();b.index=e.vertices.push(b)-1;var c=w(a)/2/Math.PI+.5,d=x(a)/Math.PI+.5;return b.uv=new THREE.Vector2(c,1-d),b}function u(a,b,c){var d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);d.centroid.add(a).add(b).add(c).divideScalar(3),d.normal.copy(d.centroid).normalize(),e.faces.push(d);var f=w(d.centroid);e.faceVertexUvs[0].push([y(a.uv,a,f),y(b.uv,b,f),y(c.uv,c,f)])}function v(a,b){for(var c=Math.pow(2,b),f=(Math.pow(4,b),t(e.vertices[a.a])),g=t(e.vertices[a.b]),h=t(e.vertices[a.c]),i=[],j=0;j<=c;j++){i[j]=[];for(var k=t(f.clone().lerp(h,j/c)),l=t(g.clone().lerp(h,j/c)),m=c-j,n=0;n<=m;n++)0==n&&j==c?i[j][n]=k:i[j][n]=t(k.clone().lerp(l,n/m))}for(var j=0;j<c;j++)for(var n=0;n<2*(c-j)-1;n++){var o=Math.floor(n/2);n%2==0?u(i[j][o+1],i[j+1][o],i[j][o]):u(i[j][o+1],i[j+1][o+1],i[j+1][o])}}function w(a){return Math.atan2(a.z,-a.x)}function x(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}function y(a,b,c){return c<0&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y)),0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+.5,a.y)),a.clone()}THREE.Geometry.call(this),c=c||1,d=d||0;for(var e=this,f=0,g=a.length;f<g;f++)t(new THREE.Vector3(a[f][0],a[f][1],a[f][2]));for(var i=this.vertices,j=[],f=0,g=b.length;f<g;f++){var k=i[b[f][0]],l=i[b[f][1]],m=i[b[f][2]];j[f]=new THREE.Face3(k.index,l.index,m.index,[k.clone(),l.clone(),m.clone()])}for(var f=0,g=j.length;f<g;f++)v(j[f],d);for(var f=0,g=this.faceVertexUvs[0].length;f<g;f++){var n=this.faceVertexUvs[0][f],o=n[0].x,p=n[1].x,q=n[2].x,r=Math.max(o,Math.max(p,q)),s=Math.min(o,Math.min(p,q));r>.9&&s<.1&&(o<.2&&(n[0].x+=1),p<.2&&(n[1].x+=1),q<.2&&(n[2].x+=1))}this.mergeVertices();for(var f=0,g=this.vertices.length;f<g;f++)this.vertices[f].multiplyScalar(c);this.computeCentroids(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(a,b){this.radius=a,this.detail=b;var c=(1+Math.sqrt(5))/2,d=[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],e=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,d,e,a,b)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(a,b){var c=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],d=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,c,d,a,b)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(a,b){var c=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],d=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,c,d,a,b)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0];d=void 0!==d&&d;var h,j,k,l,m,o=b+1;for(h=0;h<=c;h++)for(m=h/c,j=0;j<=b;j++)l=j/b,k=a(l,m),e.push(k);var p,q,r,s,t,u,v,w;for(h=0;h<c;h++)for(j=0;j<b;j++)p=h*o+j,q=h*o+j+1,r=(h+1)*o+j,s=(h+1)*o+j+1,t=new THREE.Vector2(j/b,h/c),u=new THREE.Vector2((j+1)/b,h/c),v=new THREE.Vector2(j/b,(h+1)/c),w=new THREE.Vector2((j+1)/b,(h+1)/c),d?(f.push(new THREE.Face3(p,q,r)),f.push(new THREE.Face3(q,s,r)),g.push([t,u,v]),g.push([u,w,v])):(f.push(new THREE.Face4(p,q,s,r)),g.push([t,u,w,v]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ConvexGeometry=function(a){function d(c){var d=a[c].clone(),f=d.length();d.x+=f*h(),d.y+=f*h(),d.z+=f*h();for(var i=[],j=0;j<b.length;){var k=b[j];if(e(k,d)){for(var l=0;l<3;l++){for(var m=[k[l],k[(l+1)%3]],n=!0,o=0;o<i.length;o++)if(g(i[o],m)){i[o]=i[i.length-1],i.pop(),n=!1;break}n&&i.push(m)}b[j]=b[b.length-1],b.pop()}else j++}for(var o=0;o<i.length;o++)b.push([i[o][0],i[o][1],c])}function e(b,c){var d=a[b[0]],e=a[b[1]],g=a[b[2]],h=f(d,e,g),i=h.dot(d);return h.dot(c)>=i}function f(a,b,c){var d=new THREE.Vector3,e=new THREE.Vector3;return d.subVectors(c,b),e.subVectors(a,b),d.cross(e),d.normalize(),d}function g(a,b){return a[0]===b[1]&&a[1]===b[0]}function h(){return 2*(Math.random()-.5)*1e-6}function i(a){var b=a.length();return new THREE.Vector2(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var b=[[0,1,2],[0,2,1]],c=3;c<a.length;c++)d(c);for(var j=0,k=new Array(a.length),c=0;c<b.length;c++)for(var l=b[c],m=0;m<3;m++)void 0===k[l[m]]&&(k[l[m]]=j++,this.vertices.push(a[l[m]])),l[m]=k[l[m]];for(var c=0;c<b.length;c++)this.faces.push(new THREE.Face3(b[c][0],b[c][1],b[c][2]));for(var c=0;c<this.faces.length;c++){var l=this.faces[c];this.faceVertexUvs[0].push([i(this.vertices[l.a]),i(this.vertices[l.b]),i(this.vertices[l.c])])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(a){a=a||1;var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a,0,0),new THREE.Vector3,new THREE.Vector3(0,a,0),new THREE.Vector3,new THREE.Vector3(0,0,a)),b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var c=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,c,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this),void 0===d&&(d=16776960),void 0===c&&(c=1),this.position=b,this.useQuaternion=!0;var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0)),e.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d})),this.line.matrixAutoUpdate=!1,this.add(this.line);var f=new THREE.CylinderGeometry(0,.05,.25,5,1);f.applyMatrix((new THREE.Matrix4).makeTranslation(0,.875,0)),this.cone=new THREE.Mesh(f,new THREE.MeshBasicMaterial({color:d})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(a),this.setLength(c)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(){var b,a=new THREE.Vector3;return function(c){c.y>.999?this.quaternion.set(0,0,0,1):c.y<-.999?this.quaternion.set(1,0,0,0):(a.set(c.z,0,-c.x).normalize(),b=Math.acos(c.y),this.quaternion.setFromAxisAngle(a,b))}}(),THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)},THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a),this.cone.material.color.setHex(a)},THREE.BoxHelper=function(a){a=a||1;var b=new THREE.Geometry,c=[new THREE.Vector3(a,a,a),new THREE.Vector3(-a,a,a),new THREE.Vector3(-a,-a,a),new THREE.Vector3(a,-a,a),new THREE.Vector3(a,a,-a),new THREE.Vector3(-a,a,-a),new THREE.Vector3(-a,-a,-a),new THREE.Vector3(a,-a,-a)];b.vertices.push(c[0],c[1],c[1],c[2],c[2],c[3],c[3],c[0],c[4],c[5],c[5],c[6],c[6],c[7],c[7],c[4],c[0],c[4],c[1],c[5],c[2],c[6],c[3],c[7]),this.vertices=c,THREE.Line.call(this,b,new THREE.LineBasicMaterial,THREE.LinePieces)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,d=b.boundingBox.max,e=this.vertices;e[0].set(d.x,d.y,d.z),e[1].set(c.x,d.y,d.z),e[2].set(c.x,c.y,d.z),e[3].set(d.x,c.y,d.z),e[4].set(d.x,d.y,c.z),e[5].set(c.x,d.y,c.z),e[6].set(c.x,c.y,c.z),e[7].set(d.x,c.y,c.z),this.geometry.computeBoundingSphere(),this.geometry.verticesNeedUpdate=!0,this.matrixAutoUpdate=!1,this.matrixWorld=a.matrixWorld},THREE.CameraHelper=function(a){function j(a,b,c){k(a,c),k(b,c)}function k(a,c){b.vertices.push(new THREE.Vector3),b.colors.push(new THREE.Color(c)),void 0===d[a]&&(d[a]=[]),d[a].push(b.vertices.length-1)}THREE.Line.call(this);var b=new THREE.Geometry,c=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),d={},e=16755200,f=16711680,g=43775,h=16777215,i=3355443;j("n1","n2",e),j("n2","n4",e),j("n4","n3",e),j("n3","n1",e),j("f1","f2",e),j("f2","f4",e),j("f4","f3",e),j("f3","f1",e),j("n1","f1",e),j("n2","f2",e),j("n3","f3",e),j("n4","f4",e),j("p","n1",f),j("p","n2",f),j("p","n3",f),j("p","n4",f),j("u1","u2",g),j("u2","u3",g),j("u3","u1",g),j("c","t",h),j("p","c",i),j("cn1","cn2",i),j("cn3","cn4",i),j("cf1","cf2",i),j("cf3","cf4",i),THREE.Line.call(this,b,c,THREE.LinePieces),this.camera=a,this.matrixWorld=a.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=d},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Camera,c=new THREE.Projector;return function(){function g(e,f,g,h){a.set(f,g,h),c.unprojectVector(a,b);var i=d.pointMap[e];if(void 0!==i)for(var j=0,k=i.length;j<k;j++)d.geometry.vertices[i[j]].copy(a);
}var d=this,e=1,f=1;b.projectionMatrix.copy(this.camera.projectionMatrix),g("c",0,0,-1),g("t",0,0,1),g("n1",-e,-f,-1),g("n2",e,-f,-1),g("n3",-e,f,-1),g("n4",e,f,-1),g("f1",-e,-f,1),g("f2",e,-f,1),g("f3",-e,f,1),g("f4",e,f,1),g("u1",.7*e,1.1*f,-1),g("u2",.7*-e,1.1*f,-1),g("u3",0,2*f,-1),g("cf1",-e,0,1),g("cf2",e,0,1),g("cf3",0,-f,1),g("cf4",0,f,1),g("cn1",-e,0,-1),g("cn2",e,0,-1),g("cn3",0,-f,-1),g("cn4",0,f,-1),this.geometry.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this),this.matrixAutoUpdate=!1,this.light=a;var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightSphere=new THREE.Mesh(c,d),this.lightSphere.matrixWorld=this.light.matrixWorld,this.lightSphere.matrixAutoUpdate=!1,this.add(this.lightSphere),c=new THREE.Geometry,c.vertices.push(this.light.position),c.vertices.push(this.light.target.position),c.computeLineDistances(),d=new THREE.LineDashedMaterial({dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(c,d),this.add(this.targetLine)},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){this.lightSphere.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.GridHelper=function(a,b){for(var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),e=new THREE.Color(4473924),f=new THREE.Color(8947848),g=-a;g<=a;g+=b){c.vertices.push(new THREE.Vector3(-a,0,g)),c.vertices.push(new THREE.Vector3(a,0,g)),c.vertices.push(new THREE.Vector3(g,0,-a)),c.vertices.push(new THREE.Vector3(g,0,a));var h=0===g?e:f;c.colors.push(h,h,h,h)}THREE.Line.call(this,c,d,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.HemisphereLightHelper=function(a,b,c,d){THREE.Object3D.call(this),this.light=a;var e=new THREE.SphereGeometry(b,4,2);e.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var f=0,g=8;f<g;f++)e.faces[f].materialIndex=f<4?0:1;var h=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});h.color.copy(a.color).multiplyScalar(a.intensity);var i=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});i.color.copy(a.groundColor).multiplyScalar(a.intensity),this.lightSphere=new THREE.Mesh(e,new THREE.MeshFaceMaterial([h,i])),this.lightSphere.position=a.position,this.lightSphere.lookAt(new THREE.Vector3),this.add(this.lightSphere)},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){this.lightSphere.lookAt(new THREE.Vector3),this.lightSphere.material.materials[0].color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightSphere.material.materials[1].color.copy(this.light.groundColor).multiplyScalar(this.light.intensity)},THREE.PointLightHelper=function(a,b){THREE.Object3D.call(this),this.matrixAutoUpdate=!1,this.light=a;var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightSphere=new THREE.Mesh(c,d),this.lightSphere.matrixWorld=this.light.matrixWorld,this.lightSphere.matrixAutoUpdate=!1,this.add(this.lightSphere)},THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.PointLightHelper.prototype.update=function(){this.lightSphere.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SpotLightHelper=function(a,b){THREE.Object3D.call(this),this.matrixAutoUpdate=!1,this.light=a;var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0});d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightSphere=new THREE.Mesh(c,d),this.lightSphere.matrixWorld=this.light.matrixWorld,this.lightSphere.matrixAutoUpdate=!1,this.add(this.lightSphere),c=new THREE.CylinderGeometry(1e-4,1,1,8,1,!0),c.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),c.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2)),d=new THREE.MeshBasicMaterial({fog:!1,wireframe:!0,opacity:.3,transparent:!0}),d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightCone=new THREE.Mesh(c,d),this.lightCone.position=this.light.position;var e=a.distance?a.distance:1e4,f=e*Math.tan(a.angle);this.lightCone.scale.set(f,f,e),this.lightCone.lookAt(this.light.target.position),this.add(this.lightCone)},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){var a=this.light.distance?this.light.distance:1e4,b=a*Math.tan(this.light.angle);this.lightCone.scale.set(b,b,a),this.lightCone.lookAt(this.light.target.position),this.lightSphere.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightCone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(a){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==a&&this.add(a,b,c,d,e)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1),void 0===c&&(c=0),void 0===f&&(f=1),void 0===e&&(e=new THREE.Color(16777215)),void 0===d&&(d=THREE.NormalBlending),c=Math.min(c,Math.max(0,c)),this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})},THREE.LensFlare.prototype.updateLensFlares=function(){var a,c,b=this.lensFlares.length,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=c.x*Math.PI*.25,c.rotation+=.25*(c.wantedRotation-c.rotation)},THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b),this.animationsMap={},this.animationsList=[];var c=this.geometry.morphTargets.length,d="__default",e=0,f=c-1,g=c/1;this.createAnimation(d,e,f,g),this.setAnimationWeight(d,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){var e={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=e,this.animationsList.push(e)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var c,b=/([a-z]+)(\d+)/,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f],i=h.name.match(b);if(i&&i.length>1){var j=i[1];i[2];d[j]||(d[j]={start:1/0,end:-(1/0)});var l=d[j];f<l.start&&(l.start=f),f>l.end&&(l.end=f),c||(c=j)}}for(var j in d){var l=d[j];this.createAnimation(j,l.start,l.end,a)}this.firstAnimation=c},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){var b=this.animationsMap[a];b&&(b.direction=1,b.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){var b=this.animationsMap[a];b&&(b.direction=-1,b.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0,c=this.animationsMap[a];return c&&(b=c.time),b},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1,c=this.animationsMap[a];return c&&(b=c.duration),b},THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(a){var b=this.animationsMap[a];b&&(b.active=!1)},THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a,d.mirroredLoop?(d.time>d.duration||d.time<0)&&(d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),d.time<0&&(d.time=0,d.directionBackwards=!1)):(d.time=d.time%d.duration,d.time<0&&(d.time+=d.duration));var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);var h=d.time%e/e;d.directionBackwards&&(h=1-h),this.morphTargetInfluences[d.currentFrame]=h*g,this.morphTargetInfluences[d.lastFrame]=(1-h)*g}}},THREE.LensFlarePlugin=function(){function e(b,c){var d=a.createProgram(),e=a.createShader(a.FRAGMENT_SHADER),f=a.createShader(a.VERTEX_SHADER),g="precision "+c+" float;\n";return a.shaderSource(e,g+b.fragmentShader),a.shaderSource(f,g+b.vertexShader),a.compileShader(e),a.compileShader(f),a.attachShader(d,e),a.attachShader(d,f),a.linkProgram(d),d}var a,b,c,d={};this.init=function(f){a=f.context,b=f,c=f.getPrecision(),d.vertices=new Float32Array(16),d.faces=new Uint16Array(6);var g=0;d.vertices[g++]=-1,d.vertices[g++]=-1,d.vertices[g++]=0,d.vertices[g++]=0,d.vertices[g++]=1,d.vertices[g++]=-1,d.vertices[g++]=1,d.vertices[g++]=0,d.vertices[g++]=1,d.vertices[g++]=1,d.vertices[g++]=1,d.vertices[g++]=1,d.vertices[g++]=-1,d.vertices[g++]=1,d.vertices[g++]=0,d.vertices[g++]=1,g=0,d.faces[g++]=0,d.faces[g++]=1,d.faces[g++]=2,d.faces[g++]=0,d.faces[g++]=2,d.faces[g++]=3,d.vertexBuffer=a.createBuffer(),d.elementBuffer=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,d.vertexBuffer),a.bufferData(a.ARRAY_BUFFER,d.vertices,a.STATIC_DRAW),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,d.elementBuffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,d.faces,a.STATIC_DRAW),d.tempTexture=a.createTexture(),d.occlusionTexture=a.createTexture(),a.bindTexture(a.TEXTURE_2D,d.tempTexture),a.texImage2D(a.TEXTURE_2D,0,a.RGB,16,16,0,a.RGB,a.UNSIGNED_BYTE,null),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST),a.bindTexture(a.TEXTURE_2D,d.occlusionTexture),a.texImage2D(a.TEXTURE_2D,0,a.RGBA,16,16,0,a.RGBA,a.UNSIGNED_BYTE,null),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST),a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(d.hasVertexTexture=!1,d.program=e(THREE.ShaderFlares.lensFlare,c)):(d.hasVertexTexture=!0,d.program=e(THREE.ShaderFlares.lensFlareVertexTexture,c)),d.attributes={},d.uniforms={},d.attributes.vertex=a.getAttribLocation(d.program,"position"),d.attributes.uv=a.getAttribLocation(d.program,"uv"),d.uniforms.renderType=a.getUniformLocation(d.program,"renderType"),d.uniforms.map=a.getUniformLocation(d.program,"map"),d.uniforms.occlusionMap=a.getUniformLocation(d.program,"occlusionMap"),d.uniforms.opacity=a.getUniformLocation(d.program,"opacity"),d.uniforms.color=a.getUniformLocation(d.program,"color"),d.uniforms.scale=a.getUniformLocation(d.program,"scale"),d.uniforms.rotation=a.getUniformLocation(d.program,"rotation"),d.uniforms.screenPosition=a.getUniformLocation(d.program,"screenPosition")},this.render=function(c,e,f,g){var h=c.__webglFlares,i=h.length;if(i){var j=new THREE.Vector3,k=g/f,l=.5*f,m=.5*g,n=16/g,o=new THREE.Vector2(n*k,n),p=new THREE.Vector3(1,1,0),q=new THREE.Vector2(1,1),r=d.uniforms,s=d.attributes;a.useProgram(d.program),a.enableVertexAttribArray(d.attributes.vertex),a.enableVertexAttribArray(d.attributes.uv),a.uniform1i(r.occlusionMap,0),a.uniform1i(r.map,1),a.bindBuffer(a.ARRAY_BUFFER,d.vertexBuffer),a.vertexAttribPointer(s.vertex,2,a.FLOAT,!1,16,0),a.vertexAttribPointer(s.uv,2,a.FLOAT,!1,16,8),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,d.elementBuffer),a.disable(a.CULL_FACE),a.depthMask(!1);var t,u,v,w,x;for(t=0;t<i;t++)if(n=16/g,o.set(n*k,n),w=h[t],j.set(w.matrixWorld.elements[12],w.matrixWorld.elements[13],w.matrixWorld.elements[14]),j.applyMatrix4(e.matrixWorldInverse),j.applyProjection(e.projectionMatrix),p.copy(j),q.x=p.x*l+l,q.y=p.y*m+m,d.hasVertexTexture||q.x>0&&q.x<f&&q.y>0&&q.y<g)for(a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,d.tempTexture),a.copyTexImage2D(a.TEXTURE_2D,0,a.RGB,q.x-8,q.y-8,16,16,0),a.uniform1i(r.renderType,0),a.uniform2f(r.scale,o.x,o.y),a.uniform3f(r.screenPosition,p.x,p.y,p.z),a.disable(a.BLEND),a.enable(a.DEPTH_TEST),a.drawElements(a.TRIANGLES,6,a.UNSIGNED_SHORT,0),a.activeTexture(a.TEXTURE0),a.bindTexture(a.TEXTURE_2D,d.occlusionTexture),a.copyTexImage2D(a.TEXTURE_2D,0,a.RGBA,q.x-8,q.y-8,16,16,0),a.uniform1i(r.renderType,1),a.disable(a.DEPTH_TEST),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,d.tempTexture),a.drawElements(a.TRIANGLES,6,a.UNSIGNED_SHORT,0),w.positionScreen.copy(p),w.customUpdateCallback?w.customUpdateCallback(w):w.updateLensFlares(),a.uniform1i(r.renderType,2),a.enable(a.BLEND),u=0,v=w.lensFlares.length;u<v;u++)x=w.lensFlares[u],x.opacity>.001&&x.scale>.001&&(p.x=x.x,p.y=x.y,p.z=x.z,n=x.size*x.scale/g,o.x=n*k,o.y=n,a.uniform3f(r.screenPosition,p.x,p.y,p.z),a.uniform2f(r.scale,o.x,o.y),a.uniform1f(r.rotation,x.rotation),a.uniform1f(r.opacity,x.opacity),a.uniform3f(r.color,x.color.r,x.color.g,x.color.b),b.setBlending(x.blending,x.blendEquation,x.blendSrc,x.blendDst),b.setTexture(x.texture,1),a.drawElements(a.TRIANGLES,6,a.UNSIGNED_SHORT,0));a.enable(a.CULL_FACE),a.enable(a.DEPTH_TEST),a.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function l(a,b){var c=new THREE.DirectionalLight;c.isVirtual=!0,c.onlyShadow=!0,c.castShadow=!0,c.shadowCameraNear=a.shadowCameraNear,c.shadowCameraFar=a.shadowCameraFar,c.shadowCameraLeft=a.shadowCameraLeft,c.shadowCameraRight=a.shadowCameraRight,c.shadowCameraBottom=a.shadowCameraBottom,c.shadowCameraTop=a.shadowCameraTop,c.shadowCameraVisible=a.shadowCameraVisible,c.shadowDarkness=a.shadowDarkness,c.shadowBias=a.shadowCascadeBias[b],c.shadowMapWidth=a.shadowCascadeWidth[b],c.shadowMapHeight=a.shadowCascadeHeight[b],c.pointsWorld=[],c.pointsFrustum=[];for(var d=c.pointsWorld,e=c.pointsFrustum,f=0;f<8;f++)d[f]=new THREE.Vector3,e[f]=new THREE.Vector3;var g=a.shadowCascadeNearZ[b],h=a.shadowCascadeFarZ[b];return e[0].set(-1,-1,g),e[1].set(1,-1,g),e[2].set(-1,1,g),e[3].set(1,1,g),e[4].set(-1,-1,h),e[5].set(1,-1,h),e[6].set(-1,1,h),e[7].set(1,1,h),c}function m(a,b){var c=a.shadowCascadeArray[b];c.position.copy(a.position),c.target.position.copy(a.target.position),c.lookAt(c.target),c.shadowCameraVisible=a.shadowCameraVisible,c.shadowDarkness=a.shadowDarkness,c.shadowBias=a.shadowCascadeBias[b];var d=a.shadowCascadeNearZ[b],e=a.shadowCascadeFarZ[b],f=c.pointsFrustum;f[0].z=d,f[1].z=d,f[2].z=d,f[3].z=d,f[4].z=e,f[5].z=e,f[6].z=e,f[7].z=e}function n(a,b){var c=b.shadowCamera,d=b.pointsFrustum,e=b.pointsWorld;i.set(1/0,1/0,1/0),j.set(-(1/0),-(1/0),-(1/0));for(var f=0;f<8;f++){var g=e[f];g.copy(d[f]),THREE.ShadowMapPlugin.__projector.unprojectVector(g,a),g.applyMatrix4(c.matrixWorldInverse),g.x<i.x&&(i.x=g.x),g.x>j.x&&(j.x=g.x),g.y<i.y&&(i.y=g.y),g.y>j.y&&(j.y=g.y),g.z<i.z&&(i.z=g.z),g.z>j.z&&(j.z=g.z)}c.left=i.x,c.right=j.x,c.top=j.y,c.bottom=i.y,c.updateProjectionMatrix()}function o(a){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[0]:a.material}var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context,b=g;var h=THREE.ShaderLib.depthRGBA,i=THREE.UniformsUtils.clone(h.uniforms);c=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i}),d=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,morphTargets:!0}),e=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,skinning:!0}),f=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,morphTargets:!0,skinning:!0}),c._shadowPass=!0,d._shadowPass=!0,e._shadowPass=!0,f._shadowPass=!0},this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)},this.update=function(i,j){var p,q,r,s,t,u,v,w,y,z,A,B,C,D,E=[],F=0,G=null;for(a.clearColor(1,1,1,1),a.disable(a.BLEND),a.enable(a.CULL_FACE),a.frontFace(a.CCW),b.shadowMapCullFace===THREE.CullFaceFront?a.cullFace(a.FRONT):a.cullFace(a.BACK),b.setDepthTest(!0),p=0,q=i.__lights.length;p<q;p++)if(C=i.__lights[p],C.castShadow)if(C instanceof THREE.DirectionalLight&&C.shadowCascade)for(t=0;t<C.shadowCascadeCount;t++){var H;if(C.shadowCascadeArray[t])H=C.shadowCascadeArray[t];else{H=l(C,t),H.originalCamera=j;var I=new THREE.Gyroscope;I.position=C.shadowCascadeOffset,I.add(H),I.add(H.target),j.add(I),C.shadowCascadeArray[t]=H,console.log("Created virtualLight",H)}m(C,t),E[F]=H,F++}else E[F]=C,F++;for(p=0,q=E.length;p<q;p++){if(C=E[p],!C.shadowMap){var J=THREE.LinearFilter;b.shadowMapType===THREE.PCFSoftShadowMap&&(J=THREE.NearestFilter);var K={minFilter:J,magFilter:J,format:THREE.RGBAFormat};C.shadowMap=new THREE.WebGLRenderTarget(C.shadowMapWidth,C.shadowMapHeight,K),C.shadowMapSize=new THREE.Vector2(C.shadowMapWidth,C.shadowMapHeight),C.shadowMatrix=new THREE.Matrix4}if(!C.shadowCamera){if(C instanceof THREE.SpotLight)C.shadowCamera=new THREE.PerspectiveCamera(C.shadowCameraFov,C.shadowMapWidth/C.shadowMapHeight,C.shadowCameraNear,C.shadowCameraFar);else{if(!(C instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}C.shadowCamera=new THREE.OrthographicCamera(C.shadowCameraLeft,C.shadowCameraRight,C.shadowCameraTop,C.shadowCameraBottom,C.shadowCameraNear,C.shadowCameraFar)}i.add(C.shadowCamera),i.autoUpdate===!0&&i.updateMatrixWorld()}for(C.shadowCameraVisible&&!C.cameraHelper&&(C.cameraHelper=new THREE.CameraHelper(C.shadowCamera),C.shadowCamera.add(C.cameraHelper)),C.isVirtual&&H.originalCamera==j&&n(j,C),u=C.shadowMap,v=C.shadowMatrix,w=C.shadowCamera,w.position.getPositionFromMatrix(C.matrixWorld),k.getPositionFromMatrix(C.target.matrixWorld),w.lookAt(k),w.updateMatrixWorld(),w.matrixWorldInverse.getInverse(w.matrixWorld),C.cameraHelper&&(C.cameraHelper.visible=C.shadowCameraVisible),C.shadowCameraVisible&&C.cameraHelper.update(),v.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),v.multiply(w.projectionMatrix),v.multiply(w.matrixWorldInverse),h.multiplyMatrices(w.projectionMatrix,w.matrixWorldInverse),g.setFromMatrix(h),b.setRenderTarget(u),b.clear(),D=i.__webglObjects,r=0,s=D.length;r<s;r++)A=D[r],B=A.object,A.render=!1,B.visible&&B.castShadow&&((B instanceof THREE.Mesh||B instanceof THREE.ParticleSystem)&&B.frustumCulled&&!g.intersectsObject(B)||(B._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,B.matrixWorld),A.render=!0));var L,M,N;for(r=0,s=D.length;r<s;r++)A=D[r],A.render&&(B=A.object,y=A.buffer,L=o(B),M=B.geometry.morphTargets.length>0&&L.morphTargets,N=B instanceof THREE.SkinnedMesh&&L.skinning,z=B.customDepthMaterial?B.customDepthMaterial:N?M?f:e:M?d:c,y instanceof THREE.BufferGeometry?b.renderBufferDirect(w,i.__lights,G,z,y,B):b.renderBuffer(w,i.__lights,G,z,y,B));for(D=i.__webglObjectsImmediate,r=0,s=D.length;r<s;r++)A=D[r],B=A.object,B.visible&&B.castShadow&&(B._modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,B.matrixWorld),b.renderImmediateObject(w,i.__lights,G,c,B))}var O=b.getClearColor(),P=b.getClearAlpha();a.clearColor(O.r,O.g,O.b,P),a.enable(a.BLEND),b.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(b,c){var d=a.createProgram(),e=a.createShader(a.FRAGMENT_SHADER),f=a.createShader(a.VERTEX_SHADER),g="precision "+c+" float;\n";return a.shaderSource(e,g+b.fragmentShader),a.shaderSource(f,g+b.vertexShader),a.compileShader(e),a.compileShader(f),a.attachShader(d,e),a.attachShader(d,f),a.linkProgram(d),d}function f(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var a,b,c,d={};this.init=function(f){a=f.context,b=f,c=f.getPrecision(),d.vertices=new Float32Array(16),d.faces=new Uint16Array(6);var g=0;d.vertices[g++]=-1,d.vertices[g++]=-1,d.vertices[g++]=0,d.vertices[g++]=0,d.vertices[g++]=1,d.vertices[g++]=-1,d.vertices[g++]=1,d.vertices[g++]=0,d.vertices[g++]=1,d.vertices[g++]=1,d.vertices[g++]=1,d.vertices[g++]=1,d.vertices[g++]=-1,d.vertices[g++]=1,d.vertices[g++]=0,d.vertices[g++]=1,g=0,d.faces[g++]=0,d.faces[g++]=1,d.faces[g++]=2,d.faces[g++]=0,d.faces[g++]=2,d.faces[g++]=3,d.vertexBuffer=a.createBuffer(),d.elementBuffer=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,d.vertexBuffer),a.bufferData(a.ARRAY_BUFFER,d.vertices,a.STATIC_DRAW),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,d.elementBuffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,d.faces,a.STATIC_DRAW),d.program=e(THREE.ShaderSprite.sprite,c),d.attributes={},d.uniforms={},d.attributes.position=a.getAttribLocation(d.program,"position"),d.attributes.uv=a.getAttribLocation(d.program,"uv"),d.uniforms.uvOffset=a.getUniformLocation(d.program,"uvOffset"),d.uniforms.uvScale=a.getUniformLocation(d.program,"uvScale"),d.uniforms.rotation=a.getUniformLocation(d.program,"rotation"),d.uniforms.scale=a.getUniformLocation(d.program,"scale"),d.uniforms.alignment=a.getUniformLocation(d.program,"alignment"),d.uniforms.color=a.getUniformLocation(d.program,"color"),d.uniforms.map=a.getUniformLocation(d.program,"map"),d.uniforms.opacity=a.getUniformLocation(d.program,"opacity"),d.uniforms.useScreenCoordinates=a.getUniformLocation(d.program,"useScreenCoordinates"),d.uniforms.sizeAttenuation=a.getUniformLocation(d.program,"sizeAttenuation"),d.uniforms.screenPosition=a.getUniformLocation(d.program,"screenPosition"),d.uniforms.modelViewMatrix=a.getUniformLocation(d.program,"modelViewMatrix"),d.uniforms.projectionMatrix=a.getUniformLocation(d.program,"projectionMatrix"),d.uniforms.fogType=a.getUniformLocation(d.program,"fogType"),d.uniforms.fogDensity=a.getUniformLocation(d.program,"fogDensity"),d.uniforms.fogNear=a.getUniformLocation(d.program,"fogNear"),d.uniforms.fogFar=a.getUniformLocation(d.program,"fogFar"),d.uniforms.fogColor=a.getUniformLocation(d.program,"fogColor"),d.uniforms.alphaTest=a.getUniformLocation(d.program,"alphaTest")},this.render=function(c,e,g,h){var i=c.__webglSprites,j=i.length;if(j){var k=d.attributes,l=d.uniforms,m=h/g,n=.5*g,o=.5*h;a.useProgram(d.program),a.enableVertexAttribArray(k.position),a.enableVertexAttribArray(k.uv),a.disable(a.CULL_FACE),a.enable(a.BLEND),a.bindBuffer(a.ARRAY_BUFFER,d.vertexBuffer),a.vertexAttribPointer(k.position,2,a.FLOAT,!1,16,0),a.vertexAttribPointer(k.uv,2,a.FLOAT,!1,16,8),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,d.elementBuffer),a.uniformMatrix4fv(l.projectionMatrix,!1,e.projectionMatrix.elements),a.activeTexture(a.TEXTURE0),a.uniform1i(l.map,0);var p=0,q=0,r=c.fog;r?(a.uniform3f(l.fogColor,r.color.r,r.color.g,r.color.b),r instanceof THREE.Fog?(a.uniform1f(l.fogNear,r.near),a.uniform1f(l.fogFar,r.far),a.uniform1i(l.fogType,1),p=1,q=1):r instanceof THREE.FogExp2&&(a.uniform1f(l.fogDensity,r.density),a.uniform1i(l.fogType,2),p=2,q=2)):(a.uniform1i(l.fogType,0),p=0,q=0);var s,t,u,w,x,y=[];for(s=0;s<j;s++)t=i[s],u=t.material,t.visible&&0!==u.opacity&&(u.useScreenCoordinates?t.z=-t.position.z:(t._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,t.matrixWorld),t.z=-t._modelViewMatrix.elements[14]));for(i.sort(f),s=0;s<j;s++)t=i[s],u=t.material,t.visible&&0!==u.opacity&&u.map&&u.map.image&&u.map.image.width&&(a.uniform1f(l.alphaTest,u.alphaTest),u.useScreenCoordinates===!0?(a.uniform1i(l.useScreenCoordinates,1),a.uniform3f(l.screenPosition,(t.position.x*b.devicePixelRatio-n)/n,(o-t.position.y*b.devicePixelRatio)/o,Math.max(0,Math.min(1,t.position.z))),y[0]=b.devicePixelRatio,y[1]=b.devicePixelRatio):(a.uniform1i(l.useScreenCoordinates,0),a.uniform1i(l.sizeAttenuation,u.sizeAttenuation?1:0),a.uniformMatrix4fv(l.modelViewMatrix,!1,t._modelViewMatrix.elements),y[0]=1,y[1]=1),x=c.fog&&u.fog?q:0,p!==x&&(a.uniform1i(l.fogType,x),p=x),w=1/(u.scaleByViewport?h:1),y[0]*=w*m*t.scale.x,y[1]*=w*t.scale.y,a.uniform2f(l.uvScale,u.uvScale.x,u.uvScale.y),a.uniform2f(l.uvOffset,u.uvOffset.x,u.uvOffset.y),a.uniform2f(l.alignment,u.alignment.x,u.alignment.y),a.uniform1f(l.opacity,u.opacity),a.uniform3f(l.color,u.color.r,u.color.g,u.color.b),a.uniform1f(l.rotation,t.rotation),a.uniform2fv(l.scale,y),b.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),b.setDepthTest(u.depthTest),b.setDepthWrite(u.depthWrite),b.setTexture(u.map,0),a.drawElements(a.TRIANGLES,6,a.UNSIGNED_SHORT,0));a.enable(a.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function i(a){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[0]:a.material}this.enabled=!1,this.renderTarget=null;var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4;this.init=function(g){a=g.context,b=g;var h=THREE.ShaderLib.depthRGBA,i=THREE.UniformsUtils.clone(h.uniforms);c=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i}),d=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,morphTargets:!0}),e=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,skinning:!0}),f=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:i,morphTargets:!0,skinning:!0}),c._shadowPass=!0,d._shadowPass=!0,e._shadowPass=!0,f._shadowPass=!0},this.render=function(a,b){this.enabled&&this.update(a,b)},this.update=function(j,k){var n,o,r,s,t,u,w,x=null;for(a.clearColor(1,1,1,1),a.disable(a.BLEND),b.setDepthTest(!0),j.autoUpdate===!0&&j.updateMatrixWorld(),k.matrixWorldInverse.getInverse(k.matrixWorld),h.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),g.setFromMatrix(h),b.setRenderTarget(this.renderTarget),b.clear(),w=j.__webglObjects,n=0,o=w.length;n<o;n++)t=w[n],u=t.object,t.render=!1,u.visible&&((u instanceof THREE.Mesh||u instanceof THREE.ParticleSystem)&&u.frustumCulled&&!g.intersectsObject(u)||(u._modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,u.matrixWorld),t.render=!0));var y,z,A;for(n=0,o=w.length;n<o;n++)if(t=w[n],t.render){if(u=t.object,r=t.buffer,u instanceof THREE.ParticleSystem&&!u.customDepthMaterial)continue;y=i(u),y&&b.setMaterialFaces(u.material),z=u.geometry.morphTargets.length>0&&y.morphTargets,A=u instanceof THREE.SkinnedMesh&&y.skinning,s=u.customDepthMaterial?u.customDepthMaterial:A?z?f:e:z?d:c,r instanceof THREE.BufferGeometry?b.renderBufferDirect(k,j.__lights,x,s,r,u):b.renderBuffer(k,j.__lights,x,s,r,u)}for(w=j.__webglObjectsImmediate,n=0,o=w.length;n<o;n++)t=w[n],u=t.object,u.visible&&(u._modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,u.matrixWorld),b.renderImmediateObject(k,j.__lights,x,c,u));var B=b.getClearColor(),C=b.getClearAlpha();a.clearColor(B.r,B.g,B.b,C),a.enable(a.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility = (       visibility.r / 9.0 ) *","( 1.0 - visibility.g / 9.0 ) *","(       visibility.b / 9.0 ) *","( 1.0 - visibility.a / 9.0 );","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int sizeAttenuation;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")
}};

// CSS 3D RENDERER
THREE.CSS3DObject=function(a){THREE.Object3D.call(this),this.element=a,this.element.style.position="absolute",this.element.style.WebkitTransformStyle="preserve-3d",this.element.style.MozTransformStyle="preserve-3d",this.element.style.oTransformStyle="preserve-3d",this.element.style.transformStyle="preserve-3d"},THREE.CSS3DObject.prototype=Object.create(THREE.Object3D.prototype),THREE.CSS3DSprite=function(a){THREE.CSS3DObject.call(this,a)},THREE.CSS3DSprite.prototype=Object.create(THREE.CSS3DObject.prototype),THREE.CSS3DRenderer=function(){var a,b,c,d,e=new THREE.Projector,f=new THREE.Matrix4;this.domElement=document.createElement("div"),this.domElement.style.overflow="hidden",this.domElement.style.WebkitTransformStyle="preserve-3d",this.domElement.style.WebkitPerspectiveOrigin="50% 50%",this.domElement.style.MozTransformStyle="preserve-3d",this.domElement.style.MozPerspectiveOrigin="50% 50%",this.domElement.style.oTransformStyle="preserve-3d",this.domElement.style.oPerspectiveOrigin="50% 50%",this.domElement.style.transformStyle="preserve-3d",this.domElement.style.perspectiveOrigin="50% 50%",this.cameraElement=document.createElement("div"),this.cameraElement.style.WebkitTransformStyle="preserve-3d",this.cameraElement.style.MozTransformStyle="preserve-3d",this.cameraElement.style.oTransformStyle="preserve-3d",this.cameraElement.style.transformStyle="preserve-3d",this.domElement.appendChild(this.cameraElement),this.setSize=function(e,f){a=e,b=f,c=a/2,d=b/2,this.domElement.style.width=e+"px",this.domElement.style.height=f+"px",this.cameraElement.style.width=e+"px",this.cameraElement.style.height=f+"px"};var g=function(a){return Math.abs(a)<1e-6?0:a},h=function(a){var b=a.elements;return"matrix3d("+g(b[0])+","+g(-b[1])+","+g(b[2])+","+g(b[3])+","+g(b[4])+","+g(-b[5])+","+g(b[6])+","+g(b[7])+","+g(b[8])+","+g(-b[9])+","+g(b[10])+","+g(b[11])+","+g(b[12])+","+g(-b[13])+","+g(b[14])+","+g(b[15])+")"},i=function(a){var b=a.elements,c="translate3d(-50%,-50%,0) matrix3d("+g(b[0])+","+g(b[1])+","+g(b[2])+","+g(b[3])+","+g(-b[4])+","+g(-b[5])+","+g(-b[6])+","+g(-b[7])+","+g(b[8])+","+g(b[9])+","+g(b[10])+","+g(b[11])+","+g(b[12])+","+g(b[13])+","+g(b[14])+","+g(b[15])+")";return{zIndex:g(b[14]),style:c}};this.render=function(a,g){var j=.5/Math.tan(THREE.Math.degToRad(.5*g.fov))*b;this.domElement.style.WebkitPerspective=j+"px",this.domElement.style.MozPerspective=j+"px",this.domElement.style.oPerspective=j+"px",this.domElement.style.perspective=j+"px";var k=e.projectScene(a,g,!1).objects,l="translate3d(0,0,"+j+"px)"+h(g.matrixWorldInverse)+" translate3d("+c+"px,"+d+"px, 0)",m=10;this.cameraElement.style.WebkitTransform=l,this.cameraElement.style.MozTransform=l,this.cameraElement.style.oTransform=l,this.cameraElement.style.transform=l;for(var n=0,o=k.length;n<o;n++){var p=k[n].object;if(p instanceof THREE.CSS3DObject){var q=p.element;if(p instanceof THREE.CSS3DSprite){f.copy(g.matrixWorldInverse),f.transpose(),f.copyPosition(p.matrixWorld),f.scale(p.scale),f.elements[3]=0,f.elements[7]=0,f.elements[11]=0,f.elements[15]=1;var r=i(f);l=r.style,m=r.zIndex}else{var r=i(p.matrixWorld);l=r.style,m=r.zIndex}q.style.WebkitTransform=l,q.style.MozTransform=l,q.style.oTransform=l,q.style.transform=l,q.style.zIndex=Math.floor(m/10),q.parentNode!==this.cameraElement&&this.cameraElement.appendChild(q)}}}};

// TWEEN.JS
void 0===Date.now&&(Date.now=function(){return(new Date).valueOf()});var TWEEN=TWEEN||function(){var a=[];return{REVISION:"8",getAll:function(){return a},removeAll:function(){a=[]},add:function(b){a.push(b)},remove:function(b){var c=a.indexOf(b);c!==-1&&a.splice(c,1)},update:function(b){if(0===a.length)return!1;var c=0,d=a.length;for(b=void 0!==b?b:Date.now();c<d;)a[c].update(b)?c++:(a.splice(c,1),d--);return!0}}}();TWEEN.Tween=function(a){var b=a,c={},d={},e=1e3,f=0,g=null,h=TWEEN.Easing.Linear.None,i=TWEEN.Interpolation.Linear,j=[],k=null,l=!1,m=null,n=null;this.to=function(a,b){return void 0!==b&&(e=b),d=a,this},this.start=function(a){TWEEN.add(this),l=!1,g=void 0!==a?a:Date.now(),g+=f;for(var e in d)if(null!==b[e]&&e in b){if(d[e]instanceof Array){if(0===d[e].length)continue;d[e]=[b[e]].concat(d[e])}c[e]=b[e]}return this},this.stop=function(){return TWEEN.remove(this),this},this.delay=function(a){return f=a,this},this.easing=function(a){return h=a,this},this.interpolation=function(a){return i=a,this},this.chain=function(){return j=arguments,this},this.onStart=function(a){return k=a,this},this.onUpdate=function(a){return m=a,this},this.onComplete=function(a){return n=a,this},this.update=function(a){if(a<g)return!0;l===!1&&(null!==k&&k.call(b),l=!0);var f=(a-g)/e;f=f>1?1:f;var o=h(f);for(var p in c){var q=c[p],r=d[p];r instanceof Array?b[p]=i(r,o):b[p]=q+(r-q)*o}if(null!==m&&m.call(b,o),1==f){null!==n&&n.call(b);for(var s=0,t=j.length;s<t;s++)j[s].start(a);return!1}return!0}},TWEEN.Easing={Linear:{None:function(a){return a}},Quadratic:{In:function(a){return a*a},Out:function(a){return a*(2-a)},InOut:function(a){return(a*=2)<1?.5*a*a:-.5*(--a*(a-2)-1)}},Cubic:{In:function(a){return a*a*a},Out:function(a){return--a*a*a+1},InOut:function(a){return(a*=2)<1?.5*a*a*a:.5*((a-=2)*a*a+2)}},Quartic:{In:function(a){return a*a*a*a},Out:function(a){return 1- --a*a*a*a},InOut:function(a){return(a*=2)<1?.5*a*a*a*a:-.5*((a-=2)*a*a*a-2)}},Quintic:{In:function(a){return a*a*a*a*a},Out:function(a){return--a*a*a*a*a+1},InOut:function(a){return(a*=2)<1?.5*a*a*a*a*a:.5*((a-=2)*a*a*a*a+2)}},Sinusoidal:{In:function(a){return 1-Math.cos(a*Math.PI/2)},Out:function(a){return Math.sin(a*Math.PI/2)},InOut:function(a){return.5*(1-Math.cos(Math.PI*a))}},Exponential:{In:function(a){return 0===a?0:Math.pow(1024,a-1)},Out:function(a){return 1===a?1:1-Math.pow(2,-10*a)},InOut:function(a){return 0===a?0:1===a?1:(a*=2)<1?.5*Math.pow(1024,a-1):.5*(-Math.pow(2,-10*(a-1))+2)}},Circular:{In:function(a){return 1-Math.sqrt(1-a*a)},Out:function(a){return Math.sqrt(1- --a*a)},InOut:function(a){return(a*=2)<1?-.5*(Math.sqrt(1-a*a)-1):.5*(Math.sqrt(1-(a-=2)*a)+1)}},Elastic:{In:function(a){var b,c=.1,d=.4;return 0===a?0:1===a?1:(!c||c<1?(c=1,b=d/4):b=d*Math.asin(1/c)/(2*Math.PI),-(c*Math.pow(2,10*(a-=1))*Math.sin((a-b)*(2*Math.PI)/d)))},Out:function(a){var b,c=.1,d=.4;return 0===a?0:1===a?1:(!c||c<1?(c=1,b=d/4):b=d*Math.asin(1/c)/(2*Math.PI),c*Math.pow(2,-10*a)*Math.sin((a-b)*(2*Math.PI)/d)+1)},InOut:function(a){var b,c=.1,d=.4;return 0===a?0:1===a?1:(!c||c<1?(c=1,b=d/4):b=d*Math.asin(1/c)/(2*Math.PI),(a*=2)<1?-.5*(c*Math.pow(2,10*(a-=1))*Math.sin((a-b)*(2*Math.PI)/d)):c*Math.pow(2,-10*(a-=1))*Math.sin((a-b)*(2*Math.PI)/d)*.5+1)}},Back:{In:function(a){var b=1.70158;return a*a*((b+1)*a-b)},Out:function(a){var b=1.70158;return--a*a*((b+1)*a+b)+1},InOut:function(a){var b=2.5949095;return(a*=2)<1?.5*(a*a*((b+1)*a-b)):.5*((a-=2)*a*((b+1)*a+b)+2)}},Bounce:{In:function(a){return 1-TWEEN.Easing.Bounce.Out(1-a)},Out:function(a){return a<1/2.75?7.5625*a*a:a<2/2.75?7.5625*(a-=1.5/2.75)*a+.75:a<2.5/2.75?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375},InOut:function(a){return a<.5?.5*TWEEN.Easing.Bounce.In(2*a):.5*TWEEN.Easing.Bounce.Out(2*a-1)+.5}}},TWEEN.Interpolation={Linear:function(a,b){var c=a.length-1,d=c*b,e=Math.floor(d),f=TWEEN.Interpolation.Utils.Linear;return b<0?f(a[0],a[1],d):b>1?f(a[c],a[c-1],c-d):f(a[e],a[e+1>c?c:e+1],d-e)},Bezier:function(a,b){var g,c=0,d=a.length-1,e=Math.pow,f=TWEEN.Interpolation.Utils.Bernstein;for(g=0;g<=d;g++)c+=e(1-b,d-g)*e(b,g)*a[g]*f(d,g);return c},CatmullRom:function(a,b){var c=a.length-1,d=c*b,e=Math.floor(d),f=TWEEN.Interpolation.Utils.CatmullRom;return a[0]===a[c]?(b<0&&(e=Math.floor(d=c*(1+b))),f(a[(e-1+c)%c],a[e],a[(e+1)%c],a[(e+2)%c],d-e)):b<0?a[0]-(f(a[0],a[0],a[1],a[1],-d)-a[0]):b>1?a[c]-(f(a[c],a[c],a[c-1],a[c-1],d-c)-a[c]):f(a[e?e-1:0],a[e],a[c<e+1?c:e+1],a[c<e+2?c:e+2],d-e)},Utils:{Linear:function(a,b,c){return(b-a)*c+a},Bernstein:function(a,b){var c=TWEEN.Interpolation.Utils.Factorial;return c(a)/c(b)/c(a-b)},Factorial:function(){var a=[1];return function(b){var d,c=1;if(a[b])return a[b];for(d=b;d>1;d--)c*=d;return a[b]=c}}(),CatmullRom:function(a,b,c,d,e){var f=.5*(c-a),g=.5*(d-b),h=e*e,i=e*h;return(2*b-2*c+f+g)*i+(-3*b+3*c-2*f-g)*h+f*e+b}}};
THREE.TWEEN = TWEEN;

if (typeof exports !== 'undefined') {
  if (typeof module !== 'undefined' && module.exports) {
    exports = module.exports = THREE;
  }
  exports.THREE = THREE;
} else {
  window.CSS3D = THREE;
}
